// +build !generator

// Code generated by generator enum. DO NOT EDIT.

package call_state

import (
	driver "database/sql/driver"
	fmt "fmt"

	dot "o.o/capi/dot"
	mix "o.o/capi/mix"
)

var __jsonNull = []byte("null")

var enumCallStateName = map[int]string{
	0: "unknown",
	1: "answered",
	2: "not_answered",
}

var enumCallStateValue = map[string]int{
	"unknown":      0,
	"answered":     1,
	"not_answered": 2,
}

func ParseCallState(s string) (CallState, bool) {
	val, ok := enumCallStateValue[s]
	return CallState(val), ok
}

func ParseCallStateWithDefault(s string, d CallState) CallState {
	val, ok := enumCallStateValue[s]
	if !ok {
		return d
	}
	return CallState(val)
}

func (e CallState) Apply(d CallState) CallState {
	if e == 0 {
		return d
	}
	return e
}

func (e CallState) Enum() int {
	return int(e)
}

func (e CallState) Name() string {
	return enumCallStateName[e.Enum()]
}

func (e CallState) String() string {
	s, ok := enumCallStateName[e.Enum()]
	if ok {
		return s
	}
	return fmt.Sprintf("CallState(%v)", e.Enum())
}

func (e CallState) MarshalJSON() ([]byte, error) {
	return []byte("\"" + enumCallStateName[e.Enum()] + "\""), nil
}

func (e *CallState) UnmarshalJSON(data []byte) error {
	value, err := mix.UnmarshalJSONEnumInt(enumCallStateValue, data, "CallState")
	if err != nil {
		return err
	}
	*e = CallState(value)
	return nil
}

func (e CallState) Value() (driver.Value, error) {
	if e == 0 {
		return nil, nil
	}
	return e.String(), nil
}

func (e *CallState) Scan(src interface{}) error {
	value, err := mix.ScanEnumInt(enumCallStateValue, src, "CallState")
	*e = (CallState)(value)
	return err
}

func (e CallState) Wrap() NullCallState {
	return WrapCallState(e)
}

func ParseCallStateWithNull(s dot.NullString, d CallState) NullCallState {
	if !s.Valid {
		return NullCallState{}
	}
	val, ok := enumCallStateValue[s.String]
	if !ok {
		return d.Wrap()
	}
	return CallState(val).Wrap()
}

func WrapCallState(enum CallState) NullCallState {
	return NullCallState{Enum: enum, Valid: true}
}

func (n NullCallState) Apply(s CallState) CallState {
	if n.Valid {
		return n.Enum
	}
	return s
}

func (n NullCallState) Value() (driver.Value, error) {
	if !n.Valid {
		return nil, nil
	}
	return n.Enum.Value()
}

func (n *NullCallState) Scan(src interface{}) error {
	if src == nil {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.Scan(src)
}

func (n NullCallState) MarshalJSON() ([]byte, error) {
	if n.Valid {
		return n.Enum.MarshalJSON()
	}
	return __jsonNull, nil
}

func (n *NullCallState) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.UnmarshalJSON(data)
}
