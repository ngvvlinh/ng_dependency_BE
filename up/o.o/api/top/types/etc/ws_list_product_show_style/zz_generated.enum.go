// +build !generator

// Code generated by generator enum. DO NOT EDIT.

package ws_list_product_show_style

import (
	driver "database/sql/driver"
	fmt "fmt"

	dot "o.o/capi/dot"
	mix "o.o/capi/mix"
)

var __jsonNull = []byte("null")

var enumWsListProductShowStyleName = map[int]string{
	0: "first",
	1: "second",
	2: "third",
	3: "fourth",
}

var enumWsListProductShowStyleValue = map[string]int{
	"first":  0,
	"second": 1,
	"third":  2,
	"fourth": 3,
}

func ParseWsListProductShowStyle(s string) (WsListProductShowStyle, bool) {
	val, ok := enumWsListProductShowStyleValue[s]
	return WsListProductShowStyle(val), ok
}

func ParseWsListProductShowStyleWithDefault(s string, d WsListProductShowStyle) WsListProductShowStyle {
	val, ok := enumWsListProductShowStyleValue[s]
	if !ok {
		return d
	}
	return WsListProductShowStyle(val)
}

func (e WsListProductShowStyle) Apply(d WsListProductShowStyle) WsListProductShowStyle {
	if e == 0 {
		return d
	}
	return e
}

func (e WsListProductShowStyle) Enum() int {
	return int(e)
}

func (e WsListProductShowStyle) Name() string {
	return enumWsListProductShowStyleName[e.Enum()]
}

func (e WsListProductShowStyle) String() string {
	s, ok := enumWsListProductShowStyleName[e.Enum()]
	if ok {
		return s
	}
	return fmt.Sprintf("WsListProductShowStyle(%v)", e.Enum())
}

func (e WsListProductShowStyle) MarshalJSON() ([]byte, error) {
	return []byte("\"" + enumWsListProductShowStyleName[e.Enum()] + "\""), nil
}

func (e *WsListProductShowStyle) UnmarshalJSON(data []byte) error {
	value, err := mix.UnmarshalJSONEnumInt(enumWsListProductShowStyleValue, data, "WsListProductShowStyle")
	if err != nil {
		return err
	}
	*e = WsListProductShowStyle(value)
	return nil
}

func (e WsListProductShowStyle) Value() (driver.Value, error) {
	if e == 0 {
		return nil, nil
	}
	return e.String(), nil
}

func (e *WsListProductShowStyle) Scan(src interface{}) error {
	value, err := mix.ScanEnumInt(enumWsListProductShowStyleValue, src, "WsListProductShowStyle")
	*e = (WsListProductShowStyle)(value)
	return err
}

func (e WsListProductShowStyle) Wrap() NullWsListProductShowStyle {
	return WrapWsListProductShowStyle(e)
}

func ParseWsListProductShowStyleWithNull(s dot.NullString, d WsListProductShowStyle) NullWsListProductShowStyle {
	if !s.Valid {
		return NullWsListProductShowStyle{}
	}
	val, ok := enumWsListProductShowStyleValue[s.String]
	if !ok {
		return d.Wrap()
	}
	return WsListProductShowStyle(val).Wrap()
}

func WrapWsListProductShowStyle(enum WsListProductShowStyle) NullWsListProductShowStyle {
	return NullWsListProductShowStyle{Enum: enum, Valid: true}
}

func (n NullWsListProductShowStyle) Apply(s WsListProductShowStyle) WsListProductShowStyle {
	if n.Valid {
		return n.Enum
	}
	return s
}

func (n NullWsListProductShowStyle) Value() (driver.Value, error) {
	if !n.Valid {
		return nil, nil
	}
	return n.Enum.Value()
}

func (n *NullWsListProductShowStyle) Scan(src interface{}) error {
	if src == nil {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.Scan(src)
}

func (n NullWsListProductShowStyle) MarshalJSON() ([]byte, error) {
	if n.Valid {
		return n.Enum.MarshalJSON()
	}
	return __jsonNull, nil
}

func (n *NullWsListProductShowStyle) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.UnmarshalJSON(data)
}
