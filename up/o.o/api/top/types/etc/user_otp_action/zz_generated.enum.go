// +build !generator

// Code generated by generator enum. DO NOT EDIT.

package user_otp_action

import (
	driver "database/sql/driver"
	fmt "fmt"

	dot "o.o/capi/dot"
	mix "o.o/capi/mix"
)

var __jsonNull = []byte("null")

var enumUserOTPActionName = map[int]string{
	0:  "unknown",
	1:  "reset_password",
	2:  "register",
	3:  "verify_phone",
	4:  "update_phone_first_code",
	5:  "update_phone_second_code",
	6:  "update_email_first_code",
	7:  "update_email_second_code",
	8:  "verify_email_using_otp",
	9:  "verify_email",
	10: "stoken_update_shop",
}

var enumUserOTPActionValue = map[string]int{
	"unknown":                  0,
	"reset_password":           1,
	"register":                 2,
	"verify_phone":             3,
	"update_phone_first_code":  4,
	"update_phone_second_code": 5,
	"update_email_first_code":  6,
	"update_email_second_code": 7,
	"verify_email_using_otp":   8,
	"verify_email":             9,
	"stoken_update_shop":       10,
}

var enumUserOTPActionMapLabel = map[string]map[string]string{
	"unknown": {
		"RefName": "Không xác định",
	},
	"reset_password": {
		"RefName": "Reset Password",
	},
	"register": {
		"RefName": "Register",
	},
	"verify_phone": {
		"RefName": "Xác thực số điện thoại",
	},
	"update_phone_first_code": {
		"RefName": "Cập nhật số điện thoại mã 1",
	},
	"update_phone_second_code": {
		"RefName": "Cập nhật số điện thoại mã 2",
	},
	"update_email_first_code": {
		"RefName": "Cập nhật email mã 1",
	},
	"update_email_second_code": {
		"RefName": "Cập nhật email mã 2",
	},
	"verify_email_using_otp": {
		"RefName": "Xác thực email sử dụng OTP",
	},
	"verify_email": {
		"RefName": "Xác thức email",
	},
	"stoken_update_shop": {
		"RefName": "Cập nhật tài khoản shop",
	},
}

func (e UserOTPAction) GetLabelRefName() string {
	val := enumUserOTPActionName[int(e)]
	nameVal := enumUserOTPActionMapLabel[val]
	return nameVal["RefName"]
}
func ParseUserOTPAction(s string) (UserOTPAction, bool) {
	val, ok := enumUserOTPActionValue[s]
	return UserOTPAction(val), ok
}

func ParseUserOTPActionWithDefault(s string, d UserOTPAction) UserOTPAction {
	val, ok := enumUserOTPActionValue[s]
	if !ok {
		return d
	}
	return UserOTPAction(val)
}

func (e UserOTPAction) Apply(d UserOTPAction) UserOTPAction {
	if e == 0 {
		return d
	}
	return e
}

func (e UserOTPAction) Enum() int {
	return int(e)
}

func (e UserOTPAction) Name() string {
	return enumUserOTPActionName[e.Enum()]
}

func (e UserOTPAction) String() string {
	s, ok := enumUserOTPActionName[e.Enum()]
	if ok {
		return s
	}
	return fmt.Sprintf("UserOTPAction(%v)", e.Enum())
}

func (e UserOTPAction) MarshalJSON() ([]byte, error) {
	return []byte("\"" + enumUserOTPActionName[e.Enum()] + "\""), nil
}

func (e *UserOTPAction) UnmarshalJSON(data []byte) error {
	value, err := mix.UnmarshalJSONEnumInt(enumUserOTPActionValue, data, "UserOTPAction")
	if err != nil {
		return err
	}
	*e = UserOTPAction(value)
	return nil
}

func (e UserOTPAction) Value() (driver.Value, error) {
	if e == 0 {
		return nil, nil
	}
	return e.String(), nil
}

func (e *UserOTPAction) Scan(src interface{}) error {
	value, err := mix.ScanEnumInt(enumUserOTPActionValue, src, "UserOTPAction")
	*e = (UserOTPAction)(value)
	return err
}

func (e UserOTPAction) Wrap() NullUserOTPAction {
	return WrapUserOTPAction(e)
}

func ParseUserOTPActionWithNull(s dot.NullString, d UserOTPAction) NullUserOTPAction {
	if !s.Valid {
		return NullUserOTPAction{}
	}
	val, ok := enumUserOTPActionValue[s.String]
	if !ok {
		return d.Wrap()
	}
	return UserOTPAction(val).Wrap()
}

func WrapUserOTPAction(enum UserOTPAction) NullUserOTPAction {
	return NullUserOTPAction{Enum: enum, Valid: true}
}

func (n NullUserOTPAction) Apply(s UserOTPAction) UserOTPAction {
	if n.Valid {
		return n.Enum
	}
	return s
}

func (n NullUserOTPAction) Value() (driver.Value, error) {
	if !n.Valid {
		return nil, nil
	}
	return n.Enum.Value()
}

func (n *NullUserOTPAction) Scan(src interface{}) error {
	if src == nil {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.Scan(src)
}

func (n NullUserOTPAction) MarshalJSON() ([]byte, error) {
	if n.Valid {
		return n.Enum.MarshalJSON()
	}
	return __jsonNull, nil
}

func (n *NullUserOTPAction) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.UnmarshalJSON(data)
}
