// +build !generator

// Code generated by generator api. DO NOT EDIT.

package fbpaging

import (
	context "context"

	meta "o.o/api/meta"
	status3 "o.o/api/top/types/etc/status3"
	capi "o.o/capi"
	dot "o.o/capi/dot"
	filter "o.o/capi/filter"
)

type CommandBus struct{ bus capi.Bus }
type QueryBus struct{ bus capi.Bus }

func NewCommandBus(bus capi.Bus) CommandBus { return CommandBus{bus} }
func NewQueryBus(bus capi.Bus) QueryBus     { return QueryBus{bus} }

func (b CommandBus) Dispatch(ctx context.Context, msg interface{ command() }) error {
	return b.bus.Dispatch(ctx, msg)
}
func (b QueryBus) Dispatch(ctx context.Context, msg interface{ query() }) error {
	return b.bus.Dispatch(ctx, msg)
}

type CreateFbExternalPageCommand struct {
	ID                   dot.ID
	ExternalID           string
	FbUserID             dot.ID
	ShopID               dot.ID
	UserID               dot.ID
	ExternalName         string
	ExternalCategory     string
	ExternalCategoryList []*ExternalCategory
	ExternalTasks        []string
	ExternalPermissions  []string
	ExternalImageURL     string
	Status               status3.Status
	ConnectionStatus     status3.Status

	Result *FbExternalPage `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalPage(ctx context.Context, msg *CreateFbExternalPageCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalPage(msg.GetArgs(ctx))
	return err
}

type CreateFbExternalPageCombinedCommand struct {
	FbPage         *CreateFbExternalPageArgs
	FbPageInternal *CreateFbExternalPageInternalArgs

	Result *FbExternalPageCombined `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalPageCombined(ctx context.Context, msg *CreateFbExternalPageCombinedCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalPageCombined(msg.GetArgs(ctx))
	return err
}

type CreateFbExternalPageCombinedsCommand struct {
	ShopID          dot.ID
	UserID          dot.ID
	FbPageCombineds []*CreateFbExternalPageCombinedArgs

	Result []*FbExternalPageCombined `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalPageCombineds(ctx context.Context, msg *CreateFbExternalPageCombinedsCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalPageCombineds(msg.GetArgs(ctx))
	return err
}

type CreateFbExternalPageInternalCommand struct {
	ID    dot.ID
	Token string

	Result *FbExternalPageInternal `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalPageInternal(ctx context.Context, msg *CreateFbExternalPageInternalCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalPageInternal(msg.GetArgs(ctx))
	return err
}

type DisableAllFbExternalPagesCommand struct {
	ShopID dot.ID
	UserID dot.ID

	Result int `json:"-"`
}

func (h AggregateHandler) HandleDisableAllFbExternalPages(ctx context.Context, msg *DisableAllFbExternalPagesCommand) (err error) {
	msg.Result, err = h.inner.DisableAllFbExternalPages(msg.GetArgs(ctx))
	return err
}

type DisableFbExternalPagesByIDsCommand struct {
	IDs    []dot.ID
	ShopID dot.ID
	UserID dot.ID

	Result int `json:"-"`
}

func (h AggregateHandler) HandleDisableFbExternalPagesByIDs(ctx context.Context, msg *DisableFbExternalPagesByIDsCommand) (err error) {
	msg.Result, err = h.inner.DisableFbExternalPagesByIDs(msg.GetArgs(ctx))
	return err
}

type GetFbExternalPageByExternalIDQuery struct {
	ExternalID string

	Result *FbExternalPage `json:"-"`
}

func (h QueryServiceHandler) HandleGetFbExternalPageByExternalID(ctx context.Context, msg *GetFbExternalPageByExternalIDQuery) (err error) {
	msg.Result, err = h.inner.GetFbExternalPageByExternalID(msg.GetArgs(ctx))
	return err
}

type GetFbExternalPageByIDQuery struct {
	ID dot.ID

	Result *FbExternalPage `json:"-"`
}

func (h QueryServiceHandler) HandleGetFbExternalPageByID(ctx context.Context, msg *GetFbExternalPageByIDQuery) (err error) {
	msg.Result, err = h.inner.GetFbExternalPageByID(msg.GetArgs(ctx))
	return err
}

type GetFbExternalPageInternalByIDQuery struct {
	ID dot.ID

	Result *FbExternalPageInternal `json:"-"`
}

func (h QueryServiceHandler) HandleGetFbExternalPageInternalByID(ctx context.Context, msg *GetFbExternalPageInternalByIDQuery) (err error) {
	msg.Result, err = h.inner.GetFbExternalPageInternalByID(msg.GetArgs(ctx))
	return err
}

type ListFbExternalPagesQuery struct {
	ShopID   dot.ID
	UserID   dot.ID
	FbUserID dot.NullID
	Paging   meta.Paging
	Filters  meta.Filters

	Result *FbPagesResponse `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalPages(ctx context.Context, msg *ListFbExternalPagesQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalPages(msg.GetArgs(ctx))
	return err
}

type ListFbExternalPagesActiveByExternalIDsQuery struct {
	ExternalIDs []string

	Result []*FbExternalPage `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalPagesActiveByExternalIDs(ctx context.Context, msg *ListFbExternalPagesActiveByExternalIDsQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalPagesActiveByExternalIDs(msg.GetArgs(ctx))
	return err
}

type ListFbExternalPagesByIDsQuery struct {
	IDs filter.IDs

	Result []*FbExternalPage `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalPagesByIDs(ctx context.Context, msg *ListFbExternalPagesByIDsQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalPagesByIDs(msg.GetArgs(ctx))
	return err
}

// implement interfaces

func (q *CreateFbExternalPageCommand) command()          {}
func (q *CreateFbExternalPageCombinedCommand) command()  {}
func (q *CreateFbExternalPageCombinedsCommand) command() {}
func (q *CreateFbExternalPageInternalCommand) command()  {}
func (q *DisableAllFbExternalPagesCommand) command()     {}
func (q *DisableFbExternalPagesByIDsCommand) command()   {}

func (q *GetFbExternalPageByExternalIDQuery) query()          {}
func (q *GetFbExternalPageByIDQuery) query()                  {}
func (q *GetFbExternalPageInternalByIDQuery) query()          {}
func (q *ListFbExternalPagesQuery) query()                    {}
func (q *ListFbExternalPagesActiveByExternalIDsQuery) query() {}
func (q *ListFbExternalPagesByIDsQuery) query()               {}

// implement conversion

func (q *CreateFbExternalPageCommand) GetArgs(ctx context.Context) (_ context.Context, _ *CreateFbExternalPageArgs) {
	return ctx,
		&CreateFbExternalPageArgs{
			ID:                   q.ID,
			ExternalID:           q.ExternalID,
			FbUserID:             q.FbUserID,
			ShopID:               q.ShopID,
			UserID:               q.UserID,
			ExternalName:         q.ExternalName,
			ExternalCategory:     q.ExternalCategory,
			ExternalCategoryList: q.ExternalCategoryList,
			ExternalTasks:        q.ExternalTasks,
			ExternalPermissions:  q.ExternalPermissions,
			ExternalImageURL:     q.ExternalImageURL,
			Status:               q.Status,
			ConnectionStatus:     q.ConnectionStatus,
		}
}

func (q *CreateFbExternalPageCommand) SetCreateFbExternalPageArgs(args *CreateFbExternalPageArgs) {
	q.ID = args.ID
	q.ExternalID = args.ExternalID
	q.FbUserID = args.FbUserID
	q.ShopID = args.ShopID
	q.UserID = args.UserID
	q.ExternalName = args.ExternalName
	q.ExternalCategory = args.ExternalCategory
	q.ExternalCategoryList = args.ExternalCategoryList
	q.ExternalTasks = args.ExternalTasks
	q.ExternalPermissions = args.ExternalPermissions
	q.ExternalImageURL = args.ExternalImageURL
	q.Status = args.Status
	q.ConnectionStatus = args.ConnectionStatus
}

func (q *CreateFbExternalPageCombinedCommand) GetArgs(ctx context.Context) (_ context.Context, _ *CreateFbExternalPageCombinedArgs) {
	return ctx,
		&CreateFbExternalPageCombinedArgs{
			FbPage:         q.FbPage,
			FbPageInternal: q.FbPageInternal,
		}
}

func (q *CreateFbExternalPageCombinedCommand) SetCreateFbExternalPageCombinedArgs(args *CreateFbExternalPageCombinedArgs) {
	q.FbPage = args.FbPage
	q.FbPageInternal = args.FbPageInternal
}

func (q *CreateFbExternalPageCombinedsCommand) GetArgs(ctx context.Context) (_ context.Context, _ *CreateFbExternalPageCombinedsArgs) {
	return ctx,
		&CreateFbExternalPageCombinedsArgs{
			ShopID:          q.ShopID,
			UserID:          q.UserID,
			FbPageCombineds: q.FbPageCombineds,
		}
}

func (q *CreateFbExternalPageCombinedsCommand) SetCreateFbExternalPageCombinedsArgs(args *CreateFbExternalPageCombinedsArgs) {
	q.ShopID = args.ShopID
	q.UserID = args.UserID
	q.FbPageCombineds = args.FbPageCombineds
}

func (q *CreateFbExternalPageInternalCommand) GetArgs(ctx context.Context) (_ context.Context, _ *CreateFbExternalPageInternalArgs) {
	return ctx,
		&CreateFbExternalPageInternalArgs{
			ID:    q.ID,
			Token: q.Token,
		}
}

func (q *CreateFbExternalPageInternalCommand) SetCreateFbExternalPageInternalArgs(args *CreateFbExternalPageInternalArgs) {
	q.ID = args.ID
	q.Token = args.Token
}

func (q *DisableAllFbExternalPagesCommand) GetArgs(ctx context.Context) (_ context.Context, _ *DisableAllFbExternalPagesArgs) {
	return ctx,
		&DisableAllFbExternalPagesArgs{
			ShopID: q.ShopID,
			UserID: q.UserID,
		}
}

func (q *DisableAllFbExternalPagesCommand) SetDisableAllFbExternalPagesArgs(args *DisableAllFbExternalPagesArgs) {
	q.ShopID = args.ShopID
	q.UserID = args.UserID
}

func (q *DisableFbExternalPagesByIDsCommand) GetArgs(ctx context.Context) (_ context.Context, _ *DisableFbExternalPagesByIDsArgs) {
	return ctx,
		&DisableFbExternalPagesByIDsArgs{
			IDs:    q.IDs,
			ShopID: q.ShopID,
			UserID: q.UserID,
		}
}

func (q *DisableFbExternalPagesByIDsCommand) SetDisableFbExternalPagesByIDsArgs(args *DisableFbExternalPagesByIDsArgs) {
	q.IDs = args.IDs
	q.ShopID = args.ShopID
	q.UserID = args.UserID
}

func (q *GetFbExternalPageByExternalIDQuery) GetArgs(ctx context.Context) (_ context.Context, externalID string) {
	return ctx,
		q.ExternalID
}

func (q *GetFbExternalPageByIDQuery) GetArgs(ctx context.Context) (_ context.Context, ID dot.ID) {
	return ctx,
		q.ID
}

func (q *GetFbExternalPageInternalByIDQuery) GetArgs(ctx context.Context) (_ context.Context, ID dot.ID) {
	return ctx,
		q.ID
}

func (q *ListFbExternalPagesQuery) GetArgs(ctx context.Context) (_ context.Context, _ *ListFbExternalPagesArgs) {
	return ctx,
		&ListFbExternalPagesArgs{
			ShopID:   q.ShopID,
			UserID:   q.UserID,
			FbUserID: q.FbUserID,
			Paging:   q.Paging,
			Filters:  q.Filters,
		}
}

func (q *ListFbExternalPagesQuery) SetListFbExternalPagesArgs(args *ListFbExternalPagesArgs) {
	q.ShopID = args.ShopID
	q.UserID = args.UserID
	q.FbUserID = args.FbUserID
	q.Paging = args.Paging
	q.Filters = args.Filters
}

func (q *ListFbExternalPagesActiveByExternalIDsQuery) GetArgs(ctx context.Context) (_ context.Context, externalIDs []string) {
	return ctx,
		q.ExternalIDs
}

func (q *ListFbExternalPagesByIDsQuery) GetArgs(ctx context.Context) (_ context.Context, IDs filter.IDs) {
	return ctx,
		q.IDs
}

// implement dispatching

type AggregateHandler struct {
	inner Aggregate
}

func NewAggregateHandler(service Aggregate) AggregateHandler { return AggregateHandler{service} }

func (h AggregateHandler) RegisterHandlers(b interface {
	capi.Bus
	AddHandler(handler interface{})
}) CommandBus {
	b.AddHandler(h.HandleCreateFbExternalPage)
	b.AddHandler(h.HandleCreateFbExternalPageCombined)
	b.AddHandler(h.HandleCreateFbExternalPageCombineds)
	b.AddHandler(h.HandleCreateFbExternalPageInternal)
	b.AddHandler(h.HandleDisableAllFbExternalPages)
	b.AddHandler(h.HandleDisableFbExternalPagesByIDs)
	return CommandBus{b}
}

type QueryServiceHandler struct {
	inner QueryService
}

func NewQueryServiceHandler(service QueryService) QueryServiceHandler {
	return QueryServiceHandler{service}
}

func (h QueryServiceHandler) RegisterHandlers(b interface {
	capi.Bus
	AddHandler(handler interface{})
}) QueryBus {
	b.AddHandler(h.HandleGetFbExternalPageByExternalID)
	b.AddHandler(h.HandleGetFbExternalPageByID)
	b.AddHandler(h.HandleGetFbExternalPageInternalByID)
	b.AddHandler(h.HandleListFbExternalPages)
	b.AddHandler(h.HandleListFbExternalPagesActiveByExternalIDs)
	b.AddHandler(h.HandleListFbExternalPagesByIDs)
	return QueryBus{b}
}
