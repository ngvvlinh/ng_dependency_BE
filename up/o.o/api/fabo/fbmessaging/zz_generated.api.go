// +build !generator

// Code generated by generator api. DO NOT EDIT.

package fbmessaging

import (
	context "context"

	fb_customer_conversation_type "o.o/api/fabo/fbmessaging/fb_customer_conversation_type"
	meta "o.o/api/meta"
	capi "o.o/capi"
	dot "o.o/capi/dot"
	filter "o.o/capi/filter"
)

type CommandBus struct{ bus capi.Bus }
type QueryBus struct{ bus capi.Bus }

func NewCommandBus(bus capi.Bus) CommandBus { return CommandBus{bus} }
func NewQueryBus(bus capi.Bus) QueryBus     { return QueryBus{bus} }

func (b CommandBus) Dispatch(ctx context.Context, msg interface{ command() }) error {
	return b.bus.Dispatch(ctx, msg)
}
func (b QueryBus) Dispatch(ctx context.Context, msg interface{ query() }) error {
	return b.bus.Dispatch(ctx, msg)
}

type CreateFbCustomerConversationsCommand struct {
	FbCustomerConversations []*CreateFbCustomerConversationArgs

	Result []*FbCustomerConversation `json:"-"`
}

func (h AggregateHandler) HandleCreateFbCustomerConversations(ctx context.Context, msg *CreateFbCustomerConversationsCommand) (err error) {
	msg.Result, err = h.inner.CreateFbCustomerConversations(msg.GetArgs(ctx))
	return err
}

type CreateFbExternalConversationsCommand struct {
	FbExternalConversations []*CreateFbExternalConversationArgs

	Result []*FbExternalConversation `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalConversations(ctx context.Context, msg *CreateFbExternalConversationsCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalConversations(msg.GetArgs(ctx))
	return err
}

type CreateFbExternalMessagesCommand struct {
	FbExternalMessages []*CreateFbExternalMessageArgs

	Result []*FbExternalMessage `json:"-"`
}

func (h AggregateHandler) HandleCreateFbExternalMessages(ctx context.Context, msg *CreateFbExternalMessagesCommand) (err error) {
	msg.Result, err = h.inner.CreateFbExternalMessages(msg.GetArgs(ctx))
	return err
}

type ListFbCustomerConversationsQuery struct {
	FbPageIDs        []dot.ID
	FbExternalUserID dot.NullString
	IsRead           dot.NullBool
	Type             fb_customer_conversation_type.NullFbCustomerConversationType
	Paging           meta.Paging

	Result *FbCustomerConversationsResponse `json:"-"`
}

func (h QueryServiceHandler) HandleListFbCustomerConversations(ctx context.Context, msg *ListFbCustomerConversationsQuery) (err error) {
	msg.Result, err = h.inner.ListFbCustomerConversations(msg.GetArgs(ctx))
	return err
}

type ListFbCustomerConversationsByExternalIDsQuery struct {
	ExternalIDs filter.Strings

	Result []*FbCustomerConversation `json:"-"`
}

func (h QueryServiceHandler) HandleListFbCustomerConversationsByExternalIDs(ctx context.Context, msg *ListFbCustomerConversationsByExternalIDsQuery) (err error) {
	msg.Result, err = h.inner.ListFbCustomerConversationsByExternalIDs(msg.GetArgs(ctx))
	return err
}

type ListFbExternalConversationsByExternalIDsQuery struct {
	ExternalIDs filter.Strings

	Result []*FbExternalConversation `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalConversationsByExternalIDs(ctx context.Context, msg *ListFbExternalConversationsByExternalIDsQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalConversationsByExternalIDs(msg.GetArgs(ctx))
	return err
}

type ListFbExternalMessagesQuery struct {
	FbPageIDs         []dot.ID
	FbConversationIDs []string
	Paging            meta.Paging

	Result *FbExternalMessagesResponse `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalMessages(ctx context.Context, msg *ListFbExternalMessagesQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalMessages(msg.GetArgs(ctx))
	return err
}

type ListFbExternalMessagesByExternalIDsQuery struct {
	ExternalIDs filter.Strings

	Result []*FbExternalMessage `json:"-"`
}

func (h QueryServiceHandler) HandleListFbExternalMessagesByExternalIDs(ctx context.Context, msg *ListFbExternalMessagesByExternalIDsQuery) (err error) {
	msg.Result, err = h.inner.ListFbExternalMessagesByExternalIDs(msg.GetArgs(ctx))
	return err
}

type ListLatestFbExternalMessagesQuery struct {
	ExternalConversationIDs filter.Strings

	Result []*FbExternalMessage `json:"-"`
}

func (h QueryServiceHandler) HandleListLatestFbExternalMessages(ctx context.Context, msg *ListLatestFbExternalMessagesQuery) (err error) {
	msg.Result, err = h.inner.ListLatestFbExternalMessages(msg.GetArgs(ctx))
	return err
}

// implement interfaces

func (q *CreateFbCustomerConversationsCommand) command() {}
func (q *CreateFbExternalConversationsCommand) command() {}
func (q *CreateFbExternalMessagesCommand) command()      {}

func (q *ListFbCustomerConversationsQuery) query()              {}
func (q *ListFbCustomerConversationsByExternalIDsQuery) query() {}
func (q *ListFbExternalConversationsByExternalIDsQuery) query() {}
func (q *ListFbExternalMessagesQuery) query()                   {}
func (q *ListFbExternalMessagesByExternalIDsQuery) query()      {}
func (q *ListLatestFbExternalMessagesQuery) query()             {}

// implement conversion

func (q *CreateFbCustomerConversationsCommand) GetArgs(ctx context.Context) (_ context.Context, _ CreateFbCustomerConversationsArgs) {
	return ctx,
		CreateFbCustomerConversationsArgs{
			FbCustomerConversations: q.FbCustomerConversations,
		}
}

func (q *CreateFbCustomerConversationsCommand) SetCreateFbCustomerConversationsArgs(args CreateFbCustomerConversationsArgs) {
	q.FbCustomerConversations = args.FbCustomerConversations
}

func (q *CreateFbExternalConversationsCommand) GetArgs(ctx context.Context) (_ context.Context, _ CreateFbExternalConversationsArgs) {
	return ctx,
		CreateFbExternalConversationsArgs{
			FbExternalConversations: q.FbExternalConversations,
		}
}

func (q *CreateFbExternalConversationsCommand) SetCreateFbExternalConversationsArgs(args CreateFbExternalConversationsArgs) {
	q.FbExternalConversations = args.FbExternalConversations
}

func (q *CreateFbExternalMessagesCommand) GetArgs(ctx context.Context) (_ context.Context, _ CreateFbExternalMessagesArgs) {
	return ctx,
		CreateFbExternalMessagesArgs{
			FbExternalMessages: q.FbExternalMessages,
		}
}

func (q *CreateFbExternalMessagesCommand) SetCreateFbExternalMessagesArgs(args CreateFbExternalMessagesArgs) {
	q.FbExternalMessages = args.FbExternalMessages
}

func (q *ListFbCustomerConversationsQuery) GetArgs(ctx context.Context) (_ context.Context, _ *ListFbCustomerConversationsArgs) {
	return ctx,
		&ListFbCustomerConversationsArgs{
			FbPageIDs:        q.FbPageIDs,
			FbExternalUserID: q.FbExternalUserID,
			IsRead:           q.IsRead,
			Type:             q.Type,
			Paging:           q.Paging,
		}
}

func (q *ListFbCustomerConversationsQuery) SetListFbCustomerConversationsArgs(args *ListFbCustomerConversationsArgs) {
	q.FbPageIDs = args.FbPageIDs
	q.FbExternalUserID = args.FbExternalUserID
	q.IsRead = args.IsRead
	q.Type = args.Type
	q.Paging = args.Paging
}

func (q *ListFbCustomerConversationsByExternalIDsQuery) GetArgs(ctx context.Context) (_ context.Context, externalIDs filter.Strings) {
	return ctx,
		q.ExternalIDs
}

func (q *ListFbExternalConversationsByExternalIDsQuery) GetArgs(ctx context.Context) (_ context.Context, externalIDs filter.Strings) {
	return ctx,
		q.ExternalIDs
}

func (q *ListFbExternalMessagesQuery) GetArgs(ctx context.Context) (_ context.Context, _ *ListFbExternalMessagesArgs) {
	return ctx,
		&ListFbExternalMessagesArgs{
			FbPageIDs:         q.FbPageIDs,
			FbConversationIDs: q.FbConversationIDs,
			Paging:            q.Paging,
		}
}

func (q *ListFbExternalMessagesQuery) SetListFbExternalMessagesArgs(args *ListFbExternalMessagesArgs) {
	q.FbPageIDs = args.FbPageIDs
	q.FbConversationIDs = args.FbConversationIDs
	q.Paging = args.Paging
}

func (q *ListFbExternalMessagesByExternalIDsQuery) GetArgs(ctx context.Context) (_ context.Context, externalIDs filter.Strings) {
	return ctx,
		q.ExternalIDs
}

func (q *ListLatestFbExternalMessagesQuery) GetArgs(ctx context.Context) (_ context.Context, externalConversationIDs filter.Strings) {
	return ctx,
		q.ExternalConversationIDs
}

// implement dispatching

type AggregateHandler struct {
	inner Aggregate
}

func NewAggregateHandler(service Aggregate) AggregateHandler { return AggregateHandler{service} }

func (h AggregateHandler) RegisterHandlers(b interface {
	capi.Bus
	AddHandler(handler interface{})
}) CommandBus {
	b.AddHandler(h.HandleCreateFbCustomerConversations)
	b.AddHandler(h.HandleCreateFbExternalConversations)
	b.AddHandler(h.HandleCreateFbExternalMessages)
	return CommandBus{b}
}

type QueryServiceHandler struct {
	inner QueryService
}

func NewQueryServiceHandler(service QueryService) QueryServiceHandler {
	return QueryServiceHandler{service}
}

func (h QueryServiceHandler) RegisterHandlers(b interface {
	capi.Bus
	AddHandler(handler interface{})
}) QueryBus {
	b.AddHandler(h.HandleListFbCustomerConversations)
	b.AddHandler(h.HandleListFbCustomerConversationsByExternalIDs)
	b.AddHandler(h.HandleListFbExternalConversationsByExternalIDs)
	b.AddHandler(h.HandleListFbExternalMessages)
	b.AddHandler(h.HandleListFbExternalMessagesByExternalIDs)
	b.AddHandler(h.HandleListLatestFbExternalMessages)
	return QueryBus{b}
}
