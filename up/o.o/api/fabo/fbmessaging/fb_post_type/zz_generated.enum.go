// +build !generator

// Code generated by generator enum. DO NOT EDIT.

package fb_post_type

import (
	driver "database/sql/driver"
	fmt "fmt"

	dot "o.o/capi/dot"
	mix "o.o/capi/mix"
)

var __jsonNull = []byte("null")

var enumFbPostTypeName = map[int]string{
	0:   "unknown",
	101: "page",
	256: "user",
}

var enumFbPostTypeValue = map[string]int{
	"unknown": 0,
	"page":    101,
	"user":    256,
}

func ParseFbPostType(s string) (FbPostType, bool) {
	val, ok := enumFbPostTypeValue[s]
	return FbPostType(val), ok
}

func ParseFbPostTypeWithDefault(s string, d FbPostType) FbPostType {
	val, ok := enumFbPostTypeValue[s]
	if !ok {
		return d
	}
	return FbPostType(val)
}

func (e FbPostType) Apply(d FbPostType) FbPostType {
	if e == 0 {
		return d
	}
	return e
}

func (e FbPostType) Enum() int {
	return int(e)
}

func (e FbPostType) Name() string {
	return enumFbPostTypeName[e.Enum()]
}

func (e FbPostType) String() string {
	s, ok := enumFbPostTypeName[e.Enum()]
	if ok {
		return s
	}
	return fmt.Sprintf("FbPostType(%v)", e.Enum())
}

func (e FbPostType) MarshalJSON() ([]byte, error) {
	return []byte("\"" + enumFbPostTypeName[e.Enum()] + "\""), nil
}

func (e *FbPostType) UnmarshalJSON(data []byte) error {
	value, err := mix.UnmarshalJSONEnumInt(enumFbPostTypeValue, data, "FbPostType")
	if err != nil {
		return err
	}
	*e = FbPostType(value)
	return nil
}

func (e FbPostType) Value() (driver.Value, error) {
	if e == 0 {
		return nil, nil
	}
	return int64(e), nil
}

func (e *FbPostType) Scan(src interface{}) error {
	value, err := mix.ScanEnumInt(enumFbPostTypeValue, src, "FbPostType")
	*e = (FbPostType)(value)
	return err
}

func (e FbPostType) Wrap() NullFbPostType {
	return WrapFbPostType(e)
}

func ParseFbPostTypeWithNull(s dot.NullString, d FbPostType) NullFbPostType {
	if !s.Valid {
		return NullFbPostType{}
	}
	val, ok := enumFbPostTypeValue[s.String]
	if !ok {
		return d.Wrap()
	}
	return FbPostType(val).Wrap()
}

func WrapFbPostType(enum FbPostType) NullFbPostType {
	return NullFbPostType{Enum: enum, Valid: true}
}

func (n NullFbPostType) Apply(s FbPostType) FbPostType {
	if n.Valid {
		return n.Enum
	}
	return s
}

func (n NullFbPostType) Value() (driver.Value, error) {
	if !n.Valid {
		return nil, nil
	}
	return n.Enum.Value()
}

func (n *NullFbPostType) Scan(src interface{}) error {
	if src == nil {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.Scan(src)
}

func (n NullFbPostType) MarshalJSON() ([]byte, error) {
	if n.Valid {
		return n.Enum.MarshalJSON()
	}
	return __jsonNull, nil
}

func (n *NullFbPostType) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.UnmarshalJSON(data)
}
