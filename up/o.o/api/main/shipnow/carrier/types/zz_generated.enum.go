// +build !generator

// Code generated by generator enum. DO NOT EDIT.

package types

import (
	driver "database/sql/driver"
	fmt "fmt"

	dot "o.o/capi/dot"
	mix "o.o/capi/mix"
)

var __jsonNull = []byte("null")

var enumShipnowCarrierName = map[int]string{
	0: "default",
	1: "ahamove",
}

var enumShipnowCarrierValue = map[string]int{
	"default": 0,
	"ahamove": 1,
}

func ParseShipnowCarrier(s string) (ShipnowCarrier, bool) {
	val, ok := enumShipnowCarrierValue[s]
	return ShipnowCarrier(val), ok
}

func ParseShipnowCarrierWithDefault(s string, d ShipnowCarrier) ShipnowCarrier {
	val, ok := enumShipnowCarrierValue[s]
	if !ok {
		return d
	}
	return ShipnowCarrier(val)
}

func (e ShipnowCarrier) Enum() int {
	return int(e)
}

func (e ShipnowCarrier) Name() string {
	return enumShipnowCarrierName[e.Enum()]
}

func (e ShipnowCarrier) String() string {
	s, ok := enumShipnowCarrierName[e.Enum()]
	if ok {
		return s
	}
	return fmt.Sprintf("ShipnowCarrier(%v)", e.Enum())
}

func (e ShipnowCarrier) MarshalJSON() ([]byte, error) {
	return []byte("\"" + enumShipnowCarrierName[e.Enum()] + "\""), nil
}

func (e *ShipnowCarrier) UnmarshalJSON(data []byte) error {
	value, err := mix.UnmarshalJSONEnumInt(enumShipnowCarrierValue, data, "ShipnowCarrier")
	if err != nil {
		return err
	}
	*e = ShipnowCarrier(value)
	return nil
}

func (e ShipnowCarrier) Value() (driver.Value, error) {
	return e.String(), nil
}

func (e *ShipnowCarrier) Scan(src interface{}) error {
	value, err := mix.ScanEnumInt(enumShipnowCarrierValue, src, "ShipnowCarrier")
	*e = (ShipnowCarrier)(value)
	return err
}

func (e ShipnowCarrier) Wrap() NullShipnowCarrier {
	return WrapShipnowCarrier(e)
}

func ParseShipnowCarrierWithNull(s dot.NullString, d ShipnowCarrier) NullShipnowCarrier {
	if !s.Valid {
		return NullShipnowCarrier{}
	}
	val, ok := enumShipnowCarrierValue[s.String]
	if !ok {
		return d.Wrap()
	}
	return ShipnowCarrier(val).Wrap()
}

func WrapShipnowCarrier(enum ShipnowCarrier) NullShipnowCarrier {
	return NullShipnowCarrier{Enum: enum, Valid: true}
}

func (n NullShipnowCarrier) Apply(s ShipnowCarrier) ShipnowCarrier {
	if n.Valid {
		return n.Enum
	}
	return s
}

func (n NullShipnowCarrier) Value() (driver.Value, error) {
	if !n.Valid {
		return nil, nil
	}
	return n.Enum.Value()
}

func (n *NullShipnowCarrier) Scan(src interface{}) error {
	if src == nil {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.Scan(src)
}

func (n NullShipnowCarrier) MarshalJSON() ([]byte, error) {
	if n.Valid {
		return n.Enum.MarshalJSON()
	}
	return __jsonNull, nil
}

func (n *NullShipnowCarrier) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		n.Enum, n.Valid = 0, false
		return nil
	}
	n.Valid = true
	return n.Enum.UnmarshalJSON(data)
}
