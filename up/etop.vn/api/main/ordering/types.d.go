// Code generated by gen-cmd-query. DO NOT EDIT.

package ordering

import (
	context "context"
	unsafe "unsafe"

	orderingv1types "etop.vn/api/main/ordering/v1/types"
)

type GetOrderByIDCommand struct {
	ID int64

	Result *Order `json:"-"`
}

type GetOrdersCommand struct {
	ShopID int64
	IDs    []int64

	Result *OrdersResponse `json:"-"`
}

type ReserveOrdersForFfmCommand struct {
	OrderIDs   []int64
	Fulfill    orderingv1types.Fulfill
	FulfillIDs []int64

	Result *ReserveOrdersForFfmResponse `json:"-"`
}

type ValidateOrdersCommand struct {
	OrderIDs []int64

	Result *ValidateOrdersResponse `json:"-"`
}

// implement conversion

func (q *GetOrderByIDCommand) GetArgs() *GetOrderByIDArgs {
	return (*GetOrderByIDArgs)(unsafe.Pointer(q))
}
func (q *GetOrdersCommand) GetArgs() *GetOrdersArgs { return (*GetOrdersArgs)(unsafe.Pointer(q)) }
func (q *ReserveOrdersForFfmCommand) GetArgs() *ReserveOrdersForFfmArgs {
	return (*ReserveOrdersForFfmArgs)(unsafe.Pointer(q))
}
func (q *ValidateOrdersCommand) GetArgs() *ValidateOrdersForShippingArgs {
	return (*ValidateOrdersForShippingArgs)(unsafe.Pointer(q))
}

// implement dispatching

type AggregateHandler struct {
	inner Aggregate
}

func NewAggregateHandler(service Aggregate) AggregateHandler { return AggregateHandler{service} }

func (h AggregateHandler) RegisterHandlers(b interface {
	AddHandler(handler interface{})
}) {
	b.AddHandler(h.HandleGetOrderByID)
	b.AddHandler(h.HandleGetOrders)
	b.AddHandler(h.HandleReserveOrdersForFfm)
	b.AddHandler(h.HandleValidateOrders)
}

func (h AggregateHandler) HandleGetOrderByID(ctx context.Context, cmd *GetOrderByIDCommand) error {
	result, err := h.inner.GetOrderByID(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleGetOrders(ctx context.Context, cmd *GetOrdersCommand) error {
	result, err := h.inner.GetOrders(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleReserveOrdersForFfm(ctx context.Context, cmd *ReserveOrdersForFfmCommand) error {
	result, err := h.inner.ReserveOrdersForFfm(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleValidateOrders(ctx context.Context, cmd *ValidateOrdersCommand) error {
	result, err := h.inner.ValidateOrders(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

type QueryServiceHandler struct {
	inner QueryService
}

func NewQueryServiceHandler(service QueryService) QueryServiceHandler {
	return QueryServiceHandler{service}
}

func (h QueryServiceHandler) RegisterHandlers(b interface {
	AddHandler(handler interface{})
}) {
}
