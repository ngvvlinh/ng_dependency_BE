// Code generated by gen-cmd-query. DO NOT EDIT.

package identity

import (
	context "context"

	meta "etop.vn/api/meta"
)

type Command interface{ command() }
type Query interface{ query() }
type CommandBus struct{ bus meta.Bus }
type QueryBus struct{ bus meta.Bus }

func (c CommandBus) Dispatch(ctx context.Context, msg Command) error {
	return c.bus.Dispatch(ctx, msg)
}
func (c QueryBus) Dispatch(ctx context.Context, msg Query) error {
	return c.bus.Dispatch(ctx, msg)
}
func (c CommandBus) DispatchAll(ctx context.Context, msgs ...Command) error {
	for _, msg := range msgs {
		if err := c.bus.Dispatch(ctx, msg); err != nil {
			return err
		}
	}
	return nil
}
func (c QueryBus) DispatchAll(ctx context.Context, msgs ...Query) error {
	for _, msg := range msgs {
		if err := c.bus.Dispatch(ctx, msg); err != nil {
			return err
		}
	}
	return nil
}

type CreateExternalAccountAhamoveCommand struct {
	OwnerID int64
	Phone   string
	Name    string
	Address string

	Result *ExternalAccountAhamove `json:"-"`
}

type RequestVerifyExternalAccountAhamoveCommand struct {
	OwnerID int64
	Phone   string

	Result *RequestVerifyExternalAccountAhamoveResult `json:"-"`
}

type UpdateExternalAccountAhamoveVerificationImagesCommand struct {
	OwnerID        int64
	Phone          string
	IDCardFrontImg string
	IDCardBackImg  string
	PortraitImg    string

	Result *ExternalAccountAhamove `json:"-"`
}

type UpdateVerifiedExternalAccountAhamoveCommand struct {
	OwnerID int64
	Phone   string

	Result *ExternalAccountAhamove `json:"-"`
}

type GetExternalAccountAhamoveQuery struct {
	OwnerID int64
	Phone   string

	Result *ExternalAccountAhamove `json:"-"`
}

type GetExternalAccountAhamoveByExternalIDQuery struct {
	ExternalID string

	Result *ExternalAccountAhamove `json:"-"`
}

type GetShopByIDQuery struct {
	ID int64

	Result *GetShopByIDQueryResult `json:"-"`
}

type GetUserByIDQuery struct {
	UserID int64

	Result *User `json:"-"`
}

// implement interfaces

func (q *CreateExternalAccountAhamoveCommand) command()                   {}
func (q *RequestVerifyExternalAccountAhamoveCommand) command()            {}
func (q *UpdateExternalAccountAhamoveVerificationImagesCommand) command() {}
func (q *UpdateVerifiedExternalAccountAhamoveCommand) command()           {}
func (q *GetExternalAccountAhamoveQuery) query()                          {}
func (q *GetExternalAccountAhamoveByExternalIDQuery) query()              {}
func (q *GetShopByIDQuery) query()                                        {}
func (q *GetUserByIDQuery) query()                                        {}

// implement conversion

func (q *CreateExternalAccountAhamoveCommand) GetArgs() *CreateExternalAccountAhamoveArgs {
	return &CreateExternalAccountAhamoveArgs{
		OwnerID: q.OwnerID,
		Phone:   q.Phone,
		Name:    q.Name,
		Address: q.Address,
	}
}
func (q *RequestVerifyExternalAccountAhamoveCommand) GetArgs() *RequestVerifyExternalAccountAhamoveArgs {
	return &RequestVerifyExternalAccountAhamoveArgs{
		OwnerID: q.OwnerID,
		Phone:   q.Phone,
	}
}
func (q *UpdateExternalAccountAhamoveVerificationImagesCommand) GetArgs() *UpdateExternalAccountAhamoveVerificationImagesArgs {
	return &UpdateExternalAccountAhamoveVerificationImagesArgs{
		OwnerID:        q.OwnerID,
		Phone:          q.Phone,
		IDCardFrontImg: q.IDCardFrontImg,
		IDCardBackImg:  q.IDCardBackImg,
		PortraitImg:    q.PortraitImg,
	}
}
func (q *UpdateVerifiedExternalAccountAhamoveCommand) GetArgs() *UpdateVerifiedExternalAccountAhamoveArgs {
	return &UpdateVerifiedExternalAccountAhamoveArgs{
		OwnerID: q.OwnerID,
		Phone:   q.Phone,
	}
}
func (q *GetExternalAccountAhamoveQuery) GetArgs() *GetExternalAccountAhamoveArgs {
	return &GetExternalAccountAhamoveArgs{
		OwnerID: q.OwnerID,
		Phone:   q.Phone,
	}
}
func (q *GetExternalAccountAhamoveByExternalIDQuery) GetArgs() *GetExternalAccountAhamoveByExternalIDQueryArgs {
	return &GetExternalAccountAhamoveByExternalIDQueryArgs{
		ExternalID: q.ExternalID,
	}
}
func (q *GetShopByIDQuery) GetArgs() *GetShopByIDQueryArgs {
	return &GetShopByIDQueryArgs{
		ID: q.ID,
	}
}
func (q *GetUserByIDQuery) GetArgs() *GetUserByIDQueryArgs {
	return &GetUserByIDQueryArgs{
		UserID: q.UserID,
	}
}

// implement dispatching

type AggregateHandler struct {
	inner Aggregate
}

func NewAggregateHandler(service Aggregate) AggregateHandler { return AggregateHandler{service} }

func (h AggregateHandler) RegisterHandlers(b interface {
	meta.Bus
	AddHandler(handler interface{})
}) CommandBus {
	b.AddHandler(h.HandleCreateExternalAccountAhamove)
	b.AddHandler(h.HandleRequestVerifyExternalAccountAhamove)
	b.AddHandler(h.HandleUpdateExternalAccountAhamoveVerificationImages)
	b.AddHandler(h.HandleUpdateVerifiedExternalAccountAhamove)
	return CommandBus{b}
}

func (h AggregateHandler) HandleCreateExternalAccountAhamove(ctx context.Context, cmd *CreateExternalAccountAhamoveCommand) error {
	result, err := h.inner.CreateExternalAccountAhamove(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleRequestVerifyExternalAccountAhamove(ctx context.Context, cmd *RequestVerifyExternalAccountAhamoveCommand) error {
	result, err := h.inner.RequestVerifyExternalAccountAhamove(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleUpdateExternalAccountAhamoveVerificationImages(ctx context.Context, cmd *UpdateExternalAccountAhamoveVerificationImagesCommand) error {
	result, err := h.inner.UpdateExternalAccountAhamoveVerificationImages(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

func (h AggregateHandler) HandleUpdateVerifiedExternalAccountAhamove(ctx context.Context, cmd *UpdateVerifiedExternalAccountAhamoveCommand) error {
	result, err := h.inner.UpdateVerifiedExternalAccountAhamove(ctx, cmd.GetArgs())
	cmd.Result = result
	return err
}

type QueryServiceHandler struct {
	inner QueryService
}

func NewQueryServiceHandler(service QueryService) QueryServiceHandler {
	return QueryServiceHandler{service}
}

func (h QueryServiceHandler) RegisterHandlers(b interface {
	meta.Bus
	AddHandler(handler interface{})
}) QueryBus {
	b.AddHandler(h.HandleGetExternalAccountAhamove)
	b.AddHandler(h.HandleGetExternalAccountAhamoveByExternalID)
	b.AddHandler(h.HandleGetShopByID)
	b.AddHandler(h.HandleGetUserByID)
	return QueryBus{b}
}

func (h QueryServiceHandler) HandleGetExternalAccountAhamove(ctx context.Context, query *GetExternalAccountAhamoveQuery) error {
	result, err := h.inner.GetExternalAccountAhamove(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h QueryServiceHandler) HandleGetExternalAccountAhamoveByExternalID(ctx context.Context, query *GetExternalAccountAhamoveByExternalIDQuery) error {
	result, err := h.inner.GetExternalAccountAhamoveByExternalID(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h QueryServiceHandler) HandleGetShopByID(ctx context.Context, query *GetShopByIDQuery) error {
	result, err := h.inner.GetShopByID(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h QueryServiceHandler) HandleGetUserByID(ctx context.Context, query *GetUserByIDQuery) error {
	result, err := h.inner.GetUserByID(ctx, query.GetArgs())
	query.Result = result
	return err
}
