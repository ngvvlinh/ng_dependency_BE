// Code generated by gen-cmd-query. DO NOT EDIT.

package location

import (
	context "context"
	unsafe "unsafe"

	locationv1 "etop.vn/api/main/location/v1"
)

type FindLocationQuery struct {
	Province string `json:"province"`
	District string `json:"district"`
	Ward     string `json:"ward"`

	Result *locationv1.LocationQueryResult `json:"-"`
}

type FindOrGetLocationQuery struct {
	Province     string `json:"province"`
	District     string `json:"district"`
	Ward         string `json:"ward"`
	ProvinceCode string `json:"province_code"`
	DistrictCode string `json:"district_code"`
	WardCode     string `json:"ward_code"`

	Result *locationv1.LocationQueryResult `json:"-"`
}

type GetAllLocationsQuery struct {
	All          bool   `json:"all"`
	ProvinceCode string `json:"province_code"`
	DistrictCode string `json:"district_code"`

	Result *locationv1.GetAllLocationsQueryResult `json:"-"`
}

type GetLocationQuery struct {
	ProvinceCode string `json:"province_code"`
	DistrictCode string `json:"district_code"`
	WardCode     string `json:"ward_code"`

	Result *locationv1.LocationQueryResult `json:"-"`
}

// implement conversion

func (q *FindLocationQuery) GetArgs() *locationv1.FindLocationQueryArgs {
	return (*locationv1.FindLocationQueryArgs)(unsafe.Pointer(q))
}
func (q *FindOrGetLocationQuery) GetArgs() *locationv1.FindOrGetLocationQueryArgs {
	return (*locationv1.FindOrGetLocationQueryArgs)(unsafe.Pointer(q))
}
func (q *GetAllLocationsQuery) GetArgs() *locationv1.GetAllLocationsQueryArgs {
	return (*locationv1.GetAllLocationsQueryArgs)(unsafe.Pointer(q))
}
func (q *GetLocationQuery) GetArgs() *locationv1.GetLocationQueryArgs {
	return (*locationv1.GetLocationQueryArgs)(unsafe.Pointer(q))
}

// implement dispatching

type LocationQueryServiceHandler struct {
	inner LocationQueryService
}

func NewLocationQueryServiceHandler(service LocationQueryService) LocationQueryServiceHandler {
	return LocationQueryServiceHandler{service}
}

func (h LocationQueryServiceHandler) RegisterHandlers(b interface {
	AddHandler(handler interface{})
}) {
	b.AddHandler(h.HandleFindLocation)
	b.AddHandler(h.HandleFindOrGetLocation)
	b.AddHandler(h.HandleGetAllLocations)
	b.AddHandler(h.HandleGetLocation)
}

func (h LocationQueryServiceHandler) HandleFindLocation(ctx context.Context, query *FindLocationQuery) error {
	result, err := h.inner.FindLocation(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h LocationQueryServiceHandler) HandleFindOrGetLocation(ctx context.Context, query *FindOrGetLocationQuery) error {
	result, err := h.inner.FindOrGetLocation(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h LocationQueryServiceHandler) HandleGetAllLocations(ctx context.Context, query *GetAllLocationsQuery) error {
	result, err := h.inner.GetAllLocations(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h LocationQueryServiceHandler) HandleGetLocation(ctx context.Context, query *GetLocationQuery) error {
	result, err := h.inner.GetLocation(ctx, query.GetArgs())
	query.Result = result
	return err
}
