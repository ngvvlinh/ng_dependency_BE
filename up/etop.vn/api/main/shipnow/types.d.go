// Code generated by gen-cmd-query. DO NOT EDIT.

package shipnow

import (
	context "context"
	unsafe "unsafe"

	shipnowv1 "etop.vn/api/main/shipnow/v1"
)

type GetShipnowFulfillmentQuery struct {
	Id     int64 `json:"id"`
	ShopId int64 `json:"shop_id"`

	Result *shipnowv1.GetShipnowFulfillmentQueryResult `json:"-"`
}

type GetShipnowFulfillmentsQuery struct {
	ShopId int64 `json:"shop_id"`

	Result *shipnowv1.GetShipnowFulfillmentsQueryResult `json:"-"`
}

// implement query conversion

func (q *GetShipnowFulfillmentQuery) GetArgs() *shipnowv1.GetShipnowFulfillmentQueryArgs {
	return (*shipnowv1.GetShipnowFulfillmentQueryArgs)(unsafe.Pointer(q))
}
func (q *GetShipnowFulfillmentsQuery) GetArgs() *shipnowv1.GetShipnowFulfillmentsQueryArgs {
	return (*shipnowv1.GetShipnowFulfillmentsQueryArgs)(unsafe.Pointer(q))
}

// implement dispatching

type QueryServiceHandler struct {
	inner QueryService
}

func NewQueryServiceHandler(service QueryService) QueryServiceHandler {
	return QueryServiceHandler{service}
}

func (h QueryServiceHandler) RegisterHandlers(b interface {
	AddHandler(handler interface{})
}) {
	b.AddHandler(h.HandleGetShipnowFulfillment)
	b.AddHandler(h.HandleGetShipnowFulfillments)
}

func (h QueryServiceHandler) HandleGetShipnowFulfillment(ctx context.Context, query *GetShipnowFulfillmentQuery) error {
	result, err := h.inner.GetShipnowFulfillment(ctx, query.GetArgs())
	query.Result = result
	return err
}

func (h QueryServiceHandler) HandleGetShipnowFulfillments(ctx context.Context, query *GetShipnowFulfillmentsQuery) error {
	result, err := h.inner.GetShipnowFulfillments(ctx, query.GetArgs())
	query.Result = result
	return err
}
