syntax = "proto2";
package etop.vn.api.main.shipnow.v1;
option go_package = "v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all)                = false;
option (gogoproto.gogoproto_import)         = false;
option (gogoproto.goproto_enum_prefix_all)  = false;
option (gogoproto.goproto_getters_all)      = true;
option (gogoproto.goproto_sizecache_all)    = false;
option (gogoproto.goproto_unkeyed_all)      = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all)             = false;
option (gogoproto.marshaler_all)            = false;
option (gogoproto.onlyone_all)              = false;
option (gogoproto.sizer_all)                = false;
option (gogoproto.testgen_all)              = false;
option (gogoproto.unmarshaler_all)          = false;
option (gogoproto.verbose_equal_all)        = false;

import "etop.vn/api/main/order/v1/types/types.proto";
import "etop.vn/api/main/shipping/v1/types/tryon.proto";
import "etop.vn/api/main/shipping/v1/types/types.proto";
import "etop.vn/api/meta/v1/api.proto";

service ShipnowManager {
    rpc CreateShipnowFulfillment(CreateShipnowFulfillmentCommand) returns (ShipnowFulfillment);

    rpc ConfirmShipnowFulfillment(ConfirmShipnowFulfillmentCommand) returns (meta.v1.Empty);

    rpc CancelShipnowFulfillment(CancelShipnowFulfillmentCommand) returns (meta.v1.Empty);
}

service ShipnowQueryService {
    rpc GetShipnowFulfillment(GetShipnowFulfillmentQueryArgs) returns (GetShipnowFulfillmentQueryResult);
}

message ShipnowFulfillment {
    optional int64 id = 1 [(gogoproto.nullable)=false];

    optional int64 shop_id = 2 [(gogoproto.nullable)=false];

    optional int64 partner_id = 3 [(gogoproto.nullable)=false];

    optional order.v1.types.Address pickup_address = 4;

    repeated DeliveryPoint delivery_points = 5;

    optional string carrier = 6 [(gogoproto.nullable)=false];

    optional string shipping_service_code = 7 [(gogoproto.nullable)=false];

    optional int32 shipping_service_fee = 8 [(gogoproto.nullable)=false];

    optional shipping.v1.types.WeightInfo weight_info = 9 [(gogoproto.nullable)=false, (gogoproto.embed)=true];

    optional shipping.v1.types.ValueInfo value_info = 10 [(gogoproto.nullable)=false];

    optional string shipping_note = 11 [(gogoproto.nullable)=false];

    optional meta.v1.Timestamp request_pickup_at = 12;
}

message DeliveryPoint {
    optional order.v1.types.Address shipping_address = 1;

    repeated order.v1.types.ItemLine lines = 2;

    optional string shipping_note = 3 [(gogoproto.nullable)=false];

    optional int64 order_id = 4 [(gogoproto.nullable)=false];

    optional shipping.v1.types.WeightInfo weight_info = 5 [(gogoproto.nullable)=false, (gogoproto.embed)=true];

    optional shipping.v1.types.ValueInfo value_info = 6 [(gogoproto.nullable)=false, (gogoproto.embed)=true];

    optional shipping.v1.tryon.TryOnCode try_on = 11 [(gogoproto.nullable)=false];
}

//-- Commands --//

message CreateShipnowFulfillmentCommand {
    optional ShipnowFulfillment data = 1 [(gogoproto.nullable)=false, (gogoproto.embed)=true];
}

message ConfirmShipnowFulfillmentCommand {
    optional int64 id = 1 [(gogoproto.nullable)=false];
}

message CancelShipnowFulfillmentCommand {
    optional int64 id = 1 [(gogoproto.nullable)=false];

    optional string cancel_reason = 2 [(gogoproto.nullable)=false];
}

//-- Queries --//

message GetShipnowFulfillmentQueryArgs {
    optional int64 id = 1 [(gogoproto.nullable)=false];
}

message GetShipnowFulfillmentQueryResult {

}

//-- Events --//

message ShipnowEvent {
    optional int64 id = 1 [(gogoproto.nullable)=false];

    optional meta.v1.UUID uuid = 2 [(gogoproto.nullable)=false];

    optional meta.v1.UUID correlation_id = 3 [(gogoproto.nullable)=false];

    optional int64 shipnow_fulfillment_id = 4 [(gogoproto.nullable)=false];

    optional int32 type = 10 [(gogoproto.nullable)=false];

    optional EventData data = 11;
}

message EventData {
    oneof data {
        CreatedData Created = 1;

        ConfirmationRequestedData ConfirmationRequested = 4;
        ConfirmationAcceptedData  ConfirmationAccepted  = 5;
        ConfirmationRejectedData  ConfirmationRejected  = 6;

        CancellationRequestedData CancellationRequested = 7;
        CancellationAcceptedData  CancellationAccepted  = 8;
        CancellationRejectedData  CancellationRejected  = 9;
    }
}

message CreatedData {
}

message ConfirmationRequestedData {
}

message ConfirmationAcceptedData {
}

message ConfirmationRejectedData {
}

message CancellationRequestedData {
}

message CancellationAcceptedData {
}

message CancellationRejectedData {
}
