// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: etop/etc/product_type/product_type.proto

package product_type

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductType int32

const (
	ProductType_unknown  ProductType = 0
	ProductType_services ProductType = 1
	ProductType_goods    ProductType = 2
)

var ProductType_name = map[int32]string{
	0: "unknown",
	1: "services",
	2: "goods",
}

var ProductType_value = map[string]int32{
	"unknown":  0,
	"services": 1,
	"goods":    2,
}

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}

func (x *ProductType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProductType_value, data, "ProductType")
	if err != nil {
		return err
	}
	*x = ProductType(value)
	return nil
}

func (ProductType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_98083223afe85d36, []int{0}
}

func init() {
	proto.RegisterEnum("product_type.ProductType", ProductType_name, ProductType_value)
}

func init() {
	proto.RegisterFile("etop/etc/product_type/product_type.proto", fileDescriptor_98083223afe85d36)
}

var fileDescriptor_98083223afe85d36 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0x2d, 0xc9, 0x2f,
	0xd0, 0x4f, 0x2d, 0x49, 0xd6, 0x2f, 0x28, 0xca, 0x4f, 0x29, 0x4d, 0x2e, 0x89, 0x2f, 0xa9, 0x2c,
	0x48, 0x45, 0xe1, 0xe8, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0xf1, 0x20, 0x8b, 0x49, 0x89, 0xa4,
	0xe7, 0xa7, 0xe7, 0x83, 0x25, 0xf4, 0x41, 0x2c, 0x88, 0x1a, 0x2d, 0x63, 0x2e, 0xee, 0x00, 0x88,
	0xaa, 0x90, 0xca, 0x82, 0x54, 0x21, 0x6e, 0x2e, 0xf6, 0xd2, 0xbc, 0xec, 0xbc, 0xfc, 0xf2, 0x3c,
	0x01, 0x06, 0x21, 0x1e, 0x2e, 0x8e, 0xe2, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0xd4, 0x62, 0x01, 0x46,
	0x21, 0x4e, 0x2e, 0xd6, 0xf4, 0xfc, 0xfc, 0x94, 0x62, 0x01, 0x26, 0x27, 0xad, 0x19, 0x8f, 0xe5,
	0x18, 0xa2, 0x54, 0x40, 0x0e, 0xd1, 0x2b, 0xcb, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x48, 0xd2,
	0xc7, 0xea, 0x2e, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x80, 0x36, 0xb8, 0xaf, 0x00, 0x00,
	0x00,
}
