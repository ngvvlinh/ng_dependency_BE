// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: etop/etc/fee/type.proto

package fee

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeeType int32

const (
	FeeType_other    FeeType = 0
	FeeType_shipping FeeType = 1
	FeeType_tax      FeeType = 2
)

var FeeType_name = map[int32]string{
	0: "other",
	1: "shipping",
	2: "tax",
}

var FeeType_value = map[string]int32{
	"other":    0,
	"shipping": 1,
	"tax":      2,
}

func (x FeeType) Enum() *FeeType {
	p := new(FeeType)
	*p = x
	return p
}

func (x FeeType) String() string {
	return proto.EnumName(FeeType_name, int32(x))
}

func (x *FeeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FeeType_value, data, "FeeType")
	if err != nil {
		return err
	}
	*x = FeeType(value)
	return nil
}

func (FeeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7d05b7776c3f9bd5, []int{0}
}

func init() {
	proto.RegisterEnum("fee.FeeType", FeeType_name, FeeType_value)
}

func init() { proto.RegisterFile("etop/etc/fee/type.proto", fileDescriptor_7d05b7776c3f9bd5) }

var fileDescriptor_7d05b7776c3f9bd5 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2d, 0xc9, 0x2f,
	0xd0, 0x4f, 0x2d, 0x49, 0xd6, 0x4f, 0x4b, 0x4d, 0xd5, 0x2f, 0xa9, 0x2c, 0x48, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4b, 0x4d, 0x95, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xf3,
	0xf5, 0x41, 0x2c, 0x88, 0x94, 0x96, 0x36, 0x17, 0xbb, 0x5b, 0x6a, 0x6a, 0x48, 0x65, 0x41, 0xaa,
	0x10, 0x27, 0x17, 0x6b, 0x7e, 0x49, 0x46, 0x6a, 0x91, 0x00, 0x83, 0x10, 0x0f, 0x17, 0x47, 0x71,
	0x46, 0x66, 0x41, 0x41, 0x66, 0x5e, 0xba, 0x00, 0xa3, 0x10, 0x3b, 0x17, 0x73, 0x49, 0x62, 0x85,
	0x00, 0x93, 0x93, 0xe2, 0x8c, 0xc7, 0x72, 0x0c, 0x51, 0xd2, 0x20, 0x6b, 0xf4, 0xca, 0xf2, 0xf4,
	0x13, 0x0b, 0x32, 0xf5, 0x0b, 0x92, 0xf4, 0x91, 0x6d, 0x05, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4f,
	0xd5, 0x8f, 0x2c, 0x84, 0x00, 0x00, 0x00,
}
