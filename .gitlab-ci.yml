stages:
- verify
#- test
- package
- deploy
- dev
- staging
- sandbox
- production
- release

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  PROJECT_DIR: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE

.go-cache:
  before_script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache" 
  cache:
    key: ${CI_PROJECT_TITLE}
    paths:
      - .cache

verify:import:
  extends: .verify
  script:
    - time scripts/verify-imports.sh

verify:lint:
  extends: .verify
  script:
    - time scripts/ci/verify-lint.sh
 
verify:generate:
  extends: .verify
  script:
    - time scripts/ci/verify-generate.sh

#test:
#  image: golang:1.16.8
#  extends: .go-cache
#  stage: test
#  services:
#    - postgres:13-alpine
#    - redis:6.2.4
#  variables:
#    POSTGRES_DB: test
#    POSTGRES_USER: postgres
#    POSTGRES_PASSWORD: "postgres"
#    POSTGRES_HOST_AUTH_METHOD: trust
#  dependencies:
#    - verify:import
#    - verify:lint
#    - verify:generate
#  except: ["tags"]
#  script:
#    - time go run ./scripts/init_testdb/main.go -drop
#    - time scripts/ci/test-all.sh simple
  
create:releasetag:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  cache: {}
  dependencies: []
  only:
    refs:
      - master
  release:
     name: 'Release $CI_COMMIT_SHA'
     description: 'Created using the release-cli for pipeline $CI_PIPELINE_ID'
     tag_name: '$CI_PIPELINE_ID'
     ref: '$CI_COMMIT_SHA'
  script:
    - echo 'running release_job'
  when: manual

include: 'ci/**.yml'
