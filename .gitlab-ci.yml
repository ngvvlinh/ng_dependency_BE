stages:
- verify
- test
- package
- deploy
- dev
- staging
- sandbox
- production
- release

verify:import:
  extends: .verify
  script:
    - time scripts/verify-imports.sh

verify:lint:
  extends: .verify
  script:
    - time scripts/ci/verify-lint.sh
 
verify:generate:
  extends: .verify
  script:
    - time scripts/ci/verify-generate.sh

test:
  image: golang:1.16.8
  cache:
    paths: [".cache"]
  stage: test
  services:
    - postgres:13-alpine
    - redis:6.2.4
  variables:
    POSTGRES_DB: test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_HOST_AUTH_METHOD: trust
  dependencies: 
    - verify:import
    - verify:lint
    - verify:generate
  except: ["tags"]
  before_script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - export PROJECT_DIR=$(echo $CI_PROJECT_DIR | sed "s/$CI_PROJECT_NAME//g" | sed 's:/*$::')
  script:
    - time go run ./scripts/init_testdb/main.go -drop
    - time scripts/ci/test-all.sh simple

create:releasetag:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  cache: {}
  dependencies: []
  only:
    refs:
      - master
  release:
     name: 'Release $CI_COMMIT_SHA'
     description: 'Created using the release-cli for pipeline $CI_PIPELINE_ID'
     tag_name: '$CI_PIPELINE_ID'
     ref: '$CI_COMMIT_SHA'
  script:
    - echo 'running release_job'
  when: manual

include: 'ci/**.yml'
