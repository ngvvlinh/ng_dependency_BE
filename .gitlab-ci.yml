stages:
- verify
- test
- package
- deploy
- dev
- sandbox
- staging
- production

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  PROJECT_DIR: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths: [".cache"]
  policy: pull

verify:import:
  extends: .verify
  script:
    - time scripts/verify-imports.sh

verify:lint:
  extends: .verify
  script:
    - time scripts/ci/verify-lint.sh

verify:generate:
  extends: .verify
  script:
    - time scripts/ci/verify-generate.sh

go-cache:
  stage: test
  cache:
    <<: *global_cache
    policy: push
  script:
    - go install ./...
  only:
    refs:
      - master
    changes:
      - "go.mod"
      - "go.sum"

test:
  image: golang:1.15
  cache:
    <<: *global_cache
    policy: pull
  stage: test
  services:
    - postgres:12.2-alpine
    - redis:latest
  variables:
    POSTGRES_DB: test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_HOST_AUTH_METHOD: trust
  dependencies: 
    - verify:import
    - verify:lint
    - verify:generate
  except: ["tags"]
  before_script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
  script:
    - time go run ./scripts/init_testdb/main.go -drop
    - time scripts/ci/test-all.sh simple

include: 'ci/**.yml'
