// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	fbpaging "etop.vn/api/fabo/fbpaging"
	fbpagemodel "etop.vn/backend/com/fabo/main/fbpage/model"
	conversion "etop.vn/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*fbpagemodel.ExternalCategory)(nil), (*fbpaging.ExternalCategory)(nil), func(arg, out interface{}) error {
		Convert_fbpagemodel_ExternalCategory_fbpaging_ExternalCategory(arg.(*fbpagemodel.ExternalCategory), out.(*fbpaging.ExternalCategory))
		return nil
	})
	s.Register(([]*fbpagemodel.ExternalCategory)(nil), (*[]*fbpaging.ExternalCategory)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpagemodel_ExternalCategories_fbpaging_ExternalCategories(arg.([]*fbpagemodel.ExternalCategory))
		*out.(*[]*fbpaging.ExternalCategory) = out0
		return nil
	})
	s.Register((*fbpaging.ExternalCategory)(nil), (*fbpagemodel.ExternalCategory)(nil), func(arg, out interface{}) error {
		Convert_fbpaging_ExternalCategory_fbpagemodel_ExternalCategory(arg.(*fbpaging.ExternalCategory), out.(*fbpagemodel.ExternalCategory))
		return nil
	})
	s.Register(([]*fbpaging.ExternalCategory)(nil), (*[]*fbpagemodel.ExternalCategory)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpaging_ExternalCategories_fbpagemodel_ExternalCategories(arg.([]*fbpaging.ExternalCategory))
		*out.(*[]*fbpagemodel.ExternalCategory) = out0
		return nil
	})
	s.Register((*fbpagemodel.FbPage)(nil), (*fbpaging.FbPage)(nil), func(arg, out interface{}) error {
		Convert_fbpagemodel_FbPage_fbpaging_FbPage(arg.(*fbpagemodel.FbPage), out.(*fbpaging.FbPage))
		return nil
	})
	s.Register(([]*fbpagemodel.FbPage)(nil), (*[]*fbpaging.FbPage)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpagemodel_FbPages_fbpaging_FbPages(arg.([]*fbpagemodel.FbPage))
		*out.(*[]*fbpaging.FbPage) = out0
		return nil
	})
	s.Register((*fbpaging.FbPage)(nil), (*fbpagemodel.FbPage)(nil), func(arg, out interface{}) error {
		Convert_fbpaging_FbPage_fbpagemodel_FbPage(arg.(*fbpaging.FbPage), out.(*fbpagemodel.FbPage))
		return nil
	})
	s.Register(([]*fbpaging.FbPage)(nil), (*[]*fbpagemodel.FbPage)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpaging_FbPages_fbpagemodel_FbPages(arg.([]*fbpaging.FbPage))
		*out.(*[]*fbpagemodel.FbPage) = out0
		return nil
	})
	s.Register((*fbpaging.CreateFbPageArgs)(nil), (*fbpaging.FbPage)(nil), func(arg, out interface{}) error {
		Apply_fbpaging_CreateFbPageArgs_fbpaging_FbPage(arg.(*fbpaging.CreateFbPageArgs), out.(*fbpaging.FbPage))
		return nil
	})
	s.Register((*fbpagemodel.FbPageInternal)(nil), (*fbpaging.FbPageInternal)(nil), func(arg, out interface{}) error {
		Convert_fbpagemodel_FbPageInternal_fbpaging_FbPageInternal(arg.(*fbpagemodel.FbPageInternal), out.(*fbpaging.FbPageInternal))
		return nil
	})
	s.Register(([]*fbpagemodel.FbPageInternal)(nil), (*[]*fbpaging.FbPageInternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpagemodel_FbPageInternals_fbpaging_FbPageInternals(arg.([]*fbpagemodel.FbPageInternal))
		*out.(*[]*fbpaging.FbPageInternal) = out0
		return nil
	})
	s.Register((*fbpaging.FbPageInternal)(nil), (*fbpagemodel.FbPageInternal)(nil), func(arg, out interface{}) error {
		Convert_fbpaging_FbPageInternal_fbpagemodel_FbPageInternal(arg.(*fbpaging.FbPageInternal), out.(*fbpagemodel.FbPageInternal))
		return nil
	})
	s.Register(([]*fbpaging.FbPageInternal)(nil), (*[]*fbpagemodel.FbPageInternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbpaging_FbPageInternals_fbpagemodel_FbPageInternals(arg.([]*fbpaging.FbPageInternal))
		*out.(*[]*fbpagemodel.FbPageInternal) = out0
		return nil
	})
	s.Register((*fbpaging.CreateFbPageInternalArgs)(nil), (*fbpaging.FbPageInternal)(nil), func(arg, out interface{}) error {
		Apply_fbpaging_CreateFbPageInternalArgs_fbpaging_FbPageInternal(arg.(*fbpaging.CreateFbPageInternalArgs), out.(*fbpaging.FbPageInternal))
		return nil
	})
}

//-- convert etop.vn/api/fabo/fbpaging.ExternalCategory --//

func Convert_fbpagemodel_ExternalCategory_fbpaging_ExternalCategory(arg *fbpagemodel.ExternalCategory, out *fbpaging.ExternalCategory) *fbpaging.ExternalCategory {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpaging.ExternalCategory{}
	}
	convert_fbpagemodel_ExternalCategory_fbpaging_ExternalCategory(arg, out)
	return out
}

func convert_fbpagemodel_ExternalCategory_fbpaging_ExternalCategory(arg *fbpagemodel.ExternalCategory, out *fbpaging.ExternalCategory) {
	out.ID = arg.ID     // simple assign
	out.Name = arg.Name // simple assign
}

func Convert_fbpagemodel_ExternalCategories_fbpaging_ExternalCategories(args []*fbpagemodel.ExternalCategory) (outs []*fbpaging.ExternalCategory) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpaging.ExternalCategory, len(args))
	outs = make([]*fbpaging.ExternalCategory, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpagemodel_ExternalCategory_fbpaging_ExternalCategory(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbpaging_ExternalCategory_fbpagemodel_ExternalCategory(arg *fbpaging.ExternalCategory, out *fbpagemodel.ExternalCategory) *fbpagemodel.ExternalCategory {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpagemodel.ExternalCategory{}
	}
	convert_fbpaging_ExternalCategory_fbpagemodel_ExternalCategory(arg, out)
	return out
}

func convert_fbpaging_ExternalCategory_fbpagemodel_ExternalCategory(arg *fbpaging.ExternalCategory, out *fbpagemodel.ExternalCategory) {
	out.ID = arg.ID     // simple assign
	out.Name = arg.Name // simple assign
}

func Convert_fbpaging_ExternalCategories_fbpagemodel_ExternalCategories(args []*fbpaging.ExternalCategory) (outs []*fbpagemodel.ExternalCategory) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpagemodel.ExternalCategory, len(args))
	outs = make([]*fbpagemodel.ExternalCategory, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpaging_ExternalCategory_fbpagemodel_ExternalCategory(args[i], &tmps[i])
	}
	return outs
}

//-- convert etop.vn/api/fabo/fbpaging.FbPage --//

func Convert_fbpagemodel_FbPage_fbpaging_FbPage(arg *fbpagemodel.FbPage, out *fbpaging.FbPage) *fbpaging.FbPage {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpaging.FbPage{}
	}
	convert_fbpagemodel_FbPage_fbpaging_FbPage(arg, out)
	return out
}

func convert_fbpagemodel_FbPage_fbpaging_FbPage(arg *fbpagemodel.FbPage, out *fbpaging.FbPage) {
	out.ID = arg.ID                             // simple assign
	out.ExternalID = arg.ExternalID             // simple assign
	out.FbUserID = arg.FbUserID                 // simple assign
	out.ShopID = arg.ShopID                     // simple assign
	out.UserID = arg.UserID                     // simple assign
	out.ExternalName = arg.ExternalName         // simple assign
	out.ExternalCategory = arg.ExternalCategory // simple assign
	out.ExternalCategoryList = Convert_fbpagemodel_ExternalCategories_fbpaging_ExternalCategories(arg.ExternalCategoryList)
	out.ExternalTasks = arg.ExternalTasks       // simple assign
	out.ExternalImageURL = arg.ExternalImageURL // simple assign
	out.Status = arg.Status                     // simple assign
	out.ConnectionStatus = arg.ConnectionStatus // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
}

func Convert_fbpagemodel_FbPages_fbpaging_FbPages(args []*fbpagemodel.FbPage) (outs []*fbpaging.FbPage) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpaging.FbPage, len(args))
	outs = make([]*fbpaging.FbPage, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpagemodel_FbPage_fbpaging_FbPage(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbpaging_FbPage_fbpagemodel_FbPage(arg *fbpaging.FbPage, out *fbpagemodel.FbPage) *fbpagemodel.FbPage {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpagemodel.FbPage{}
	}
	convert_fbpaging_FbPage_fbpagemodel_FbPage(arg, out)
	return out
}

func convert_fbpaging_FbPage_fbpagemodel_FbPage(arg *fbpaging.FbPage, out *fbpagemodel.FbPage) {
	out.ID = arg.ID                             // simple assign
	out.ExternalID = arg.ExternalID             // simple assign
	out.FbUserID = arg.FbUserID                 // simple assign
	out.ShopID = arg.ShopID                     // simple assign
	out.UserID = arg.UserID                     // simple assign
	out.ExternalName = arg.ExternalName         // simple assign
	out.ExternalCategory = arg.ExternalCategory // simple assign
	out.ExternalCategoryList = Convert_fbpaging_ExternalCategories_fbpagemodel_ExternalCategories(arg.ExternalCategoryList)
	out.ExternalTasks = arg.ExternalTasks       // simple assign
	out.ExternalImageURL = arg.ExternalImageURL // simple assign
	out.Status = arg.Status                     // simple assign
	out.ConnectionStatus = arg.ConnectionStatus // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = time.Time{}                 // zero value
}

func Convert_fbpaging_FbPages_fbpagemodel_FbPages(args []*fbpaging.FbPage) (outs []*fbpagemodel.FbPage) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpagemodel.FbPage, len(args))
	outs = make([]*fbpagemodel.FbPage, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpaging_FbPage_fbpagemodel_FbPage(args[i], &tmps[i])
	}
	return outs
}

func Apply_fbpaging_CreateFbPageArgs_fbpaging_FbPage(arg *fbpaging.CreateFbPageArgs, out *fbpaging.FbPage) *fbpaging.FbPage {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpaging.FbPage{}
	}
	apply_fbpaging_CreateFbPageArgs_fbpaging_FbPage(arg, out)
	return out
}

func apply_fbpaging_CreateFbPageArgs_fbpaging_FbPage(arg *fbpaging.CreateFbPageArgs, out *fbpaging.FbPage) {
	out.ID = arg.ID                                     // simple assign
	out.ExternalID = arg.ExternalID                     // simple assign
	out.FbUserID = arg.FbUserID                         // simple assign
	out.ShopID = arg.ShopID                             // simple assign
	out.UserID = arg.UserID                             // simple assign
	out.ExternalName = arg.ExternalName                 // simple assign
	out.ExternalCategory = arg.ExternalCategory         // simple assign
	out.ExternalCategoryList = arg.ExternalCategoryList // simple assign
	out.ExternalTasks = arg.ExternalTasks               // simple assign
	out.ExternalImageURL = arg.ExternalImageURL         // simple assign
	out.Status = arg.Status                             // simple assign
	out.ConnectionStatus = arg.ConnectionStatus         // simple assign
	out.CreatedAt = time.Time{}                         // zero value
	out.UpdatedAt = time.Time{}                         // zero value
}

//-- convert etop.vn/api/fabo/fbpaging.FbPageInternal --//

func Convert_fbpagemodel_FbPageInternal_fbpaging_FbPageInternal(arg *fbpagemodel.FbPageInternal, out *fbpaging.FbPageInternal) *fbpaging.FbPageInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpaging.FbPageInternal{}
	}
	convert_fbpagemodel_FbPageInternal_fbpaging_FbPageInternal(arg, out)
	return out
}

func convert_fbpagemodel_FbPageInternal_fbpaging_FbPageInternal(arg *fbpagemodel.FbPageInternal, out *fbpaging.FbPageInternal) {
	out.ID = arg.ID               // simple assign
	out.Token = arg.Token         // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbpagemodel_FbPageInternals_fbpaging_FbPageInternals(args []*fbpagemodel.FbPageInternal) (outs []*fbpaging.FbPageInternal) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpaging.FbPageInternal, len(args))
	outs = make([]*fbpaging.FbPageInternal, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpagemodel_FbPageInternal_fbpaging_FbPageInternal(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbpaging_FbPageInternal_fbpagemodel_FbPageInternal(arg *fbpaging.FbPageInternal, out *fbpagemodel.FbPageInternal) *fbpagemodel.FbPageInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpagemodel.FbPageInternal{}
	}
	convert_fbpaging_FbPageInternal_fbpagemodel_FbPageInternal(arg, out)
	return out
}

func convert_fbpaging_FbPageInternal_fbpagemodel_FbPageInternal(arg *fbpaging.FbPageInternal, out *fbpagemodel.FbPageInternal) {
	out.ID = arg.ID               // simple assign
	out.Token = arg.Token         // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbpaging_FbPageInternals_fbpagemodel_FbPageInternals(args []*fbpaging.FbPageInternal) (outs []*fbpagemodel.FbPageInternal) {
	if args == nil {
		return nil
	}
	tmps := make([]fbpagemodel.FbPageInternal, len(args))
	outs = make([]*fbpagemodel.FbPageInternal, len(args))
	for i := range tmps {
		outs[i] = Convert_fbpaging_FbPageInternal_fbpagemodel_FbPageInternal(args[i], &tmps[i])
	}
	return outs
}

func Apply_fbpaging_CreateFbPageInternalArgs_fbpaging_FbPageInternal(arg *fbpaging.CreateFbPageInternalArgs, out *fbpaging.FbPageInternal) *fbpaging.FbPageInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbpaging.FbPageInternal{}
	}
	apply_fbpaging_CreateFbPageInternalArgs_fbpaging_FbPageInternal(arg, out)
	return out
}

func apply_fbpaging_CreateFbPageInternalArgs_fbpaging_FbPageInternal(arg *fbpaging.CreateFbPageInternalArgs, out *fbpaging.FbPageInternal) {
	out.ID = arg.ID             // simple assign
	out.Token = arg.Token       // simple assign
	out.UpdatedAt = time.Time{} // zero value
}
