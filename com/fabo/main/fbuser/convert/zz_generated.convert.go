// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	fbusering "etop.vn/api/fabo/fbusering"
	fbusermodel "etop.vn/backend/com/fabo/main/fbuser/model"
	conversion "etop.vn/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*fbusermodel.ExternalFBUserInfo)(nil), (*fbusering.ExternalFBUserInfo)(nil), func(arg, out interface{}) error {
		Convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(arg.(*fbusermodel.ExternalFBUserInfo), out.(*fbusering.ExternalFBUserInfo))
		return nil
	})
	s.Register(([]*fbusermodel.ExternalFBUserInfo)(nil), (*[]*fbusering.ExternalFBUserInfo)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusermodel_ExternalFBUserInfoes_fbusering_ExternalFBUserInfoes(arg.([]*fbusermodel.ExternalFBUserInfo))
		*out.(*[]*fbusering.ExternalFBUserInfo) = out0
		return nil
	})
	s.Register((*fbusering.ExternalFBUserInfo)(nil), (*fbusermodel.ExternalFBUserInfo)(nil), func(arg, out interface{}) error {
		Convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(arg.(*fbusering.ExternalFBUserInfo), out.(*fbusermodel.ExternalFBUserInfo))
		return nil
	})
	s.Register(([]*fbusering.ExternalFBUserInfo)(nil), (*[]*fbusermodel.ExternalFBUserInfo)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusering_ExternalFBUserInfoes_fbusermodel_ExternalFBUserInfoes(arg.([]*fbusering.ExternalFBUserInfo))
		*out.(*[]*fbusermodel.ExternalFBUserInfo) = out0
		return nil
	})
	s.Register((*fbusermodel.FbUser)(nil), (*fbusering.FbUser)(nil), func(arg, out interface{}) error {
		Convert_fbusermodel_FbUser_fbusering_FbUser(arg.(*fbusermodel.FbUser), out.(*fbusering.FbUser))
		return nil
	})
	s.Register(([]*fbusermodel.FbUser)(nil), (*[]*fbusering.FbUser)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusermodel_FbUsers_fbusering_FbUsers(arg.([]*fbusermodel.FbUser))
		*out.(*[]*fbusering.FbUser) = out0
		return nil
	})
	s.Register((*fbusering.FbUser)(nil), (*fbusermodel.FbUser)(nil), func(arg, out interface{}) error {
		Convert_fbusering_FbUser_fbusermodel_FbUser(arg.(*fbusering.FbUser), out.(*fbusermodel.FbUser))
		return nil
	})
	s.Register(([]*fbusering.FbUser)(nil), (*[]*fbusermodel.FbUser)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusering_FbUsers_fbusermodel_FbUsers(arg.([]*fbusering.FbUser))
		*out.(*[]*fbusermodel.FbUser) = out0
		return nil
	})
	s.Register((*fbusering.CreateFbUserArgs)(nil), (*fbusering.FbUser)(nil), func(arg, out interface{}) error {
		Apply_fbusering_CreateFbUserArgs_fbusering_FbUser(arg.(*fbusering.CreateFbUserArgs), out.(*fbusering.FbUser))
		return nil
	})
	s.Register((*fbusermodel.FbUserInternal)(nil), (*fbusering.FbUserInternal)(nil), func(arg, out interface{}) error {
		Convert_fbusermodel_FbUserInternal_fbusering_FbUserInternal(arg.(*fbusermodel.FbUserInternal), out.(*fbusering.FbUserInternal))
		return nil
	})
	s.Register(([]*fbusermodel.FbUserInternal)(nil), (*[]*fbusering.FbUserInternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusermodel_FbUserInternals_fbusering_FbUserInternals(arg.([]*fbusermodel.FbUserInternal))
		*out.(*[]*fbusering.FbUserInternal) = out0
		return nil
	})
	s.Register((*fbusering.FbUserInternal)(nil), (*fbusermodel.FbUserInternal)(nil), func(arg, out interface{}) error {
		Convert_fbusering_FbUserInternal_fbusermodel_FbUserInternal(arg.(*fbusering.FbUserInternal), out.(*fbusermodel.FbUserInternal))
		return nil
	})
	s.Register(([]*fbusering.FbUserInternal)(nil), (*[]*fbusermodel.FbUserInternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_fbusering_FbUserInternals_fbusermodel_FbUserInternals(arg.([]*fbusering.FbUserInternal))
		*out.(*[]*fbusermodel.FbUserInternal) = out0
		return nil
	})
	s.Register((*fbusering.CreateFbUserInternalArgs)(nil), (*fbusering.FbUserInternal)(nil), func(arg, out interface{}) error {
		Apply_fbusering_CreateFbUserInternalArgs_fbusering_FbUserInternal(arg.(*fbusering.CreateFbUserInternalArgs), out.(*fbusering.FbUserInternal))
		return nil
	})
}

//-- convert etop.vn/api/fabo/fbusering.ExternalFBUserInfo --//

func Convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(arg *fbusermodel.ExternalFBUserInfo, out *fbusering.ExternalFBUserInfo) *fbusering.ExternalFBUserInfo {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusering.ExternalFBUserInfo{}
	}
	convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(arg, out)
	return out
}

func convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(arg *fbusermodel.ExternalFBUserInfo, out *fbusering.ExternalFBUserInfo) {
	out.Name = arg.Name           // simple assign
	out.FirstName = arg.FirstName // simple assign
	out.LastName = arg.LastName   // simple assign
	out.ShortName = arg.ShortName // simple assign
	out.ImageURL = arg.ImageURL   // simple assign
}

func Convert_fbusermodel_ExternalFBUserInfoes_fbusering_ExternalFBUserInfoes(args []*fbusermodel.ExternalFBUserInfo) (outs []*fbusering.ExternalFBUserInfo) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusering.ExternalFBUserInfo, len(args))
	outs = make([]*fbusering.ExternalFBUserInfo, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(arg *fbusering.ExternalFBUserInfo, out *fbusermodel.ExternalFBUserInfo) *fbusermodel.ExternalFBUserInfo {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusermodel.ExternalFBUserInfo{}
	}
	convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(arg, out)
	return out
}

func convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(arg *fbusering.ExternalFBUserInfo, out *fbusermodel.ExternalFBUserInfo) {
	out.Name = arg.Name           // simple assign
	out.FirstName = arg.FirstName // simple assign
	out.LastName = arg.LastName   // simple assign
	out.ShortName = arg.ShortName // simple assign
	out.ImageURL = arg.ImageURL   // simple assign
}

func Convert_fbusering_ExternalFBUserInfoes_fbusermodel_ExternalFBUserInfoes(args []*fbusering.ExternalFBUserInfo) (outs []*fbusermodel.ExternalFBUserInfo) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusermodel.ExternalFBUserInfo, len(args))
	outs = make([]*fbusermodel.ExternalFBUserInfo, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(args[i], &tmps[i])
	}
	return outs
}

//-- convert etop.vn/api/fabo/fbusering.FbUser --//

func Convert_fbusermodel_FbUser_fbusering_FbUser(arg *fbusermodel.FbUser, out *fbusering.FbUser) *fbusering.FbUser {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusering.FbUser{}
	}
	convert_fbusermodel_FbUser_fbusering_FbUser(arg, out)
	return out
}

func convert_fbusermodel_FbUser_fbusering_FbUser(arg *fbusermodel.FbUser, out *fbusering.FbUser) {
	out.ID = arg.ID                 // simple assign
	out.ExternalID = arg.ExternalID // simple assign
	out.UserID = arg.UserID         // simple assign
	out.ExternalInfo = Convert_fbusermodel_ExternalFBUserInfo_fbusering_ExternalFBUserInfo(arg.ExternalInfo, nil)
	out.Status = arg.Status       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbusermodel_FbUsers_fbusering_FbUsers(args []*fbusermodel.FbUser) (outs []*fbusering.FbUser) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusering.FbUser, len(args))
	outs = make([]*fbusering.FbUser, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusermodel_FbUser_fbusering_FbUser(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbusering_FbUser_fbusermodel_FbUser(arg *fbusering.FbUser, out *fbusermodel.FbUser) *fbusermodel.FbUser {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusermodel.FbUser{}
	}
	convert_fbusering_FbUser_fbusermodel_FbUser(arg, out)
	return out
}

func convert_fbusering_FbUser_fbusermodel_FbUser(arg *fbusering.FbUser, out *fbusermodel.FbUser) {
	out.ID = arg.ID                 // simple assign
	out.ExternalID = arg.ExternalID // simple assign
	out.UserID = arg.UserID         // simple assign
	out.ExternalInfo = Convert_fbusering_ExternalFBUserInfo_fbusermodel_ExternalFBUserInfo(arg.ExternalInfo, nil)
	out.Status = arg.Status       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbusering_FbUsers_fbusermodel_FbUsers(args []*fbusering.FbUser) (outs []*fbusermodel.FbUser) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusermodel.FbUser, len(args))
	outs = make([]*fbusermodel.FbUser, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusering_FbUser_fbusermodel_FbUser(args[i], &tmps[i])
	}
	return outs
}

func Apply_fbusering_CreateFbUserArgs_fbusering_FbUser(arg *fbusering.CreateFbUserArgs, out *fbusering.FbUser) *fbusering.FbUser {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusering.FbUser{}
	}
	apply_fbusering_CreateFbUserArgs_fbusering_FbUser(arg, out)
	return out
}

func apply_fbusering_CreateFbUserArgs_fbusering_FbUser(arg *fbusering.CreateFbUserArgs, out *fbusering.FbUser) {
	out.ID = arg.ID                     // simple assign
	out.ExternalID = arg.ExternalID     // simple assign
	out.UserID = arg.UserID             // simple assign
	out.ExternalInfo = arg.ExternalInfo // simple assign
	out.Status = arg.Status             // simple assign
	out.CreatedAt = time.Time{}         // zero value
	out.UpdatedAt = time.Time{}         // zero value
}

//-- convert etop.vn/api/fabo/fbusering.FbUserInternal --//

func Convert_fbusermodel_FbUserInternal_fbusering_FbUserInternal(arg *fbusermodel.FbUserInternal, out *fbusering.FbUserInternal) *fbusering.FbUserInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusering.FbUserInternal{}
	}
	convert_fbusermodel_FbUserInternal_fbusering_FbUserInternal(arg, out)
	return out
}

func convert_fbusermodel_FbUserInternal_fbusering_FbUserInternal(arg *fbusermodel.FbUserInternal, out *fbusering.FbUserInternal) {
	out.ID = arg.ID               // simple assign
	out.Token = arg.Token         // simple assign
	out.ExpiresIn = arg.ExpiresIn // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbusermodel_FbUserInternals_fbusering_FbUserInternals(args []*fbusermodel.FbUserInternal) (outs []*fbusering.FbUserInternal) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusering.FbUserInternal, len(args))
	outs = make([]*fbusering.FbUserInternal, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusermodel_FbUserInternal_fbusering_FbUserInternal(args[i], &tmps[i])
	}
	return outs
}

func Convert_fbusering_FbUserInternal_fbusermodel_FbUserInternal(arg *fbusering.FbUserInternal, out *fbusermodel.FbUserInternal) *fbusermodel.FbUserInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusermodel.FbUserInternal{}
	}
	convert_fbusering_FbUserInternal_fbusermodel_FbUserInternal(arg, out)
	return out
}

func convert_fbusering_FbUserInternal_fbusermodel_FbUserInternal(arg *fbusering.FbUserInternal, out *fbusermodel.FbUserInternal) {
	out.ID = arg.ID               // simple assign
	out.Token = arg.Token         // simple assign
	out.ExpiresIn = arg.ExpiresIn // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
}

func Convert_fbusering_FbUserInternals_fbusermodel_FbUserInternals(args []*fbusering.FbUserInternal) (outs []*fbusermodel.FbUserInternal) {
	if args == nil {
		return nil
	}
	tmps := make([]fbusermodel.FbUserInternal, len(args))
	outs = make([]*fbusermodel.FbUserInternal, len(args))
	for i := range tmps {
		outs[i] = Convert_fbusering_FbUserInternal_fbusermodel_FbUserInternal(args[i], &tmps[i])
	}
	return outs
}

func Apply_fbusering_CreateFbUserInternalArgs_fbusering_FbUserInternal(arg *fbusering.CreateFbUserInternalArgs, out *fbusering.FbUserInternal) *fbusering.FbUserInternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &fbusering.FbUserInternal{}
	}
	apply_fbusering_CreateFbUserInternalArgs_fbusering_FbUserInternal(arg, out)
	return out
}

func apply_fbusering_CreateFbUserInternalArgs_fbusering_FbUserInternal(arg *fbusering.CreateFbUserInternalArgs, out *fbusering.FbUserInternal) {
	out.ID = arg.ID               // simple assign
	out.Token = arg.Token         // simple assign
	out.ExpiresIn = arg.ExpiresIn // simple assign
	out.UpdatedAt = time.Time{}   // zero value
}
