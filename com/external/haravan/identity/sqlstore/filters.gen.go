// Generated by common/sq. DO NOT EDIT.

package sqlstore

import (
	"time"

	"etop.vn/backend/pkg/common/sql/sq"
	"etop.vn/capi/dot"
)

type ExternalAccountHaravanFilters struct{ prefix string }

func NewExternalAccountHaravanFilters(prefix string) ExternalAccountHaravanFilters {
	return ExternalAccountHaravanFilters{prefix}
}

func (ft *ExternalAccountHaravanFilters) Filter(pred string, args ...interface{}) sq.WriterTo {
	return sq.Filter(&ft.prefix, pred, args...)
}

func (ft ExternalAccountHaravanFilters) Prefix() string {
	return ft.prefix
}

func (ft *ExternalAccountHaravanFilters) ByID(ID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByIDPtr(ID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == nil,
		IsZero: ID != nil && (*ID) == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByShopID(ShopID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByShopIDPtr(ShopID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == nil,
		IsZero: ShopID != nil && (*ShopID) == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) BySubdomain(Subdomain string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "subdomain",
		Value:  Subdomain,
		IsNil:  Subdomain == "",
	}
}

func (ft *ExternalAccountHaravanFilters) BySubdomainPtr(Subdomain *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "subdomain",
		Value:  Subdomain,
		IsNil:  Subdomain == nil,
		IsZero: Subdomain != nil && (*Subdomain) == "",
	}
}

func (ft *ExternalAccountHaravanFilters) ByAccessToken(AccessToken string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "access_token",
		Value:  AccessToken,
		IsNil:  AccessToken == "",
	}
}

func (ft *ExternalAccountHaravanFilters) ByAccessTokenPtr(AccessToken *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "access_token",
		Value:  AccessToken,
		IsNil:  AccessToken == nil,
		IsZero: AccessToken != nil && (*AccessToken) == "",
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalShopID(ExternalShopID int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shop_id",
		Value:  ExternalShopID,
		IsNil:  ExternalShopID == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalShopIDPtr(ExternalShopID *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shop_id",
		Value:  ExternalShopID,
		IsNil:  ExternalShopID == nil,
		IsZero: ExternalShopID != nil && (*ExternalShopID) == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalCarrierServiceID(ExternalCarrierServiceID int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_carrier_service_id",
		Value:  ExternalCarrierServiceID,
		IsNil:  ExternalCarrierServiceID == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalCarrierServiceIDPtr(ExternalCarrierServiceID *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_carrier_service_id",
		Value:  ExternalCarrierServiceID,
		IsNil:  ExternalCarrierServiceID == nil,
		IsZero: ExternalCarrierServiceID != nil && (*ExternalCarrierServiceID) == 0,
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalConnectedCarrierServiceAt(ExternalConnectedCarrierServiceAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_connected_carrier_service_at",
		Value:  ExternalConnectedCarrierServiceAt,
		IsNil:  ExternalConnectedCarrierServiceAt.IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByExternalConnectedCarrierServiceAtPtr(ExternalConnectedCarrierServiceAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_connected_carrier_service_at",
		Value:  ExternalConnectedCarrierServiceAt,
		IsNil:  ExternalConnectedCarrierServiceAt == nil,
		IsZero: ExternalConnectedCarrierServiceAt != nil && (*ExternalConnectedCarrierServiceAt).IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByExpiresAt(ExpiresAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "expires_at",
		Value:  ExpiresAt,
		IsNil:  ExpiresAt.IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByExpiresAtPtr(ExpiresAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "expires_at",
		Value:  ExpiresAt,
		IsNil:  ExpiresAt == nil,
		IsZero: ExpiresAt != nil && (*ExpiresAt).IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByCreatedAt(CreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt.IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByCreatedAtPtr(CreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt == nil,
		IsZero: CreatedAt != nil && (*CreatedAt).IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByUpdatedAt(UpdatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt.IsZero(),
	}
}

func (ft *ExternalAccountHaravanFilters) ByUpdatedAtPtr(UpdatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt == nil,
		IsZero: UpdatedAt != nil && (*UpdatedAt).IsZero(),
	}
}
