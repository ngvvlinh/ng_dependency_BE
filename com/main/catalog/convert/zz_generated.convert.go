// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	catalog "etop.vn/api/main/catalog"
	model "etop.vn/backend/com/main/catalog/model"
	model1 "etop.vn/backend/pkg/etop/model"
)

func convert_catalogShopProduct_modelShopProduct(in *catalog.ShopProduct) (out *model.ShopProduct) {
	if in == nil {
		return nil
	}
	return &model.ShopProduct{
		ShopID:        in.ShopID,
		ProductID:     in.ProductID,
		CollectionIDs: nil, // types do not match
		Code:          in.Code,
		Name:          in.Name,
		Description:   "",  // zero value
		DescHTML:      "",  // zero value
		ShortDesc:     "",  // zero value
		ImageURLs:     nil, // types do not match
		Note:          in.Note,
		Tags:          nil, // types do not match
		Unit:          in.Unit,
		CategoryID:    in.CategoryID,
		CostPrice:     0, // zero value
		ListPrice:     0, // zero value
		RetailPrice:   0, // zero value
		Status:        model1.Status3(in.Status),
		CreatedAt:     in.CreatedAt,
		UpdatedAt:     in.UpdatedAt,
		DeletedAt:     time.Time{}, // zero value
		NameNorm:      "",          // zero value
		NameNormUa:    "",          // zero value
	}
}

func convert_catalogShopProducts_modelShopProducts(ins []*catalog.ShopProduct) (outs []*model.ShopProduct) {
	outs = make([]*model.ShopProduct, len(ins))
	for i := range outs {
		outs[i] = convert_catalogShopProduct_modelShopProduct(ins[i])
	}
	return outs
}

func convert_catalogShopVariant_modelShopVariant(in *catalog.ShopVariant) (out *model.ShopVariant) {
	if in == nil {
		return nil
	}
	return &model.ShopVariant{
		ShopID:      in.ShopID,
		VariantID:   in.VariantID,
		ProductID:   in.ProductID,
		Code:        in.Code,
		Name:        in.Name,
		Description: "",  // zero value
		DescHTML:    "",  // zero value
		ShortDesc:   "",  // zero value
		ImageURLs:   nil, // types do not match
		Note:        in.Note,
		Tags:        nil, // zero value
		CostPrice:   0,   // zero value
		ListPrice:   0,   // zero value
		RetailPrice: 0,   // zero value
		Status:      model1.Status3(in.Status),
		Attributes:  nil, // types do not match
		CreatedAt:   in.CreatedAt,
		UpdatedAt:   in.UpdatedAt,
		DeletedAt:   time.Time{}, // zero value
		NameNorm:    "",          // zero value
		AttrNormKv:  "",          // zero value
	}
}

func convert_catalogShopVariants_modelShopVariants(ins []*catalog.ShopVariant) (outs []*model.ShopVariant) {
	outs = make([]*model.ShopVariant, len(ins))
	for i := range outs {
		outs[i] = convert_catalogShopVariant_modelShopVariant(ins[i])
	}
	return outs
}
