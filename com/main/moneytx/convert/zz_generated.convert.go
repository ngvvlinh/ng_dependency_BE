// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	moneytx "o.o/api/main/moneytx"
	etopconvert "o.o/backend/com/main/etop/convert"
	identityconvert "o.o/backend/com/main/identity/convert"
	moneytxmodel "o.o/backend/com/main/moneytx/model"
	txmodely "o.o/backend/com/main/moneytx/txmodely"
	orderingconvert "o.o/backend/com/main/ordering/convert"
	shippingconvert "o.o/backend/com/main/shipping/convert"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*moneytxmodel.MoneyTransactionShipping)(nil), (*moneytx.MoneyTransactionShipping)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(arg.(*moneytxmodel.MoneyTransactionShipping), out.(*moneytx.MoneyTransactionShipping))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShipping)(nil), (*[]*moneytx.MoneyTransactionShipping)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippings_moneytx_MoneyTransactionShippings(arg.([]*moneytxmodel.MoneyTransactionShipping))
		*out.(*[]*moneytx.MoneyTransactionShipping) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShipping)(nil), (*moneytxmodel.MoneyTransactionShipping)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(arg.(*moneytx.MoneyTransactionShipping), out.(*moneytxmodel.MoneyTransactionShipping))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShipping)(nil), (*[]*moneytxmodel.MoneyTransactionShipping)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippings_moneytxmodel_MoneyTransactionShippings(arg.([]*moneytx.MoneyTransactionShipping))
		*out.(*[]*moneytxmodel.MoneyTransactionShipping) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingEtop)(nil), (*moneytx.MoneyTransactionShippingEtop)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(arg.(*moneytxmodel.MoneyTransactionShippingEtop), out.(*moneytx.MoneyTransactionShippingEtop))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingEtop)(nil), (*[]*moneytx.MoneyTransactionShippingEtop)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingEtops_moneytx_MoneyTransactionShippingEtops(arg.([]*moneytxmodel.MoneyTransactionShippingEtop))
		*out.(*[]*moneytx.MoneyTransactionShippingEtop) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingEtop)(nil), (*moneytxmodel.MoneyTransactionShippingEtop)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(arg.(*moneytx.MoneyTransactionShippingEtop), out.(*moneytxmodel.MoneyTransactionShippingEtop))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingEtop)(nil), (*[]*moneytxmodel.MoneyTransactionShippingEtop)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingEtops_moneytxmodel_MoneyTransactionShippingEtops(arg.([]*moneytx.MoneyTransactionShippingEtop))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingEtop) = out0
		return nil
	})
	s.Register((*txmodely.MoneyTransactionShippingEtopExtended)(nil), (*moneytx.MoneyTransactionShippingEtopExtended)(nil), func(arg, out interface{}) error {
		Convert_txmodely_MoneyTransactionShippingEtopExtended_moneytx_MoneyTransactionShippingEtopExtended(arg.(*txmodely.MoneyTransactionShippingEtopExtended), out.(*moneytx.MoneyTransactionShippingEtopExtended))
		return nil
	})
	s.Register(([]*txmodely.MoneyTransactionShippingEtopExtended)(nil), (*[]*moneytx.MoneyTransactionShippingEtopExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_txmodely_MoneyTransactionShippingEtopExtendeds_moneytx_MoneyTransactionShippingEtopExtendeds(arg.([]*txmodely.MoneyTransactionShippingEtopExtended))
		*out.(*[]*moneytx.MoneyTransactionShippingEtopExtended) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingEtopExtended)(nil), (*txmodely.MoneyTransactionShippingEtopExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingEtopExtended_txmodely_MoneyTransactionShippingEtopExtended(arg.(*moneytx.MoneyTransactionShippingEtopExtended), out.(*txmodely.MoneyTransactionShippingEtopExtended))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingEtopExtended)(nil), (*[]*txmodely.MoneyTransactionShippingEtopExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingEtopExtendeds_txmodely_MoneyTransactionShippingEtopExtendeds(arg.([]*moneytx.MoneyTransactionShippingEtopExtended))
		*out.(*[]*txmodely.MoneyTransactionShippingEtopExtended) = out0
		return nil
	})
	s.Register((*txmodely.MoneyTransactionExtended)(nil), (*moneytx.MoneyTransactionShippingExtended)(nil), func(arg, out interface{}) error {
		Convert_txmodely_MoneyTransactionExtended_moneytx_MoneyTransactionShippingExtended(arg.(*txmodely.MoneyTransactionExtended), out.(*moneytx.MoneyTransactionShippingExtended))
		return nil
	})
	s.Register(([]*txmodely.MoneyTransactionExtended)(nil), (*[]*moneytx.MoneyTransactionShippingExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_txmodely_MoneyTransactionExtendeds_moneytx_MoneyTransactionShippingExtendeds(arg.([]*txmodely.MoneyTransactionExtended))
		*out.(*[]*moneytx.MoneyTransactionShippingExtended) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExtended)(nil), (*txmodely.MoneyTransactionExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExtended_txmodely_MoneyTransactionExtended(arg.(*moneytx.MoneyTransactionShippingExtended), out.(*txmodely.MoneyTransactionExtended))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExtended)(nil), (*[]*txmodely.MoneyTransactionExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExtendeds_txmodely_MoneyTransactionExtendeds(arg.([]*moneytx.MoneyTransactionShippingExtended))
		*out.(*[]*txmodely.MoneyTransactionExtended) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingExternal)(nil), (*moneytx.MoneyTransactionShippingExternal)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg.(*moneytxmodel.MoneyTransactionShippingExternal), out.(*moneytx.MoneyTransactionShippingExternal))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingExternal)(nil), (*[]*moneytx.MoneyTransactionShippingExternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingExternals_moneytx_MoneyTransactionShippingExternals(arg.([]*moneytxmodel.MoneyTransactionShippingExternal))
		*out.(*[]*moneytx.MoneyTransactionShippingExternal) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExternal)(nil), (*moneytxmodel.MoneyTransactionShippingExternal)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg.(*moneytx.MoneyTransactionShippingExternal), out.(*moneytxmodel.MoneyTransactionShippingExternal))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExternal)(nil), (*[]*moneytxmodel.MoneyTransactionShippingExternal)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExternals_moneytxmodel_MoneyTransactionShippingExternals(arg.([]*moneytx.MoneyTransactionShippingExternal))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingExternal) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingExternalExtended)(nil), (*moneytx.MoneyTransactionShippingExternalExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingExternalExtended_moneytx_MoneyTransactionShippingExternalExtended(arg.(*moneytxmodel.MoneyTransactionShippingExternalExtended), out.(*moneytx.MoneyTransactionShippingExternalExtended))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingExternalExtended)(nil), (*[]*moneytx.MoneyTransactionShippingExternalExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingExternalExtendeds_moneytx_MoneyTransactionShippingExternalExtendeds(arg.([]*moneytxmodel.MoneyTransactionShippingExternalExtended))
		*out.(*[]*moneytx.MoneyTransactionShippingExternalExtended) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExternalExtended)(nil), (*moneytxmodel.MoneyTransactionShippingExternalExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExternalExtended_moneytxmodel_MoneyTransactionShippingExternalExtended(arg.(*moneytx.MoneyTransactionShippingExternalExtended), out.(*moneytxmodel.MoneyTransactionShippingExternalExtended))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExternalExtended)(nil), (*[]*moneytxmodel.MoneyTransactionShippingExternalExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExternalExtendeds_moneytxmodel_MoneyTransactionShippingExternalExtendeds(arg.([]*moneytx.MoneyTransactionShippingExternalExtended))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingExternalExtended) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingExternalFtLine)(nil), (*moneytx.MoneyTransactionShippingExternalFtLine)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingExternalFtLine_moneytx_MoneyTransactionShippingExternalFtLine(arg.(*moneytxmodel.MoneyTransactionShippingExternalFtLine), out.(*moneytx.MoneyTransactionShippingExternalFtLine))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingExternalFtLine)(nil), (*[]*moneytx.MoneyTransactionShippingExternalFtLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingExternalFtLines_moneytx_MoneyTransactionShippingExternalFtLines(arg.([]*moneytxmodel.MoneyTransactionShippingExternalFtLine))
		*out.(*[]*moneytx.MoneyTransactionShippingExternalFtLine) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExternalFtLine)(nil), (*moneytxmodel.MoneyTransactionShippingExternalFtLine)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExternalFtLine_moneytxmodel_MoneyTransactionShippingExternalFtLine(arg.(*moneytx.MoneyTransactionShippingExternalFtLine), out.(*moneytxmodel.MoneyTransactionShippingExternalFtLine))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExternalFtLine)(nil), (*[]*moneytxmodel.MoneyTransactionShippingExternalFtLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExternalFtLines_moneytxmodel_MoneyTransactionShippingExternalFtLines(arg.([]*moneytx.MoneyTransactionShippingExternalFtLine))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingExternalFtLine) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingExternalLine)(nil), (*moneytx.MoneyTransactionShippingExternalLine)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(arg.(*moneytxmodel.MoneyTransactionShippingExternalLine), out.(*moneytx.MoneyTransactionShippingExternalLine))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingExternalLine)(nil), (*[]*moneytx.MoneyTransactionShippingExternalLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingExternalLines_moneytx_MoneyTransactionShippingExternalLines(arg.([]*moneytxmodel.MoneyTransactionShippingExternalLine))
		*out.(*[]*moneytx.MoneyTransactionShippingExternalLine) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExternalLine)(nil), (*moneytxmodel.MoneyTransactionShippingExternalLine)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(arg.(*moneytx.MoneyTransactionShippingExternalLine), out.(*moneytxmodel.MoneyTransactionShippingExternalLine))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExternalLine)(nil), (*[]*moneytxmodel.MoneyTransactionShippingExternalLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExternalLines_moneytxmodel_MoneyTransactionShippingExternalLines(arg.([]*moneytx.MoneyTransactionShippingExternalLine))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingExternalLine) = out0
		return nil
	})
	s.Register((*moneytxmodel.MoneyTransactionShippingExternalLineExtended)(nil), (*moneytx.MoneyTransactionShippingExternalLineExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtended_moneytx_MoneyTransactionShippingExternalLineExtended(arg.(*moneytxmodel.MoneyTransactionShippingExternalLineExtended), out.(*moneytx.MoneyTransactionShippingExternalLineExtended))
		return nil
	})
	s.Register(([]*moneytxmodel.MoneyTransactionShippingExternalLineExtended)(nil), (*[]*moneytx.MoneyTransactionShippingExternalLineExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds_moneytx_MoneyTransactionShippingExternalLineExtendeds(arg.([]*moneytxmodel.MoneyTransactionShippingExternalLineExtended))
		*out.(*[]*moneytx.MoneyTransactionShippingExternalLineExtended) = out0
		return nil
	})
	s.Register((*moneytx.MoneyTransactionShippingExternalLineExtended)(nil), (*moneytxmodel.MoneyTransactionShippingExternalLineExtended)(nil), func(arg, out interface{}) error {
		Convert_moneytx_MoneyTransactionShippingExternalLineExtended_moneytxmodel_MoneyTransactionShippingExternalLineExtended(arg.(*moneytx.MoneyTransactionShippingExternalLineExtended), out.(*moneytxmodel.MoneyTransactionShippingExternalLineExtended))
		return nil
	})
	s.Register(([]*moneytx.MoneyTransactionShippingExternalLineExtended)(nil), (*[]*moneytxmodel.MoneyTransactionShippingExternalLineExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_moneytx_MoneyTransactionShippingExternalLineExtendeds_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds(arg.([]*moneytx.MoneyTransactionShippingExternalLineExtended))
		*out.(*[]*moneytxmodel.MoneyTransactionShippingExternalLineExtended) = out0
		return nil
	})
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShipping --//

func Convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(arg *moneytxmodel.MoneyTransactionShipping, out *moneytx.MoneyTransactionShipping) *moneytx.MoneyTransactionShipping {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShipping{}
	}
	convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(arg *moneytxmodel.MoneyTransactionShipping, out *moneytx.MoneyTransactionShipping) {
	out.ID = arg.ID                                                                 // simple assign
	out.ShopID = arg.ShopID                                                         // simple assign
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ClosedAt = arg.ClosedAt                                                     // simple assign
	out.Status = arg.Status                                                         // simple assign
	out.TotalCOD = arg.TotalCOD                                                     // simple assign
	out.TotalAmount = arg.TotalAmount                                               // simple assign
	out.TotalOrders = arg.TotalOrders                                               // simple assign
	out.Code = arg.Code                                                             // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.MoneyTransactionShippingEtopID = arg.MoneyTransactionShippingEtopID         // simple assign
	out.Provider = arg.Provider                                                     // simple assign
	out.ConfirmedAt = arg.ConfirmedAt                                               // simple assign
	out.EtopTransferedAt = arg.EtopTransferedAt                                     // simple assign
	out.BankAccount = identityconvert.Convert_sharemodel_BankAccount_identitytypes_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.Type = arg.Type                   // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytxmodel_MoneyTransactionShippings_moneytx_MoneyTransactionShippings(args []*moneytxmodel.MoneyTransactionShipping) (outs []*moneytx.MoneyTransactionShipping) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShipping, len(args))
	outs = make([]*moneytx.MoneyTransactionShipping, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(arg *moneytx.MoneyTransactionShipping, out *moneytxmodel.MoneyTransactionShipping) *moneytxmodel.MoneyTransactionShipping {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShipping{}
	}
	convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(arg *moneytx.MoneyTransactionShipping, out *moneytxmodel.MoneyTransactionShipping) {
	out.ID = arg.ID                                                                 // simple assign
	out.ShopID = arg.ShopID                                                         // simple assign
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ClosedAt = arg.ClosedAt                                                     // simple assign
	out.Status = arg.Status                                                         // simple assign
	out.TotalCOD = arg.TotalCOD                                                     // simple assign
	out.TotalAmount = arg.TotalAmount                                               // simple assign
	out.TotalOrders = arg.TotalOrders                                               // simple assign
	out.Code = arg.Code                                                             // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.MoneyTransactionShippingEtopID = arg.MoneyTransactionShippingEtopID         // simple assign
	out.Provider = arg.Provider                                                     // simple assign
	out.ConfirmedAt = arg.ConfirmedAt                                               // simple assign
	out.EtopTransferedAt = arg.EtopTransferedAt                                     // simple assign
	out.BankAccount = identityconvert.Convert_identitytypes_BankAccount_sharemodel_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.Type = arg.Type                   // simple assign
	out.Rid = 0                           // zero value
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytx_MoneyTransactionShippings_moneytxmodel_MoneyTransactionShippings(args []*moneytx.MoneyTransactionShipping) (outs []*moneytxmodel.MoneyTransactionShipping) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShipping, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShipping, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingEtop --//

func Convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(arg *moneytxmodel.MoneyTransactionShippingEtop, out *moneytx.MoneyTransactionShippingEtop) *moneytx.MoneyTransactionShippingEtop {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingEtop{}
	}
	convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(arg *moneytxmodel.MoneyTransactionShippingEtop, out *moneytx.MoneyTransactionShippingEtop) {
	out.ID = arg.ID                                       // simple assign
	out.Code = arg.Code                                   // simple assign
	out.TotalCOD = arg.TotalCOD                           // simple assign
	out.TotalOrders = arg.TotalOrders                     // simple assign
	out.TotalAmount = arg.TotalAmount                     // simple assign
	out.TotalFee = arg.TotalFee                           // simple assign
	out.TotalMoneyTransaction = arg.TotalMoneyTransaction // simple assign
	out.CreatedAt = arg.CreatedAt                         // simple assign
	out.UpdatedAt = arg.UpdatedAt                         // simple assign
	out.ConfirmedAt = arg.ConfirmedAt                     // simple assign
	out.Status = arg.Status                               // simple assign
	out.BankAccount = identityconvert.Convert_sharemodel_BankAccount_identitytypes_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytxmodel_MoneyTransactionShippingEtops_moneytx_MoneyTransactionShippingEtops(args []*moneytxmodel.MoneyTransactionShippingEtop) (outs []*moneytx.MoneyTransactionShippingEtop) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingEtop, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingEtop, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(arg *moneytx.MoneyTransactionShippingEtop, out *moneytxmodel.MoneyTransactionShippingEtop) *moneytxmodel.MoneyTransactionShippingEtop {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingEtop{}
	}
	convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(arg *moneytx.MoneyTransactionShippingEtop, out *moneytxmodel.MoneyTransactionShippingEtop) {
	out.ID = arg.ID                                       // simple assign
	out.Code = arg.Code                                   // simple assign
	out.TotalCOD = arg.TotalCOD                           // simple assign
	out.TotalOrders = arg.TotalOrders                     // simple assign
	out.TotalAmount = arg.TotalAmount                     // simple assign
	out.TotalFee = arg.TotalFee                           // simple assign
	out.TotalMoneyTransaction = arg.TotalMoneyTransaction // simple assign
	out.CreatedAt = arg.CreatedAt                         // simple assign
	out.UpdatedAt = arg.UpdatedAt                         // simple assign
	out.ConfirmedAt = arg.ConfirmedAt                     // simple assign
	out.Status = arg.Status                               // simple assign
	out.BankAccount = identityconvert.Convert_identitytypes_BankAccount_sharemodel_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytx_MoneyTransactionShippingEtops_moneytxmodel_MoneyTransactionShippingEtops(args []*moneytx.MoneyTransactionShippingEtop) (outs []*moneytxmodel.MoneyTransactionShippingEtop) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingEtop, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingEtop, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingEtopExtended --//

func Convert_txmodely_MoneyTransactionShippingEtopExtended_moneytx_MoneyTransactionShippingEtopExtended(arg *txmodely.MoneyTransactionShippingEtopExtended, out *moneytx.MoneyTransactionShippingEtopExtended) *moneytx.MoneyTransactionShippingEtopExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingEtopExtended{}
	}
	convert_txmodely_MoneyTransactionShippingEtopExtended_moneytx_MoneyTransactionShippingEtopExtended(arg, out)
	return out
}

func convert_txmodely_MoneyTransactionShippingEtopExtended_moneytx_MoneyTransactionShippingEtopExtended(arg *txmodely.MoneyTransactionShippingEtopExtended, out *moneytx.MoneyTransactionShippingEtopExtended) {
	out.MoneyTransactionShippingEtop = Convert_moneytxmodel_MoneyTransactionShippingEtop_moneytx_MoneyTransactionShippingEtop(arg.MoneyTransactionShippingEtop, nil)
	out.MoneyTransactions = Convert_txmodely_MoneyTransactionExtendeds_moneytx_MoneyTransactionShippingExtendeds(arg.MoneyTransactions)
}

func Convert_txmodely_MoneyTransactionShippingEtopExtendeds_moneytx_MoneyTransactionShippingEtopExtendeds(args []*txmodely.MoneyTransactionShippingEtopExtended) (outs []*moneytx.MoneyTransactionShippingEtopExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingEtopExtended, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingEtopExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_txmodely_MoneyTransactionShippingEtopExtended_moneytx_MoneyTransactionShippingEtopExtended(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingEtopExtended_txmodely_MoneyTransactionShippingEtopExtended(arg *moneytx.MoneyTransactionShippingEtopExtended, out *txmodely.MoneyTransactionShippingEtopExtended) *txmodely.MoneyTransactionShippingEtopExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &txmodely.MoneyTransactionShippingEtopExtended{}
	}
	convert_moneytx_MoneyTransactionShippingEtopExtended_txmodely_MoneyTransactionShippingEtopExtended(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingEtopExtended_txmodely_MoneyTransactionShippingEtopExtended(arg *moneytx.MoneyTransactionShippingEtopExtended, out *txmodely.MoneyTransactionShippingEtopExtended) {
	out.MoneyTransactionShippingEtop = Convert_moneytx_MoneyTransactionShippingEtop_moneytxmodel_MoneyTransactionShippingEtop(arg.MoneyTransactionShippingEtop, nil)
	out.MoneyTransactions = Convert_moneytx_MoneyTransactionShippingExtendeds_txmodely_MoneyTransactionExtendeds(arg.MoneyTransactions)
}

func Convert_moneytx_MoneyTransactionShippingEtopExtendeds_txmodely_MoneyTransactionShippingEtopExtendeds(args []*moneytx.MoneyTransactionShippingEtopExtended) (outs []*txmodely.MoneyTransactionShippingEtopExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]txmodely.MoneyTransactionShippingEtopExtended, len(args))
	outs = make([]*txmodely.MoneyTransactionShippingEtopExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingEtopExtended_txmodely_MoneyTransactionShippingEtopExtended(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExtended --//

func Convert_txmodely_MoneyTransactionExtended_moneytx_MoneyTransactionShippingExtended(arg *txmodely.MoneyTransactionExtended, out *moneytx.MoneyTransactionShippingExtended) *moneytx.MoneyTransactionShippingExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExtended{}
	}
	convert_txmodely_MoneyTransactionExtended_moneytx_MoneyTransactionShippingExtended(arg, out)
	return out
}

func convert_txmodely_MoneyTransactionExtended_moneytx_MoneyTransactionShippingExtended(arg *txmodely.MoneyTransactionExtended, out *moneytx.MoneyTransactionShippingExtended) {
	out.MoneyTransactionShipping = Convert_moneytxmodel_MoneyTransactionShipping_moneytx_MoneyTransactionShipping(arg.MoneyTransactionShipping, nil)
	out.Fulfillments = shippingconvert.Convert_modely_FulfillmentExtendeds_shipping_FulfillmentExtendeds(arg.Fulfillments)
}

func Convert_txmodely_MoneyTransactionExtendeds_moneytx_MoneyTransactionShippingExtendeds(args []*txmodely.MoneyTransactionExtended) (outs []*moneytx.MoneyTransactionShippingExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExtended, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_txmodely_MoneyTransactionExtended_moneytx_MoneyTransactionShippingExtended(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExtended_txmodely_MoneyTransactionExtended(arg *moneytx.MoneyTransactionShippingExtended, out *txmodely.MoneyTransactionExtended) *txmodely.MoneyTransactionExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &txmodely.MoneyTransactionExtended{}
	}
	convert_moneytx_MoneyTransactionShippingExtended_txmodely_MoneyTransactionExtended(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExtended_txmodely_MoneyTransactionExtended(arg *moneytx.MoneyTransactionShippingExtended, out *txmodely.MoneyTransactionExtended) {
	out.MoneyTransactionShipping = Convert_moneytx_MoneyTransactionShipping_moneytxmodel_MoneyTransactionShipping(arg.MoneyTransactionShipping, nil)
	out.Fulfillments = shippingconvert.Convert_shipping_FulfillmentExtendeds_modely_FulfillmentExtendeds(arg.Fulfillments)
}

func Convert_moneytx_MoneyTransactionShippingExtendeds_txmodely_MoneyTransactionExtendeds(args []*moneytx.MoneyTransactionShippingExtended) (outs []*txmodely.MoneyTransactionExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]txmodely.MoneyTransactionExtended, len(args))
	outs = make([]*txmodely.MoneyTransactionExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExtended_txmodely_MoneyTransactionExtended(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExternal --//

func Convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg *moneytxmodel.MoneyTransactionShippingExternal, out *moneytx.MoneyTransactionShippingExternal) *moneytx.MoneyTransactionShippingExternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExternal{}
	}
	convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg *moneytxmodel.MoneyTransactionShippingExternal, out *moneytx.MoneyTransactionShippingExternal) {
	out.ID = arg.ID                         // simple assign
	out.Code = arg.Code                     // simple assign
	out.TotalCOD = arg.TotalCOD             // simple assign
	out.TotalOrders = arg.TotalOrders       // simple assign
	out.CreatedAt = arg.CreatedAt           // simple assign
	out.UpdatedAt = arg.UpdatedAt           // simple assign
	out.Status = arg.Status                 // simple assign
	out.ExternalPaidAt = arg.ExternalPaidAt // simple assign
	out.Provider = arg.Provider             // simple assign
	out.BankAccount = identityconvert.Convert_sharemodel_BankAccount_identitytypes_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.ConnectionID = arg.ConnectionID   // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytxmodel_MoneyTransactionShippingExternals_moneytx_MoneyTransactionShippingExternals(args []*moneytxmodel.MoneyTransactionShippingExternal) (outs []*moneytx.MoneyTransactionShippingExternal) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExternal, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExternal, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg *moneytx.MoneyTransactionShippingExternal, out *moneytxmodel.MoneyTransactionShippingExternal) *moneytxmodel.MoneyTransactionShippingExternal {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingExternal{}
	}
	convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg *moneytx.MoneyTransactionShippingExternal, out *moneytxmodel.MoneyTransactionShippingExternal) {
	out.ID = arg.ID                         // simple assign
	out.Code = arg.Code                     // simple assign
	out.TotalCOD = arg.TotalCOD             // simple assign
	out.TotalOrders = arg.TotalOrders       // simple assign
	out.CreatedAt = arg.CreatedAt           // simple assign
	out.UpdatedAt = arg.UpdatedAt           // simple assign
	out.Status = arg.Status                 // simple assign
	out.ExternalPaidAt = arg.ExternalPaidAt // simple assign
	out.Provider = arg.Provider             // simple assign
	out.BankAccount = identityconvert.Convert_identitytypes_BankAccount_sharemodel_BankAccount(arg.BankAccount, nil)
	out.Note = arg.Note                   // simple assign
	out.InvoiceNumber = arg.InvoiceNumber // simple assign
	out.ConnectionID = arg.ConnectionID   // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
}

func Convert_moneytx_MoneyTransactionShippingExternals_moneytxmodel_MoneyTransactionShippingExternals(args []*moneytx.MoneyTransactionShippingExternal) (outs []*moneytxmodel.MoneyTransactionShippingExternal) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingExternal, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingExternal, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExternalExtended --//

func Convert_moneytxmodel_MoneyTransactionShippingExternalExtended_moneytx_MoneyTransactionShippingExternalExtended(arg *moneytxmodel.MoneyTransactionShippingExternalExtended, out *moneytx.MoneyTransactionShippingExternalExtended) *moneytx.MoneyTransactionShippingExternalExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExternalExtended{}
	}
	convert_moneytxmodel_MoneyTransactionShippingExternalExtended_moneytx_MoneyTransactionShippingExternalExtended(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingExternalExtended_moneytx_MoneyTransactionShippingExternalExtended(arg *moneytxmodel.MoneyTransactionShippingExternalExtended, out *moneytx.MoneyTransactionShippingExternalExtended) {
	out.MoneyTransactionShippingExternal = Convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg.MoneyTransactionShippingExternal, nil)
	out.Lines = Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds_moneytx_MoneyTransactionShippingExternalLineExtendeds(arg.Lines)
}

func Convert_moneytxmodel_MoneyTransactionShippingExternalExtendeds_moneytx_MoneyTransactionShippingExternalExtendeds(args []*moneytxmodel.MoneyTransactionShippingExternalExtended) (outs []*moneytx.MoneyTransactionShippingExternalExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExternalExtended, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExternalExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingExternalExtended_moneytx_MoneyTransactionShippingExternalExtended(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExternalExtended_moneytxmodel_MoneyTransactionShippingExternalExtended(arg *moneytx.MoneyTransactionShippingExternalExtended, out *moneytxmodel.MoneyTransactionShippingExternalExtended) *moneytxmodel.MoneyTransactionShippingExternalExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingExternalExtended{}
	}
	convert_moneytx_MoneyTransactionShippingExternalExtended_moneytxmodel_MoneyTransactionShippingExternalExtended(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExternalExtended_moneytxmodel_MoneyTransactionShippingExternalExtended(arg *moneytx.MoneyTransactionShippingExternalExtended, out *moneytxmodel.MoneyTransactionShippingExternalExtended) {
	out.MoneyTransactionShippingExternal = Convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg.MoneyTransactionShippingExternal, nil)
	out.Lines = Convert_moneytx_MoneyTransactionShippingExternalLineExtendeds_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds(arg.Lines)
}

func Convert_moneytx_MoneyTransactionShippingExternalExtendeds_moneytxmodel_MoneyTransactionShippingExternalExtendeds(args []*moneytx.MoneyTransactionShippingExternalExtended) (outs []*moneytxmodel.MoneyTransactionShippingExternalExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingExternalExtended, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingExternalExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExternalExtended_moneytxmodel_MoneyTransactionShippingExternalExtended(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExternalFtLine --//

func Convert_moneytxmodel_MoneyTransactionShippingExternalFtLine_moneytx_MoneyTransactionShippingExternalFtLine(arg *moneytxmodel.MoneyTransactionShippingExternalFtLine, out *moneytx.MoneyTransactionShippingExternalFtLine) *moneytx.MoneyTransactionShippingExternalFtLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExternalFtLine{}
	}
	convert_moneytxmodel_MoneyTransactionShippingExternalFtLine_moneytx_MoneyTransactionShippingExternalFtLine(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingExternalFtLine_moneytx_MoneyTransactionShippingExternalFtLine(arg *moneytxmodel.MoneyTransactionShippingExternalFtLine, out *moneytx.MoneyTransactionShippingExternalFtLine) {
	out.MoneyTransactionShippingExternal = Convert_moneytxmodel_MoneyTransactionShippingExternal_moneytx_MoneyTransactionShippingExternal(arg.MoneyTransactionShippingExternal, nil)
	out.Lines = Convert_moneytxmodel_MoneyTransactionShippingExternalLines_moneytx_MoneyTransactionShippingExternalLines(arg.Lines)
}

func Convert_moneytxmodel_MoneyTransactionShippingExternalFtLines_moneytx_MoneyTransactionShippingExternalFtLines(args []*moneytxmodel.MoneyTransactionShippingExternalFtLine) (outs []*moneytx.MoneyTransactionShippingExternalFtLine) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExternalFtLine, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExternalFtLine, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingExternalFtLine_moneytx_MoneyTransactionShippingExternalFtLine(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExternalFtLine_moneytxmodel_MoneyTransactionShippingExternalFtLine(arg *moneytx.MoneyTransactionShippingExternalFtLine, out *moneytxmodel.MoneyTransactionShippingExternalFtLine) *moneytxmodel.MoneyTransactionShippingExternalFtLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingExternalFtLine{}
	}
	convert_moneytx_MoneyTransactionShippingExternalFtLine_moneytxmodel_MoneyTransactionShippingExternalFtLine(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExternalFtLine_moneytxmodel_MoneyTransactionShippingExternalFtLine(arg *moneytx.MoneyTransactionShippingExternalFtLine, out *moneytxmodel.MoneyTransactionShippingExternalFtLine) {
	out.MoneyTransactionShippingExternal = Convert_moneytx_MoneyTransactionShippingExternal_moneytxmodel_MoneyTransactionShippingExternal(arg.MoneyTransactionShippingExternal, nil)
	out.Lines = Convert_moneytx_MoneyTransactionShippingExternalLines_moneytxmodel_MoneyTransactionShippingExternalLines(arg.Lines)
}

func Convert_moneytx_MoneyTransactionShippingExternalFtLines_moneytxmodel_MoneyTransactionShippingExternalFtLines(args []*moneytx.MoneyTransactionShippingExternalFtLine) (outs []*moneytxmodel.MoneyTransactionShippingExternalFtLine) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingExternalFtLine, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingExternalFtLine, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExternalFtLine_moneytxmodel_MoneyTransactionShippingExternalFtLine(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExternalLine --//

func Convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(arg *moneytxmodel.MoneyTransactionShippingExternalLine, out *moneytx.MoneyTransactionShippingExternalLine) *moneytx.MoneyTransactionShippingExternalLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExternalLine{}
	}
	convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(arg *moneytxmodel.MoneyTransactionShippingExternalLine, out *moneytx.MoneyTransactionShippingExternalLine) {
	out.ID = arg.ID                                                                 // simple assign
	out.ExternalCode = arg.ExternalCode                                             // simple assign
	out.ExternalCustomer = arg.ExternalCustomer                                     // simple assign
	out.ExternalAddress = arg.ExternalAddress                                       // simple assign
	out.ExternalTotalCOD = arg.ExternalTotalCOD                                     // simple assign
	out.ExternalCreatedAt = arg.ExternalCreatedAt                                   // simple assign
	out.ExternalClosedAt = arg.ExternalClosedAt                                     // simple assign
	out.EtopFulfillmentIDRaw = arg.EtopFulfillmentIDRaw                             // simple assign
	out.EtopFulfillmentID = arg.EtopFulfillmentID                                   // simple assign
	out.Note = arg.Note                                                             // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ImportError = etopconvert.Convert_etopmodel_Error_meta_Error(arg.ImportError, nil)
	out.ExternalTotalShippingFee = arg.ExternalTotalShippingFee // simple assign
}

func Convert_moneytxmodel_MoneyTransactionShippingExternalLines_moneytx_MoneyTransactionShippingExternalLines(args []*moneytxmodel.MoneyTransactionShippingExternalLine) (outs []*moneytx.MoneyTransactionShippingExternalLine) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExternalLine, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExternalLine, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(arg *moneytx.MoneyTransactionShippingExternalLine, out *moneytxmodel.MoneyTransactionShippingExternalLine) *moneytxmodel.MoneyTransactionShippingExternalLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingExternalLine{}
	}
	convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(arg *moneytx.MoneyTransactionShippingExternalLine, out *moneytxmodel.MoneyTransactionShippingExternalLine) {
	out.ID = arg.ID                                                                 // simple assign
	out.ExternalCode = arg.ExternalCode                                             // simple assign
	out.ExternalCustomer = arg.ExternalCustomer                                     // simple assign
	out.ExternalAddress = arg.ExternalAddress                                       // simple assign
	out.ExternalTotalCOD = arg.ExternalTotalCOD                                     // simple assign
	out.ExternalCreatedAt = arg.ExternalCreatedAt                                   // simple assign
	out.ExternalClosedAt = arg.ExternalClosedAt                                     // simple assign
	out.EtopFulfillmentIDRaw = arg.EtopFulfillmentIDRaw                             // simple assign
	out.EtopFulfillmentID = arg.EtopFulfillmentID                                   // simple assign
	out.Note = arg.Note                                                             // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ImportError = etopconvert.Convert_meta_Error_etopmodel_Error(arg.ImportError, nil)
	out.ExternalTotalShippingFee = arg.ExternalTotalShippingFee // simple assign
}

func Convert_moneytx_MoneyTransactionShippingExternalLines_moneytxmodel_MoneyTransactionShippingExternalLines(args []*moneytx.MoneyTransactionShippingExternalLine) (outs []*moneytxmodel.MoneyTransactionShippingExternalLine) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingExternalLine, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingExternalLine, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/moneytx.MoneyTransactionShippingExternalLineExtended --//

func Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtended_moneytx_MoneyTransactionShippingExternalLineExtended(arg *moneytxmodel.MoneyTransactionShippingExternalLineExtended, out *moneytx.MoneyTransactionShippingExternalLineExtended) *moneytx.MoneyTransactionShippingExternalLineExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytx.MoneyTransactionShippingExternalLineExtended{}
	}
	convert_moneytxmodel_MoneyTransactionShippingExternalLineExtended_moneytx_MoneyTransactionShippingExternalLineExtended(arg, out)
	return out
}

func convert_moneytxmodel_MoneyTransactionShippingExternalLineExtended_moneytx_MoneyTransactionShippingExternalLineExtended(arg *moneytxmodel.MoneyTransactionShippingExternalLineExtended, out *moneytx.MoneyTransactionShippingExternalLineExtended) {
	out.MoneyTransactionShippingExternalLine = Convert_moneytxmodel_MoneyTransactionShippingExternalLine_moneytx_MoneyTransactionShippingExternalLine(arg.MoneyTransactionShippingExternalLine, nil)
	out.Fulfillment = shippingconvert.Convert_shippingmodel_Fulfillment_shipping_Fulfillment(arg.Fulfillment, nil)
	out.Shop = identityconvert.Convert_identitymodel_Shop_identity_Shop(arg.Shop, nil)
	out.Order = orderingconvert.Convert_orderingmodel_Order_ordering_Order(arg.Order, nil)
}

func Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds_moneytx_MoneyTransactionShippingExternalLineExtendeds(args []*moneytxmodel.MoneyTransactionShippingExternalLineExtended) (outs []*moneytx.MoneyTransactionShippingExternalLineExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytx.MoneyTransactionShippingExternalLineExtended, len(args))
	outs = make([]*moneytx.MoneyTransactionShippingExternalLineExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytxmodel_MoneyTransactionShippingExternalLineExtended_moneytx_MoneyTransactionShippingExternalLineExtended(args[i], &tmps[i])
	}
	return outs
}

func Convert_moneytx_MoneyTransactionShippingExternalLineExtended_moneytxmodel_MoneyTransactionShippingExternalLineExtended(arg *moneytx.MoneyTransactionShippingExternalLineExtended, out *moneytxmodel.MoneyTransactionShippingExternalLineExtended) *moneytxmodel.MoneyTransactionShippingExternalLineExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &moneytxmodel.MoneyTransactionShippingExternalLineExtended{}
	}
	convert_moneytx_MoneyTransactionShippingExternalLineExtended_moneytxmodel_MoneyTransactionShippingExternalLineExtended(arg, out)
	return out
}

func convert_moneytx_MoneyTransactionShippingExternalLineExtended_moneytxmodel_MoneyTransactionShippingExternalLineExtended(arg *moneytx.MoneyTransactionShippingExternalLineExtended, out *moneytxmodel.MoneyTransactionShippingExternalLineExtended) {
	out.MoneyTransactionShippingExternalLine = Convert_moneytx_MoneyTransactionShippingExternalLine_moneytxmodel_MoneyTransactionShippingExternalLine(arg.MoneyTransactionShippingExternalLine, nil)
	out.Fulfillment = shippingconvert.Convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg.Fulfillment, nil)
	out.Shop = identityconvert.Convert_identity_Shop_identitymodel_Shop(arg.Shop, nil)
	out.Order = orderingconvert.Convert_ordering_Order_orderingmodel_Order(arg.Order, nil)
}

func Convert_moneytx_MoneyTransactionShippingExternalLineExtendeds_moneytxmodel_MoneyTransactionShippingExternalLineExtendeds(args []*moneytx.MoneyTransactionShippingExternalLineExtended) (outs []*moneytxmodel.MoneyTransactionShippingExternalLineExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]moneytxmodel.MoneyTransactionShippingExternalLineExtended, len(args))
	outs = make([]*moneytxmodel.MoneyTransactionShippingExternalLineExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_moneytx_MoneyTransactionShippingExternalLineExtended_moneytxmodel_MoneyTransactionShippingExternalLineExtended(args[i], &tmps[i])
	}
	return outs
}
