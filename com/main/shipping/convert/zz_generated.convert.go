// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	shipping "o.o/api/main/shipping"
	shippingtypes "o.o/api/main/shipping/types"
	addressconvert "o.o/backend/com/main/address/convert"
	etopconvert "o.o/backend/com/main/etop/convert"
	identityconvert "o.o/backend/com/main/identity/convert"
	orderingconvert "o.o/backend/com/main/ordering/convert"
	shippingmodel "o.o/backend/com/main/shipping/model"
	modely "o.o/backend/com/main/shipping/modely"
	sharemodel "o.o/backend/com/main/shipping/sharemodel"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions:
    Fulfillment     // in use

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shippingmodel.ExternalShippingLog)(nil), (*shipping.ExternalShippingLog)(nil), func(arg, out interface{}) error {
		Convert_shippingmodel_ExternalShippingLog_shipping_ExternalShippingLog(arg.(*shippingmodel.ExternalShippingLog), out.(*shipping.ExternalShippingLog))
		return nil
	})
	s.Register(([]*shippingmodel.ExternalShippingLog)(nil), (*[]*shipping.ExternalShippingLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_shippingmodel_ExternalShippingLogs_shipping_ExternalShippingLogs(arg.([]*shippingmodel.ExternalShippingLog))
		*out.(*[]*shipping.ExternalShippingLog) = out0
		return nil
	})
	s.Register((*shipping.ExternalShippingLog)(nil), (*shippingmodel.ExternalShippingLog)(nil), func(arg, out interface{}) error {
		Convert_shipping_ExternalShippingLog_shippingmodel_ExternalShippingLog(arg.(*shipping.ExternalShippingLog), out.(*shippingmodel.ExternalShippingLog))
		return nil
	})
	s.Register(([]*shipping.ExternalShippingLog)(nil), (*[]*shippingmodel.ExternalShippingLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipping_ExternalShippingLogs_shippingmodel_ExternalShippingLogs(arg.([]*shipping.ExternalShippingLog))
		*out.(*[]*shippingmodel.ExternalShippingLog) = out0
		return nil
	})
	s.Register((*shippingmodel.Fulfillment)(nil), (*shipping.Fulfillment)(nil), func(arg, out interface{}) error {
		Convert_shippingmodel_Fulfillment_shipping_Fulfillment(arg.(*shippingmodel.Fulfillment), out.(*shipping.Fulfillment))
		return nil
	})
	s.Register(([]*shippingmodel.Fulfillment)(nil), (*[]*shipping.Fulfillment)(nil), func(arg, out interface{}) error {
		out0 := Convert_shippingmodel_Fulfillments_shipping_Fulfillments(arg.([]*shippingmodel.Fulfillment))
		*out.(*[]*shipping.Fulfillment) = out0
		return nil
	})
	s.Register((*shipping.Fulfillment)(nil), (*shippingmodel.Fulfillment)(nil), func(arg, out interface{}) error {
		Convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg.(*shipping.Fulfillment), out.(*shippingmodel.Fulfillment))
		return nil
	})
	s.Register(([]*shipping.Fulfillment)(nil), (*[]*shippingmodel.Fulfillment)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipping_Fulfillments_shippingmodel_Fulfillments(arg.([]*shipping.Fulfillment))
		*out.(*[]*shippingmodel.Fulfillment) = out0
		return nil
	})
	s.Register((*shipping.UpdateFulfillmentInfoArgs)(nil), (*shipping.Fulfillment)(nil), func(arg, out interface{}) error {
		Apply_shipping_UpdateFulfillmentInfoArgs_shipping_Fulfillment(arg.(*shipping.UpdateFulfillmentInfoArgs), out.(*shipping.Fulfillment))
		return nil
	})
	s.Register((*modely.FulfillmentExtended)(nil), (*shipping.FulfillmentExtended)(nil), func(arg, out interface{}) error {
		Convert_modely_FulfillmentExtended_shipping_FulfillmentExtended(arg.(*modely.FulfillmentExtended), out.(*shipping.FulfillmentExtended))
		return nil
	})
	s.Register(([]*modely.FulfillmentExtended)(nil), (*[]*shipping.FulfillmentExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_modely_FulfillmentExtendeds_shipping_FulfillmentExtendeds(arg.([]*modely.FulfillmentExtended))
		*out.(*[]*shipping.FulfillmentExtended) = out0
		return nil
	})
	s.Register((*shipping.FulfillmentExtended)(nil), (*modely.FulfillmentExtended)(nil), func(arg, out interface{}) error {
		Convert_shipping_FulfillmentExtended_modely_FulfillmentExtended(arg.(*shipping.FulfillmentExtended), out.(*modely.FulfillmentExtended))
		return nil
	})
	s.Register(([]*shipping.FulfillmentExtended)(nil), (*[]*modely.FulfillmentExtended)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipping_FulfillmentExtendeds_modely_FulfillmentExtendeds(arg.([]*shipping.FulfillmentExtended))
		*out.(*[]*modely.FulfillmentExtended) = out0
		return nil
	})
	s.Register((*sharemodel.FulfillmentSyncStates)(nil), (*shipping.FulfillmentSyncStates)(nil), func(arg, out interface{}) error {
		Convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(arg.(*sharemodel.FulfillmentSyncStates), out.(*shipping.FulfillmentSyncStates))
		return nil
	})
	s.Register(([]*sharemodel.FulfillmentSyncStates)(nil), (*[]*shipping.FulfillmentSyncStates)(nil), func(arg, out interface{}) error {
		out0 := Convert_sharemodel_FulfillmentSyncStateses_shipping_FulfillmentSyncStateses(arg.([]*sharemodel.FulfillmentSyncStates))
		*out.(*[]*shipping.FulfillmentSyncStates) = out0
		return nil
	})
	s.Register((*shipping.FulfillmentSyncStates)(nil), (*sharemodel.FulfillmentSyncStates)(nil), func(arg, out interface{}) error {
		Convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(arg.(*shipping.FulfillmentSyncStates), out.(*sharemodel.FulfillmentSyncStates))
		return nil
	})
	s.Register(([]*shipping.FulfillmentSyncStates)(nil), (*[]*sharemodel.FulfillmentSyncStates)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipping_FulfillmentSyncStateses_sharemodel_FulfillmentSyncStateses(arg.([]*shipping.FulfillmentSyncStates))
		*out.(*[]*sharemodel.FulfillmentSyncStates) = out0
		return nil
	})
	s.Register((*sharemodel.ShipmentPriceInfo)(nil), (*shipping.ShipmentPriceInfo)(nil), func(arg, out interface{}) error {
		Convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(arg.(*sharemodel.ShipmentPriceInfo), out.(*shipping.ShipmentPriceInfo))
		return nil
	})
	s.Register(([]*sharemodel.ShipmentPriceInfo)(nil), (*[]*shipping.ShipmentPriceInfo)(nil), func(arg, out interface{}) error {
		out0 := Convert_sharemodel_ShipmentPriceInfoes_shipping_ShipmentPriceInfoes(arg.([]*sharemodel.ShipmentPriceInfo))
		*out.(*[]*shipping.ShipmentPriceInfo) = out0
		return nil
	})
	s.Register((*shipping.ShipmentPriceInfo)(nil), (*sharemodel.ShipmentPriceInfo)(nil), func(arg, out interface{}) error {
		Convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(arg.(*shipping.ShipmentPriceInfo), out.(*sharemodel.ShipmentPriceInfo))
		return nil
	})
	s.Register(([]*shipping.ShipmentPriceInfo)(nil), (*[]*sharemodel.ShipmentPriceInfo)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipping_ShipmentPriceInfoes_sharemodel_ShipmentPriceInfoes(arg.([]*shipping.ShipmentPriceInfo))
		*out.(*[]*sharemodel.ShipmentPriceInfo) = out0
		return nil
	})
	s.Register((*sharemodel.ShippingFeeLine)(nil), (*shippingtypes.ShippingFeeLine)(nil), func(arg, out interface{}) error {
		Convert_sharemodel_ShippingFeeLine_shippingtypes_ShippingFeeLine(arg.(*sharemodel.ShippingFeeLine), out.(*shippingtypes.ShippingFeeLine))
		return nil
	})
	s.Register(([]*sharemodel.ShippingFeeLine)(nil), (*[]*shippingtypes.ShippingFeeLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_sharemodel_ShippingFeeLines_shippingtypes_ShippingFeeLines(arg.([]*sharemodel.ShippingFeeLine))
		*out.(*[]*shippingtypes.ShippingFeeLine) = out0
		return nil
	})
	s.Register((*shippingtypes.ShippingFeeLine)(nil), (*sharemodel.ShippingFeeLine)(nil), func(arg, out interface{}) error {
		Convert_shippingtypes_ShippingFeeLine_sharemodel_ShippingFeeLine(arg.(*shippingtypes.ShippingFeeLine), out.(*sharemodel.ShippingFeeLine))
		return nil
	})
	s.Register(([]*shippingtypes.ShippingFeeLine)(nil), (*[]*sharemodel.ShippingFeeLine)(nil), func(arg, out interface{}) error {
		out0 := Convert_shippingtypes_ShippingFeeLines_sharemodel_ShippingFeeLines(arg.([]*shippingtypes.ShippingFeeLine))
		*out.(*[]*sharemodel.ShippingFeeLine) = out0
		return nil
	})
}

//-- convert o.o/api/main/shipping.ExternalShippingLog --//

func Convert_shippingmodel_ExternalShippingLog_shipping_ExternalShippingLog(arg *shippingmodel.ExternalShippingLog, out *shipping.ExternalShippingLog) *shipping.ExternalShippingLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.ExternalShippingLog{}
	}
	convert_shippingmodel_ExternalShippingLog_shipping_ExternalShippingLog(arg, out)
	return out
}

func convert_shippingmodel_ExternalShippingLog_shipping_ExternalShippingLog(arg *shippingmodel.ExternalShippingLog, out *shipping.ExternalShippingLog) {
	out.StateText = arg.StateText // simple assign
	out.Time = arg.Time           // simple assign
	out.Message = arg.Message     // simple assign
}

func Convert_shippingmodel_ExternalShippingLogs_shipping_ExternalShippingLogs(args []*shippingmodel.ExternalShippingLog) (outs []*shipping.ExternalShippingLog) {
	if args == nil {
		return nil
	}
	tmps := make([]shipping.ExternalShippingLog, len(args))
	outs = make([]*shipping.ExternalShippingLog, len(args))
	for i := range tmps {
		outs[i] = Convert_shippingmodel_ExternalShippingLog_shipping_ExternalShippingLog(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipping_ExternalShippingLog_shippingmodel_ExternalShippingLog(arg *shipping.ExternalShippingLog, out *shippingmodel.ExternalShippingLog) *shippingmodel.ExternalShippingLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shippingmodel.ExternalShippingLog{}
	}
	convert_shipping_ExternalShippingLog_shippingmodel_ExternalShippingLog(arg, out)
	return out
}

func convert_shipping_ExternalShippingLog_shippingmodel_ExternalShippingLog(arg *shipping.ExternalShippingLog, out *shippingmodel.ExternalShippingLog) {
	out.StateText = arg.StateText // simple assign
	out.Time = arg.Time           // simple assign
	out.Message = arg.Message     // simple assign
}

func Convert_shipping_ExternalShippingLogs_shippingmodel_ExternalShippingLogs(args []*shipping.ExternalShippingLog) (outs []*shippingmodel.ExternalShippingLog) {
	if args == nil {
		return nil
	}
	tmps := make([]shippingmodel.ExternalShippingLog, len(args))
	outs = make([]*shippingmodel.ExternalShippingLog, len(args))
	for i := range tmps {
		outs[i] = Convert_shipping_ExternalShippingLog_shippingmodel_ExternalShippingLog(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/shipping.Fulfillment --//

func Convert_shippingmodel_Fulfillment_shipping_Fulfillment(arg *shippingmodel.Fulfillment, out *shipping.Fulfillment) *shipping.Fulfillment {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.Fulfillment{}
	}
	Fulfillment(arg, out)
	return out
}

func convert_shippingmodel_Fulfillment_shipping_Fulfillment(arg *shippingmodel.Fulfillment, out *shipping.Fulfillment) {
	out.ID = arg.ID               // simple assign
	out.OrderID = arg.OrderID     // simple assign
	out.ShopID = arg.ShopID       // simple assign
	out.PartnerID = arg.PartnerID // simple assign
	out.Lines = orderingconvert.Convert_orderingmodel_OrderLines_orderingtypes_ItemLines(arg.Lines)
	out.ShopConfirm = arg.ShopConfirm             // simple assign
	out.ConfirmStatus = arg.ConfirmStatus         // simple assign
	out.Status = arg.Status                       // simple assign
	out.ShippingState = arg.ShippingState         // simple assign
	out.ShippingStatus = arg.ShippingStatus       // simple assign
	out.EtopPaymentStatus = arg.EtopPaymentStatus // simple assign
	out.ShippingFeeShop = arg.ShippingFeeShop     // simple assign
	out.ProviderShippingFeeLines = Convert_sharemodel_ShippingFeeLines_shippingtypes_ShippingFeeLines(arg.ProviderShippingFeeLines)
	out.ShippingFeeShopLines = Convert_sharemodel_ShippingFeeLines_shippingtypes_ShippingFeeLines(arg.ShippingFeeShopLines)
	out.TotalItems = arg.TotalItems                                                 // simple assign
	out.TotalWeight = arg.TotalWeight                                               // simple assign
	out.TotalDiscount = arg.TotalDiscount                                           // simple assign
	out.TotalAmount = arg.TotalAmount                                               // simple assign
	out.TotalCODAmount = arg.TotalCODAmount                                         // simple assign
	out.ActualCompensationAmount = arg.ActualCompensationAmount                     // simple assign
	out.EtopDiscount = arg.EtopDiscount                                             // simple assign
	out.EtopFeeAdjustment = arg.EtopFeeAdjustment                                   // simple assign
	out.WeightInfo = shippingtypes.WeightInfo{}                                     // zero value
	out.ValueInfo = shippingtypes.ValueInfo{}                                       // zero value
	out.CODEtopTransferedAt = arg.CODEtopTransferedAt                               // simple assign
	out.MoneyTransactionID = arg.MoneyTransactionID                                 // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.ShippingType = arg.ShippingType                                             // simple assign
	out.ConnectionID = arg.ConnectionID                                             // simple assign
	out.ConnectionMethod = arg.ConnectionMethod                                     // simple assign
	out.ShopCarrierID = arg.ShopCarrierID                                           // simple assign
	out.ProviderServiceID = arg.ProviderServiceID                                   // simple assign
	out.ShippingCode = arg.ShippingCode                                             // simple assign
	out.ShippingServiceName = arg.ShippingServiceName                               // simple assign
	out.ShippingNote = arg.ShippingNote                                             // simple assign
	out.TryOn = arg.TryOn                                                           // simple assign
	out.ShippingPaymentType = arg.ShippingPaymentType                               // simple assign
	out.IncludeInsurance = arg.IncludeInsurance                                     // simple assign
	out.InsuranceValue = arg.InsuranceValue                                         // simple assign
	out.Coupon = arg.Coupon                                                         // simple assign
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ClosedAt = arg.ClosedAt                                                     // simple assign
	out.ShippingCancelledAt = arg.ShippingCancelledAt                               // simple assign
	out.CancelReason = arg.CancelReason                                             // simple assign
	out.ShippingProvider = arg.ShippingProvider                                     // simple assign
	out.ExternalShippingName = arg.ExternalShippingName                             // simple assign
	out.ExternalShippingFee = arg.ExternalShippingFee                               // simple assign
	out.ShippingFeeCustomer = arg.ShippingFeeCustomer                               // simple assign
	out.ExternalShippingID = arg.ExternalShippingID                                 // simple assign
	out.ExternalShippingCode = arg.ExternalShippingCode                             // simple assign
	out.ExternalShippingCreatedAt = arg.ExternalShippingCreatedAt                   // simple assign
	out.ExternalShippingUpdatedAt = arg.ExternalShippingUpdatedAt                   // simple assign
	out.ExternalShippingCancelledAt = arg.ExternalShippingCancelledAt               // simple assign
	out.ExternalShippingDeliveredAt = arg.ExternalShippingDeliveredAt               // simple assign
	out.ExternalShippingReturnedAt = arg.ExternalShippingReturnedAt                 // simple assign
	out.ExternalShippingState = arg.ExternalShippingState                           // simple assign
	out.ExternalShippingStatus = arg.ExternalShippingStatus                         // simple assign
	out.ExternalShippingNote = arg.ExternalShippingNote                             // simple assign
	out.ExternalShippingSubState = arg.ExternalShippingSubState                     // simple assign
	out.ExternalShippingLogs = Convert_shippingmodel_ExternalShippingLogs_shipping_ExternalShippingLogs(arg.ExternalShippingLogs)
	out.SyncStatus = arg.SyncStatus // simple assign
	out.SyncStates = Convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(arg.SyncStates, nil)
	out.ExpectedDeliveryAt = arg.ExpectedDeliveryAt                   // simple assign
	out.ExpectedPickAt = arg.ExpectedPickAt                           // simple assign
	out.ShippingFeeShopTransferedAt = arg.ShippingFeeShopTransferedAt // simple assign
	out.AddressTo = addressconvert.Convert_addressmodel_Address_orderingtypes_Address(arg.AddressTo, nil)
	out.AddressFrom = addressconvert.Convert_addressmodel_Address_orderingtypes_Address(arg.AddressFrom, nil)
	out.EtopAdjustedShippingFeeMain = arg.EtopAdjustedShippingFeeMain // simple assign
	out.EtopPriceRule = arg.EtopPriceRule                             // simple assign
	out.ShipmentPriceInfo = Convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(arg.ShipmentPriceInfo, nil)
	out.LinesContent = arg.LinesContent         // simple assign
	out.EdCode = arg.EdCode                     // simple assign
	out.ShippingSubstate = arg.ShippingSubstate // simple assign
}

func Convert_shippingmodel_Fulfillments_shipping_Fulfillments(args []*shippingmodel.Fulfillment) (outs []*shipping.Fulfillment) {
	if args == nil {
		return nil
	}
	tmps := make([]shipping.Fulfillment, len(args))
	outs = make([]*shipping.Fulfillment, len(args))
	for i := range tmps {
		outs[i] = Convert_shippingmodel_Fulfillment_shipping_Fulfillment(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg *shipping.Fulfillment, out *shippingmodel.Fulfillment) *shippingmodel.Fulfillment {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shippingmodel.Fulfillment{}
	}
	convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg, out)
	return out
}

func convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg *shipping.Fulfillment, out *shippingmodel.Fulfillment) {
	out.ID = arg.ID                                             // simple assign
	out.OrderID = arg.OrderID                                   // simple assign
	out.ShopID = arg.ShopID                                     // simple assign
	out.PartnerID = arg.PartnerID                               // simple assign
	out.ShopConfirm = arg.ShopConfirm                           // simple assign
	out.ConfirmStatus = arg.ConfirmStatus                       // simple assign
	out.TotalItems = arg.TotalItems                             // simple assign
	out.TotalWeight = arg.TotalWeight                           // simple assign
	out.BasketValue = 0                                         // zero value
	out.TotalDiscount = arg.TotalDiscount                       // simple assign
	out.TotalAmount = arg.TotalAmount                           // simple assign
	out.TotalCODAmount = arg.TotalCODAmount                     // simple assign
	out.OriginalCODAmount = 0                                   // zero value
	out.ActualCompensationAmount = arg.ActualCompensationAmount // simple assign
	out.ShippingFeeCustomer = arg.ShippingFeeCustomer           // simple assign
	out.ShippingFeeShop = arg.ShippingFeeShop                   // simple assign
	out.ShippingFeeShopLines = Convert_shippingtypes_ShippingFeeLines_sharemodel_ShippingFeeLines(arg.ShippingFeeShopLines)
	out.ShippingServiceFee = 0                        // zero value
	out.ExternalShippingFee = arg.ExternalShippingFee // simple assign
	out.ProviderShippingFeeLines = Convert_shippingtypes_ShippingFeeLines_sharemodel_ShippingFeeLines(arg.ProviderShippingFeeLines)
	out.EtopDiscount = arg.EtopDiscount                               // simple assign
	out.EtopFeeAdjustment = arg.EtopFeeAdjustment                     // simple assign
	out.ShippingFeeMain = 0                                           // zero value
	out.ShippingFeeReturn = 0                                         // zero value
	out.ShippingFeeInsurance = 0                                      // zero value
	out.ShippingFeeAdjustment = 0                                     // zero value
	out.ShippingFeeCODS = 0                                           // zero value
	out.ShippingFeeInfoChange = 0                                     // zero value
	out.ShippingFeeOther = 0                                          // zero value
	out.UpdatedBy = 0                                                 // zero value
	out.EtopAdjustedShippingFeeMain = arg.EtopAdjustedShippingFeeMain // simple assign
	out.EtopPriceRule = arg.EtopPriceRule                             // simple assign
	out.VariantIDs = nil                                              // zero value
	out.Lines = orderingconvert.Convert_orderingtypes_ItemLines_orderingmodel_OrderLines(arg.Lines)
	out.TypeFrom = "" // zero value
	out.TypeTo = ""   // zero value
	out.AddressFrom = addressconvert.Convert_orderingtypes_Address_addressmodel_Address(arg.AddressFrom, nil)
	out.AddressTo = addressconvert.Convert_orderingtypes_Address_addressmodel_Address(arg.AddressTo, nil)
	out.AddressReturn = nil                                                         // zero value
	out.AddressToProvinceCode = ""                                                  // zero value
	out.AddressToDistrictCode = ""                                                  // zero value
	out.AddressToWardCode = ""                                                      // zero value
	out.CreatedAt = arg.CreatedAt                                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                                   // simple assign
	out.ClosedAt = arg.ClosedAt                                                     // simple assign
	out.ExpectedDeliveryAt = arg.ExpectedDeliveryAt                                 // simple assign
	out.ExpectedPickAt = arg.ExpectedPickAt                                         // simple assign
	out.CODEtopTransferedAt = arg.CODEtopTransferedAt                               // simple assign
	out.ShippingFeeShopTransferedAt = arg.ShippingFeeShopTransferedAt               // simple assign
	out.ShippingCancelledAt = arg.ShippingCancelledAt                               // simple assign
	out.ShippingDeliveredAt = time.Time{}                                           // zero value
	out.ShippingReturnedAt = time.Time{}                                            // zero value
	out.ShippingCreatedAt = time.Time{}                                             // zero value
	out.ShippingPickingAt = time.Time{}                                             // zero value
	out.ShippingHoldingAt = time.Time{}                                             // zero value
	out.ShippingDeliveringAt = time.Time{}                                          // zero value
	out.ShippingReturningAt = time.Time{}                                           // zero value
	out.MoneyTransactionID = arg.MoneyTransactionID                                 // simple assign
	out.MoneyTransactionShippingExternalID = arg.MoneyTransactionShippingExternalID // simple assign
	out.CancelReason = arg.CancelReason                                             // simple assign
	out.ShippingProvider = arg.ShippingProvider                                     // simple assign
	out.ProviderServiceID = arg.ProviderServiceID                                   // simple assign
	out.ShippingCode = arg.ShippingCode                                             // simple assign
	out.ShippingNote = arg.ShippingNote                                             // simple assign
	out.TryOn = arg.TryOn                                                           // simple assign
	out.IncludeInsurance = arg.IncludeInsurance                                     // simple assign
	out.InsuranceValue = arg.InsuranceValue                                         // simple assign
	out.ShippingType = arg.ShippingType                                             // simple assign
	out.ShippingPaymentType = arg.ShippingPaymentType                               // simple assign
	out.ConnectionID = arg.ConnectionID                                             // simple assign
	out.ConnectionMethod = arg.ConnectionMethod                                     // simple assign
	out.ShopCarrierID = arg.ShopCarrierID                                           // simple assign
	out.ShippingServiceName = arg.ShippingServiceName                               // simple assign
	out.ExternalShippingName = arg.ExternalShippingName                             // simple assign
	out.ExternalShippingID = arg.ExternalShippingID                                 // simple assign
	out.ExternalShippingCode = arg.ExternalShippingCode                             // simple assign
	out.ExternalShippingCreatedAt = arg.ExternalShippingCreatedAt                   // simple assign
	out.ExternalShippingUpdatedAt = arg.ExternalShippingUpdatedAt                   // simple assign
	out.ExternalShippingCancelledAt = arg.ExternalShippingCancelledAt               // simple assign
	out.ExternalShippingDeliveredAt = arg.ExternalShippingDeliveredAt               // simple assign
	out.ExternalShippingReturnedAt = arg.ExternalShippingReturnedAt                 // simple assign
	out.ExternalShippingClosedAt = time.Time{}                                      // zero value
	out.ExternalShippingState = arg.ExternalShippingState                           // simple assign
	out.ExternalShippingStateCode = ""                                              // zero value
	out.ExternalShippingStatus = arg.ExternalShippingStatus                         // simple assign
	out.ExternalShippingNote = arg.ExternalShippingNote                             // simple assign
	out.ExternalShippingSubState = arg.ExternalShippingSubState                     // simple assign
	out.ExternalShippingData = nil                                                  // zero value
	out.ShippingState = arg.ShippingState                                           // simple assign
	out.ShippingStatus = arg.ShippingStatus                                         // simple assign
	out.EtopPaymentStatus = arg.EtopPaymentStatus                                   // simple assign
	out.Status = arg.Status                                                         // simple assign
	out.SyncStatus = arg.SyncStatus                                                 // simple assign
	out.SyncStates = Convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(arg.SyncStates, nil)
	out.LastSyncAt = time.Time{} // zero value
	out.ExternalShippingLogs = Convert_shipping_ExternalShippingLogs_shippingmodel_ExternalShippingLogs(arg.ExternalShippingLogs)
	out.AdminNote = ""            // zero value
	out.IsPartialDelivery = false // zero value
	out.CreatedBy = 0             // zero value
	out.GrossWeight = 0           // zero value
	out.ChargeableWeight = 0      // zero value
	out.Length = 0                // zero value
	out.Width = 0                 // zero value
	out.Height = 0                // zero value
	out.DeliveryRoute = ""        // zero value
	out.ExternalAffiliateID = ""  // zero value
	out.Coupon = arg.Coupon       // simple assign
	out.ShipmentPriceInfo = Convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(arg.ShipmentPriceInfo, nil)
	out.LinesContent = arg.LinesContent         // simple assign
	out.EdCode = arg.EdCode                     // simple assign
	out.ShippingSubstate = arg.ShippingSubstate // simple assign
	out.Rid = 0                                 // zero value
}

func Convert_shipping_Fulfillments_shippingmodel_Fulfillments(args []*shipping.Fulfillment) (outs []*shippingmodel.Fulfillment) {
	if args == nil {
		return nil
	}
	tmps := make([]shippingmodel.Fulfillment, len(args))
	outs = make([]*shippingmodel.Fulfillment, len(args))
	for i := range tmps {
		outs[i] = Convert_shipping_Fulfillment_shippingmodel_Fulfillment(args[i], &tmps[i])
	}
	return outs
}

func Apply_shipping_UpdateFulfillmentInfoArgs_shipping_Fulfillment(arg *shipping.UpdateFulfillmentInfoArgs, out *shipping.Fulfillment) *shipping.Fulfillment {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.Fulfillment{}
	}
	apply_shipping_UpdateFulfillmentInfoArgs_shipping_Fulfillment(arg, out)
	return out
}

func apply_shipping_UpdateFulfillmentInfoArgs_shipping_Fulfillment(arg *shipping.UpdateFulfillmentInfoArgs, out *shipping.Fulfillment) {
	out.ID = out.ID                                                                  // identifier
	out.OrderID = out.OrderID                                                        // no change
	out.ShopID = out.ShopID                                                          // identifier
	out.PartnerID = out.PartnerID                                                    // no change
	out.Lines = out.Lines                                                            // no change
	out.ShopConfirm = out.ShopConfirm                                                // no change
	out.ConfirmStatus = out.ConfirmStatus                                            // no change
	out.Status = out.Status                                                          // no change
	out.ShippingState = out.ShippingState                                            // no change
	out.ShippingStatus = out.ShippingStatus                                          // no change
	out.EtopPaymentStatus = out.EtopPaymentStatus                                    // no change
	out.ShippingFeeShop = out.ShippingFeeShop                                        // no change
	out.ProviderShippingFeeLines = out.ProviderShippingFeeLines                      // no change
	out.ShippingFeeShopLines = out.ShippingFeeShopLines                              // no change
	out.TotalItems = out.TotalItems                                                  // no change
	out.TotalWeight = out.TotalWeight                                                // no change
	out.TotalDiscount = out.TotalDiscount                                            // no change
	out.TotalAmount = out.TotalAmount                                                // no change
	out.TotalCODAmount = out.TotalCODAmount                                          // no change
	out.ActualCompensationAmount = out.ActualCompensationAmount                      // no change
	out.EtopDiscount = out.EtopDiscount                                              // no change
	out.EtopFeeAdjustment = out.EtopFeeAdjustment                                    // no change
	out.WeightInfo = out.WeightInfo                                                  // no change
	out.ValueInfo = out.ValueInfo                                                    // no change
	out.CODEtopTransferedAt = out.CODEtopTransferedAt                                // no change
	out.MoneyTransactionID = out.MoneyTransactionID                                  // no change
	out.MoneyTransactionShippingExternalID = out.MoneyTransactionShippingExternalID  // no change
	out.ShippingType = out.ShippingType                                              // no change
	out.ConnectionID = out.ConnectionID                                              // no change
	out.ConnectionMethod = out.ConnectionMethod                                      // no change
	out.ShopCarrierID = out.ShopCarrierID                                            // no change
	out.ProviderServiceID = out.ProviderServiceID                                    // no change
	out.ShippingCode = out.ShippingCode                                              // no change
	out.ShippingServiceName = out.ShippingServiceName                                // no change
	out.ShippingNote = arg.ShippingNote.Apply(out.ShippingNote)                      // apply change
	out.TryOn = arg.TryOn                                                            // simple assign
	out.ShippingPaymentType = arg.ShippingPaymentType.Apply(out.ShippingPaymentType) // apply change
	out.IncludeInsurance = arg.IncludeInsurance                                      // simple assign
	out.InsuranceValue = arg.InsuranceValue                                          // simple assign
	out.Coupon = out.Coupon                                                          // no change
	out.CreatedAt = out.CreatedAt                                                    // no change
	out.UpdatedAt = out.UpdatedAt                                                    // no change
	out.ClosedAt = out.ClosedAt                                                      // no change
	out.ShippingCancelledAt = out.ShippingCancelledAt                                // no change
	out.CancelReason = out.CancelReason                                              // no change
	out.ShippingProvider = out.ShippingProvider                                      // no change
	out.ExternalShippingName = out.ExternalShippingName                              // no change
	out.ExternalShippingFee = out.ExternalShippingFee                                // no change
	out.ShippingFeeCustomer = out.ShippingFeeCustomer                                // no change
	out.ExternalShippingID = out.ExternalShippingID                                  // no change
	out.ExternalShippingCode = out.ExternalShippingCode                              // no change
	out.ExternalShippingCreatedAt = out.ExternalShippingCreatedAt                    // no change
	out.ExternalShippingUpdatedAt = out.ExternalShippingUpdatedAt                    // no change
	out.ExternalShippingCancelledAt = out.ExternalShippingCancelledAt                // no change
	out.ExternalShippingDeliveredAt = out.ExternalShippingDeliveredAt                // no change
	out.ExternalShippingReturnedAt = out.ExternalShippingReturnedAt                  // no change
	out.ExternalShippingState = out.ExternalShippingState                            // no change
	out.ExternalShippingStatus = out.ExternalShippingStatus                          // no change
	out.ExternalShippingNote = out.ExternalShippingNote                              // no change
	out.ExternalShippingSubState = out.ExternalShippingSubState                      // no change
	out.ExternalShippingLogs = out.ExternalShippingLogs                              // no change
	out.SyncStatus = out.SyncStatus                                                  // no change
	out.SyncStates = out.SyncStates                                                  // no change
	out.ExpectedDeliveryAt = out.ExpectedDeliveryAt                                  // no change
	out.ExpectedPickAt = out.ExpectedPickAt                                          // no change
	out.ShippingFeeShopTransferedAt = out.ShippingFeeShopTransferedAt                // no change
	out.AddressTo = arg.AddressTo                                                    // simple assign
	out.AddressFrom = arg.AddressFrom                                                // simple assign
	out.EtopAdjustedShippingFeeMain = out.EtopAdjustedShippingFeeMain                // no change
	out.EtopPriceRule = out.EtopPriceRule                                            // no change
	out.ShipmentPriceInfo = out.ShipmentPriceInfo                                    // no change
	out.LinesContent = out.LinesContent                                              // no change
	out.EdCode = out.EdCode                                                          // no change
	out.ShippingSubstate = out.ShippingSubstate                                      // no change
}

//-- convert o.o/api/main/shipping.FulfillmentExtended --//

func Convert_modely_FulfillmentExtended_shipping_FulfillmentExtended(arg *modely.FulfillmentExtended, out *shipping.FulfillmentExtended) *shipping.FulfillmentExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.FulfillmentExtended{}
	}
	convert_modely_FulfillmentExtended_shipping_FulfillmentExtended(arg, out)
	return out
}

func convert_modely_FulfillmentExtended_shipping_FulfillmentExtended(arg *modely.FulfillmentExtended, out *shipping.FulfillmentExtended) {
	out.Fulfillment = Convert_shippingmodel_Fulfillment_shipping_Fulfillment(arg.Fulfillment, nil)
	out.Shop = identityconvert.Convert_identitymodel_Shop_identity_Shop(arg.Shop, nil)
	out.Order = orderingconvert.Convert_orderingmodel_Order_ordering_Order(arg.Order, nil)
}

func Convert_modely_FulfillmentExtendeds_shipping_FulfillmentExtendeds(args []*modely.FulfillmentExtended) (outs []*shipping.FulfillmentExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]shipping.FulfillmentExtended, len(args))
	outs = make([]*shipping.FulfillmentExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_modely_FulfillmentExtended_shipping_FulfillmentExtended(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipping_FulfillmentExtended_modely_FulfillmentExtended(arg *shipping.FulfillmentExtended, out *modely.FulfillmentExtended) *modely.FulfillmentExtended {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &modely.FulfillmentExtended{}
	}
	convert_shipping_FulfillmentExtended_modely_FulfillmentExtended(arg, out)
	return out
}

func convert_shipping_FulfillmentExtended_modely_FulfillmentExtended(arg *shipping.FulfillmentExtended, out *modely.FulfillmentExtended) {
	out.Fulfillment = Convert_shipping_Fulfillment_shippingmodel_Fulfillment(arg.Fulfillment, nil)
	out.Shop = identityconvert.Convert_identity_Shop_identitymodel_Shop(arg.Shop, nil)
	out.Order = orderingconvert.Convert_ordering_Order_orderingmodel_Order(arg.Order, nil)
	out.MoneyTransactionShipping = nil // zero value
}

func Convert_shipping_FulfillmentExtendeds_modely_FulfillmentExtendeds(args []*shipping.FulfillmentExtended) (outs []*modely.FulfillmentExtended) {
	if args == nil {
		return nil
	}
	tmps := make([]modely.FulfillmentExtended, len(args))
	outs = make([]*modely.FulfillmentExtended, len(args))
	for i := range tmps {
		outs[i] = Convert_shipping_FulfillmentExtended_modely_FulfillmentExtended(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/shipping.FulfillmentSyncStates --//

func Convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(arg *sharemodel.FulfillmentSyncStates, out *shipping.FulfillmentSyncStates) *shipping.FulfillmentSyncStates {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.FulfillmentSyncStates{}
	}
	convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(arg, out)
	return out
}

func convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(arg *sharemodel.FulfillmentSyncStates, out *shipping.FulfillmentSyncStates) {
	out.SyncAt = arg.SyncAt       // simple assign
	out.TrySyncAt = arg.TrySyncAt // simple assign
	out.Error = etopconvert.Convert_etopmodel_Error_meta_Error(arg.Error, nil)
	out.NextShippingState = arg.NextShippingState // simple assign
}

func Convert_sharemodel_FulfillmentSyncStateses_shipping_FulfillmentSyncStateses(args []*sharemodel.FulfillmentSyncStates) (outs []*shipping.FulfillmentSyncStates) {
	if args == nil {
		return nil
	}
	tmps := make([]shipping.FulfillmentSyncStates, len(args))
	outs = make([]*shipping.FulfillmentSyncStates, len(args))
	for i := range tmps {
		outs[i] = Convert_sharemodel_FulfillmentSyncStates_shipping_FulfillmentSyncStates(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(arg *shipping.FulfillmentSyncStates, out *sharemodel.FulfillmentSyncStates) *sharemodel.FulfillmentSyncStates {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &sharemodel.FulfillmentSyncStates{}
	}
	convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(arg, out)
	return out
}

func convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(arg *shipping.FulfillmentSyncStates, out *sharemodel.FulfillmentSyncStates) {
	out.SyncAt = arg.SyncAt       // simple assign
	out.TrySyncAt = arg.TrySyncAt // simple assign
	out.Error = etopconvert.Convert_meta_Error_etopmodel_Error(arg.Error, nil)
	out.NextShippingState = arg.NextShippingState // simple assign
}

func Convert_shipping_FulfillmentSyncStateses_sharemodel_FulfillmentSyncStateses(args []*shipping.FulfillmentSyncStates) (outs []*sharemodel.FulfillmentSyncStates) {
	if args == nil {
		return nil
	}
	tmps := make([]sharemodel.FulfillmentSyncStates, len(args))
	outs = make([]*sharemodel.FulfillmentSyncStates, len(args))
	for i := range tmps {
		outs[i] = Convert_shipping_FulfillmentSyncStates_sharemodel_FulfillmentSyncStates(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/shipping.ShipmentPriceInfo --//

func Convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(arg *sharemodel.ShipmentPriceInfo, out *shipping.ShipmentPriceInfo) *shipping.ShipmentPriceInfo {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipping.ShipmentPriceInfo{}
	}
	convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(arg, out)
	return out
}

func convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(arg *sharemodel.ShipmentPriceInfo, out *shipping.ShipmentPriceInfo) {
	out.ShipmentPriceID = arg.ShipmentPriceID         // simple assign
	out.ShipmentPriceListID = arg.ShipmentPriceListID // simple assign
	out.OriginFee = arg.OriginFee                     // simple assign
	out.MakeupFee = arg.MakeupFee                     // simple assign
}

func Convert_sharemodel_ShipmentPriceInfoes_shipping_ShipmentPriceInfoes(args []*sharemodel.ShipmentPriceInfo) (outs []*shipping.ShipmentPriceInfo) {
	if args == nil {
		return nil
	}
	tmps := make([]shipping.ShipmentPriceInfo, len(args))
	outs = make([]*shipping.ShipmentPriceInfo, len(args))
	for i := range tmps {
		outs[i] = Convert_sharemodel_ShipmentPriceInfo_shipping_ShipmentPriceInfo(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(arg *shipping.ShipmentPriceInfo, out *sharemodel.ShipmentPriceInfo) *sharemodel.ShipmentPriceInfo {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &sharemodel.ShipmentPriceInfo{}
	}
	convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(arg, out)
	return out
}

func convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(arg *shipping.ShipmentPriceInfo, out *sharemodel.ShipmentPriceInfo) {
	out.ShipmentPriceID = arg.ShipmentPriceID         // simple assign
	out.ShipmentPriceListID = arg.ShipmentPriceListID // simple assign
	out.OriginFee = arg.OriginFee                     // simple assign
	out.MakeupFee = arg.MakeupFee                     // simple assign
}

func Convert_shipping_ShipmentPriceInfoes_sharemodel_ShipmentPriceInfoes(args []*shipping.ShipmentPriceInfo) (outs []*sharemodel.ShipmentPriceInfo) {
	if args == nil {
		return nil
	}
	tmps := make([]sharemodel.ShipmentPriceInfo, len(args))
	outs = make([]*sharemodel.ShipmentPriceInfo, len(args))
	for i := range tmps {
		outs[i] = Convert_shipping_ShipmentPriceInfo_sharemodel_ShipmentPriceInfo(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/shipping/types.ShippingFeeLine --//

func Convert_sharemodel_ShippingFeeLine_shippingtypes_ShippingFeeLine(arg *sharemodel.ShippingFeeLine, out *shippingtypes.ShippingFeeLine) *shippingtypes.ShippingFeeLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shippingtypes.ShippingFeeLine{}
	}
	convert_sharemodel_ShippingFeeLine_shippingtypes_ShippingFeeLine(arg, out)
	return out
}

func convert_sharemodel_ShippingFeeLine_shippingtypes_ShippingFeeLine(arg *sharemodel.ShippingFeeLine, out *shippingtypes.ShippingFeeLine) {
	out.ShippingFeeType = arg.ShippingFeeType         // simple assign
	out.Cost = arg.Cost                               // simple assign
	out.ExternalServiceID = arg.ExternalServiceID     // simple assign
	out.ExternalServiceName = arg.ExternalServiceName // simple assign
	out.ExternalServiceType = arg.ExternalServiceType // simple assign
}

func Convert_sharemodel_ShippingFeeLines_shippingtypes_ShippingFeeLines(args []*sharemodel.ShippingFeeLine) (outs []*shippingtypes.ShippingFeeLine) {
	if args == nil {
		return nil
	}
	tmps := make([]shippingtypes.ShippingFeeLine, len(args))
	outs = make([]*shippingtypes.ShippingFeeLine, len(args))
	for i := range tmps {
		outs[i] = Convert_sharemodel_ShippingFeeLine_shippingtypes_ShippingFeeLine(args[i], &tmps[i])
	}
	return outs
}

func Convert_shippingtypes_ShippingFeeLine_sharemodel_ShippingFeeLine(arg *shippingtypes.ShippingFeeLine, out *sharemodel.ShippingFeeLine) *sharemodel.ShippingFeeLine {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &sharemodel.ShippingFeeLine{}
	}
	convert_shippingtypes_ShippingFeeLine_sharemodel_ShippingFeeLine(arg, out)
	return out
}

func convert_shippingtypes_ShippingFeeLine_sharemodel_ShippingFeeLine(arg *shippingtypes.ShippingFeeLine, out *sharemodel.ShippingFeeLine) {
	out.ShippingFeeType = arg.ShippingFeeType         // simple assign
	out.Cost = arg.Cost                               // simple assign
	out.ExternalServiceID = arg.ExternalServiceID     // simple assign
	out.ExternalServiceName = arg.ExternalServiceName // simple assign
	out.ExternalServiceType = arg.ExternalServiceType // simple assign
	out.ExternalShippingOrderID = ""                  // zero value
	out.ExternalPaymentChannelID = ""                 // zero value
	out.ExternalShippingCode = ""                     // zero value
}

func Convert_shippingtypes_ShippingFeeLines_sharemodel_ShippingFeeLines(args []*shippingtypes.ShippingFeeLine) (outs []*sharemodel.ShippingFeeLine) {
	if args == nil {
		return nil
	}
	tmps := make([]sharemodel.ShippingFeeLine, len(args))
	outs = make([]*sharemodel.ShippingFeeLine, len(args))
	for i := range tmps {
		outs[i] = Convert_shippingtypes_ShippingFeeLine_sharemodel_ShippingFeeLine(args[i], &tmps[i])
	}
	return outs
}
