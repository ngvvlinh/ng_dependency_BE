// Generated by common/sq. DO NOT EDIT.

package sqlstore

import (
	"time"

	"etop.vn/backend/pkg/common/sq"
	"etop.vn/capi/dot"

	"etop.vn/backend/pkg/etop/model"
)

type FulfillmentFilters struct{ prefix string }

func NewFulfillmentFilters(prefix string) FulfillmentFilters {
	return FulfillmentFilters{prefix}
}

func (ft *FulfillmentFilters) Filter(pred string, args ...interface{}) sq.WriterTo {
	return sq.Filter(&ft.prefix, pred, args...)
}

func (ft FulfillmentFilters) Prefix() string {
	return ft.prefix
}

func (ft *FulfillmentFilters) ByID(ID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == 0,
	}
}

func (ft *FulfillmentFilters) ByIDPtr(ID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == nil,
		IsZero: ID != nil && (*ID) == 0,
	}
}

func (ft *FulfillmentFilters) ByOrderID(OrderID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "order_id",
		Value:  OrderID,
		IsNil:  OrderID == 0,
	}
}

func (ft *FulfillmentFilters) ByOrderIDPtr(OrderID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "order_id",
		Value:  OrderID,
		IsNil:  OrderID == nil,
		IsZero: OrderID != nil && (*OrderID) == 0,
	}
}

func (ft *FulfillmentFilters) ByShopID(ShopID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == 0,
	}
}

func (ft *FulfillmentFilters) ByShopIDPtr(ShopID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == nil,
		IsZero: ShopID != nil && (*ShopID) == 0,
	}
}

func (ft *FulfillmentFilters) ByPartnerID(PartnerID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "partner_id",
		Value:  PartnerID,
		IsNil:  PartnerID == 0,
	}
}

func (ft *FulfillmentFilters) ByPartnerIDPtr(PartnerID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "partner_id",
		Value:  PartnerID,
		IsNil:  PartnerID == nil,
		IsZero: PartnerID != nil && (*PartnerID) == 0,
	}
}

func (ft *FulfillmentFilters) ByShopConfirm(ShopConfirm model.Status3) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shop_confirm",
		Value:  ShopConfirm,
		IsNil:  ShopConfirm == 0,
	}
}

func (ft *FulfillmentFilters) ByShopConfirmPtr(ShopConfirm *model.Status3) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shop_confirm",
		Value:  ShopConfirm,
		IsNil:  ShopConfirm == nil,
		IsZero: ShopConfirm != nil && (*ShopConfirm) == 0,
	}
}

func (ft *FulfillmentFilters) ByConfirmStatus(ConfirmStatus model.Status3) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "confirm_status",
		Value:  ConfirmStatus,
		IsNil:  ConfirmStatus == 0,
	}
}

func (ft *FulfillmentFilters) ByConfirmStatusPtr(ConfirmStatus *model.Status3) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "confirm_status",
		Value:  ConfirmStatus,
		IsNil:  ConfirmStatus == nil,
		IsZero: ConfirmStatus != nil && (*ConfirmStatus) == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalItems(TotalItems int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_items",
		Value:  TotalItems,
		IsNil:  TotalItems == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalItemsPtr(TotalItems *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_items",
		Value:  TotalItems,
		IsNil:  TotalItems == nil,
		IsZero: TotalItems != nil && (*TotalItems) == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalWeight(TotalWeight int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_weight",
		Value:  TotalWeight,
		IsNil:  TotalWeight == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalWeightPtr(TotalWeight *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_weight",
		Value:  TotalWeight,
		IsNil:  TotalWeight == nil,
		IsZero: TotalWeight != nil && (*TotalWeight) == 0,
	}
}

func (ft *FulfillmentFilters) ByBasketValue(BasketValue int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "basket_value",
		Value:  BasketValue,
		IsNil:  BasketValue == 0,
	}
}

func (ft *FulfillmentFilters) ByBasketValuePtr(BasketValue *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "basket_value",
		Value:  BasketValue,
		IsNil:  BasketValue == nil,
		IsZero: BasketValue != nil && (*BasketValue) == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalDiscount(TotalDiscount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_discount",
		Value:  TotalDiscount,
		IsNil:  TotalDiscount == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalDiscountPtr(TotalDiscount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_discount",
		Value:  TotalDiscount,
		IsNil:  TotalDiscount == nil,
		IsZero: TotalDiscount != nil && (*TotalDiscount) == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalAmount(TotalAmount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_amount",
		Value:  TotalAmount,
		IsNil:  TotalAmount == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalAmountPtr(TotalAmount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_amount",
		Value:  TotalAmount,
		IsNil:  TotalAmount == nil,
		IsZero: TotalAmount != nil && (*TotalAmount) == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalCODAmount(TotalCODAmount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_cod_amount",
		Value:  TotalCODAmount,
		IsNil:  TotalCODAmount == 0,
	}
}

func (ft *FulfillmentFilters) ByTotalCODAmountPtr(TotalCODAmount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_cod_amount",
		Value:  TotalCODAmount,
		IsNil:  TotalCODAmount == nil,
		IsZero: TotalCODAmount != nil && (*TotalCODAmount) == 0,
	}
}

func (ft *FulfillmentFilters) ByOriginalCODAmount(OriginalCODAmount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "original_cod_amount",
		Value:  OriginalCODAmount,
		IsNil:  OriginalCODAmount == 0,
	}
}

func (ft *FulfillmentFilters) ByOriginalCODAmountPtr(OriginalCODAmount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "original_cod_amount",
		Value:  OriginalCODAmount,
		IsNil:  OriginalCODAmount == nil,
		IsZero: OriginalCODAmount != nil && (*OriginalCODAmount) == 0,
	}
}

func (ft *FulfillmentFilters) ByActualCompensationAmount(ActualCompensationAmount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "actual_compensation_amount",
		Value:  ActualCompensationAmount,
		IsNil:  ActualCompensationAmount == 0,
	}
}

func (ft *FulfillmentFilters) ByActualCompensationAmountPtr(ActualCompensationAmount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "actual_compensation_amount",
		Value:  ActualCompensationAmount,
		IsNil:  ActualCompensationAmount == nil,
		IsZero: ActualCompensationAmount != nil && (*ActualCompensationAmount) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeCustomer(ShippingFeeCustomer int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_customer",
		Value:  ShippingFeeCustomer,
		IsNil:  ShippingFeeCustomer == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeCustomerPtr(ShippingFeeCustomer *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_customer",
		Value:  ShippingFeeCustomer,
		IsNil:  ShippingFeeCustomer == nil,
		IsZero: ShippingFeeCustomer != nil && (*ShippingFeeCustomer) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeShop(ShippingFeeShop int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_shop",
		Value:  ShippingFeeShop,
		IsNil:  ShippingFeeShop == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeShopPtr(ShippingFeeShop *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_shop",
		Value:  ShippingFeeShop,
		IsNil:  ShippingFeeShop == nil,
		IsZero: ShippingFeeShop != nil && (*ShippingFeeShop) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingServiceFee(ShippingServiceFee int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_service_fee",
		Value:  ShippingServiceFee,
		IsNil:  ShippingServiceFee == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingServiceFeePtr(ShippingServiceFee *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_service_fee",
		Value:  ShippingServiceFee,
		IsNil:  ShippingServiceFee == nil,
		IsZero: ShippingServiceFee != nil && (*ShippingServiceFee) == 0,
	}
}

func (ft *FulfillmentFilters) ByExternalShippingFee(ExternalShippingFee int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_fee",
		Value:  ExternalShippingFee,
		IsNil:  ExternalShippingFee == 0,
	}
}

func (ft *FulfillmentFilters) ByExternalShippingFeePtr(ExternalShippingFee *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_fee",
		Value:  ExternalShippingFee,
		IsNil:  ExternalShippingFee == nil,
		IsZero: ExternalShippingFee != nil && (*ExternalShippingFee) == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopDiscount(EtopDiscount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_discount",
		Value:  EtopDiscount,
		IsNil:  EtopDiscount == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopDiscountPtr(EtopDiscount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_discount",
		Value:  EtopDiscount,
		IsNil:  EtopDiscount == nil,
		IsZero: EtopDiscount != nil && (*EtopDiscount) == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopFeeAdjustment(EtopFeeAdjustment int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_fee_adjustment",
		Value:  EtopFeeAdjustment,
		IsNil:  EtopFeeAdjustment == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopFeeAdjustmentPtr(EtopFeeAdjustment *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_fee_adjustment",
		Value:  EtopFeeAdjustment,
		IsNil:  EtopFeeAdjustment == nil,
		IsZero: EtopFeeAdjustment != nil && (*EtopFeeAdjustment) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeMain(ShippingFeeMain int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_main",
		Value:  ShippingFeeMain,
		IsNil:  ShippingFeeMain == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeMainPtr(ShippingFeeMain *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_main",
		Value:  ShippingFeeMain,
		IsNil:  ShippingFeeMain == nil,
		IsZero: ShippingFeeMain != nil && (*ShippingFeeMain) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeReturn(ShippingFeeReturn int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_return",
		Value:  ShippingFeeReturn,
		IsNil:  ShippingFeeReturn == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeReturnPtr(ShippingFeeReturn *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_return",
		Value:  ShippingFeeReturn,
		IsNil:  ShippingFeeReturn == nil,
		IsZero: ShippingFeeReturn != nil && (*ShippingFeeReturn) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeInsurance(ShippingFeeInsurance int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_insurance",
		Value:  ShippingFeeInsurance,
		IsNil:  ShippingFeeInsurance == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeInsurancePtr(ShippingFeeInsurance *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_insurance",
		Value:  ShippingFeeInsurance,
		IsNil:  ShippingFeeInsurance == nil,
		IsZero: ShippingFeeInsurance != nil && (*ShippingFeeInsurance) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeAdjustment(ShippingFeeAdjustment int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_adjustment",
		Value:  ShippingFeeAdjustment,
		IsNil:  ShippingFeeAdjustment == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeAdjustmentPtr(ShippingFeeAdjustment *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_adjustment",
		Value:  ShippingFeeAdjustment,
		IsNil:  ShippingFeeAdjustment == nil,
		IsZero: ShippingFeeAdjustment != nil && (*ShippingFeeAdjustment) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeCODS(ShippingFeeCODS int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_cods",
		Value:  ShippingFeeCODS,
		IsNil:  ShippingFeeCODS == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeCODSPtr(ShippingFeeCODS *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_cods",
		Value:  ShippingFeeCODS,
		IsNil:  ShippingFeeCODS == nil,
		IsZero: ShippingFeeCODS != nil && (*ShippingFeeCODS) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeInfoChange(ShippingFeeInfoChange int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_info_change",
		Value:  ShippingFeeInfoChange,
		IsNil:  ShippingFeeInfoChange == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeInfoChangePtr(ShippingFeeInfoChange *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_info_change",
		Value:  ShippingFeeInfoChange,
		IsNil:  ShippingFeeInfoChange == nil,
		IsZero: ShippingFeeInfoChange != nil && (*ShippingFeeInfoChange) == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeOther(ShippingFeeOther int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_other",
		Value:  ShippingFeeOther,
		IsNil:  ShippingFeeOther == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingFeeOtherPtr(ShippingFeeOther *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_other",
		Value:  ShippingFeeOther,
		IsNil:  ShippingFeeOther == nil,
		IsZero: ShippingFeeOther != nil && (*ShippingFeeOther) == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopAdjustedShippingFeeMain(EtopAdjustedShippingFeeMain int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_adjusted_shipping_fee_main",
		Value:  EtopAdjustedShippingFeeMain,
		IsNil:  EtopAdjustedShippingFeeMain == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopAdjustedShippingFeeMainPtr(EtopAdjustedShippingFeeMain *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_adjusted_shipping_fee_main",
		Value:  EtopAdjustedShippingFeeMain,
		IsNil:  EtopAdjustedShippingFeeMain == nil,
		IsZero: EtopAdjustedShippingFeeMain != nil && (*EtopAdjustedShippingFeeMain) == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopPriceRule(EtopPriceRule bool) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_price_rule",
		Value:  EtopPriceRule,
		IsNil:  bool(!EtopPriceRule),
	}
}

func (ft *FulfillmentFilters) ByEtopPriceRulePtr(EtopPriceRule *bool) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_price_rule",
		Value:  EtopPriceRule,
		IsNil:  EtopPriceRule == nil,
		IsZero: EtopPriceRule != nil && bool(!(*EtopPriceRule)),
	}
}

func (ft *FulfillmentFilters) ByTypeFrom(TypeFrom model.FulfillmentEndpoint) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "type_from",
		Value:  TypeFrom,
		IsNil:  TypeFrom == "",
	}
}

func (ft *FulfillmentFilters) ByTypeFromPtr(TypeFrom *model.FulfillmentEndpoint) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "type_from",
		Value:  TypeFrom,
		IsNil:  TypeFrom == nil,
		IsZero: TypeFrom != nil && (*TypeFrom) == "",
	}
}

func (ft *FulfillmentFilters) ByTypeTo(TypeTo model.FulfillmentEndpoint) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "type_to",
		Value:  TypeTo,
		IsNil:  TypeTo == "",
	}
}

func (ft *FulfillmentFilters) ByTypeToPtr(TypeTo *model.FulfillmentEndpoint) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "type_to",
		Value:  TypeTo,
		IsNil:  TypeTo == nil,
		IsZero: TypeTo != nil && (*TypeTo) == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToProvinceCode(AddressToProvinceCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "address_to_province_code",
		Value:  AddressToProvinceCode,
		IsNil:  AddressToProvinceCode == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToProvinceCodePtr(AddressToProvinceCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "address_to_province_code",
		Value:  AddressToProvinceCode,
		IsNil:  AddressToProvinceCode == nil,
		IsZero: AddressToProvinceCode != nil && (*AddressToProvinceCode) == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToDistrictCode(AddressToDistrictCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "address_to_district_code",
		Value:  AddressToDistrictCode,
		IsNil:  AddressToDistrictCode == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToDistrictCodePtr(AddressToDistrictCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "address_to_district_code",
		Value:  AddressToDistrictCode,
		IsNil:  AddressToDistrictCode == nil,
		IsZero: AddressToDistrictCode != nil && (*AddressToDistrictCode) == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToWardCode(AddressToWardCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "address_to_ward_code",
		Value:  AddressToWardCode,
		IsNil:  AddressToWardCode == "",
	}
}

func (ft *FulfillmentFilters) ByAddressToWardCodePtr(AddressToWardCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "address_to_ward_code",
		Value:  AddressToWardCode,
		IsNil:  AddressToWardCode == nil,
		IsZero: AddressToWardCode != nil && (*AddressToWardCode) == "",
	}
}

func (ft *FulfillmentFilters) ByCreatedAt(CreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByCreatedAtPtr(CreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt == nil,
		IsZero: CreatedAt != nil && (*CreatedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByUpdatedAt(UpdatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByUpdatedAtPtr(UpdatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt == nil,
		IsZero: UpdatedAt != nil && (*UpdatedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByClosedAt(ClosedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "closed_at",
		Value:  ClosedAt,
		IsNil:  ClosedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByClosedAtPtr(ClosedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "closed_at",
		Value:  ClosedAt,
		IsNil:  ClosedAt == nil,
		IsZero: ClosedAt != nil && (*ClosedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExpectedDeliveryAt(ExpectedDeliveryAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "expected_delivery_at",
		Value:  ExpectedDeliveryAt,
		IsNil:  ExpectedDeliveryAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExpectedDeliveryAtPtr(ExpectedDeliveryAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "expected_delivery_at",
		Value:  ExpectedDeliveryAt,
		IsNil:  ExpectedDeliveryAt == nil,
		IsZero: ExpectedDeliveryAt != nil && (*ExpectedDeliveryAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExpectedPickAt(ExpectedPickAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "expected_pick_at",
		Value:  ExpectedPickAt,
		IsNil:  ExpectedPickAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExpectedPickAtPtr(ExpectedPickAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "expected_pick_at",
		Value:  ExpectedPickAt,
		IsNil:  ExpectedPickAt == nil,
		IsZero: ExpectedPickAt != nil && (*ExpectedPickAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByCODEtopTransferedAt(CODEtopTransferedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "cod_etop_transfered_at",
		Value:  CODEtopTransferedAt,
		IsNil:  CODEtopTransferedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByCODEtopTransferedAtPtr(CODEtopTransferedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "cod_etop_transfered_at",
		Value:  CODEtopTransferedAt,
		IsNil:  CODEtopTransferedAt == nil,
		IsZero: CODEtopTransferedAt != nil && (*CODEtopTransferedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingFeeShopTransferedAt(ShippingFeeShopTransferedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_fee_shop_transfered_at",
		Value:  ShippingFeeShopTransferedAt,
		IsNil:  ShippingFeeShopTransferedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingFeeShopTransferedAtPtr(ShippingFeeShopTransferedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_fee_shop_transfered_at",
		Value:  ShippingFeeShopTransferedAt,
		IsNil:  ShippingFeeShopTransferedAt == nil,
		IsZero: ShippingFeeShopTransferedAt != nil && (*ShippingFeeShopTransferedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingCancelledAt(ShippingCancelledAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_cancelled_at",
		Value:  ShippingCancelledAt,
		IsNil:  ShippingCancelledAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingCancelledAtPtr(ShippingCancelledAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_cancelled_at",
		Value:  ShippingCancelledAt,
		IsNil:  ShippingCancelledAt == nil,
		IsZero: ShippingCancelledAt != nil && (*ShippingCancelledAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingDeliveredAt(ShippingDeliveredAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_delivered_at",
		Value:  ShippingDeliveredAt,
		IsNil:  ShippingDeliveredAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingDeliveredAtPtr(ShippingDeliveredAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_delivered_at",
		Value:  ShippingDeliveredAt,
		IsNil:  ShippingDeliveredAt == nil,
		IsZero: ShippingDeliveredAt != nil && (*ShippingDeliveredAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingReturnedAt(ShippingReturnedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_returned_at",
		Value:  ShippingReturnedAt,
		IsNil:  ShippingReturnedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingReturnedAtPtr(ShippingReturnedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_returned_at",
		Value:  ShippingReturnedAt,
		IsNil:  ShippingReturnedAt == nil,
		IsZero: ShippingReturnedAt != nil && (*ShippingReturnedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingCreatedAt(ShippingCreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_created_at",
		Value:  ShippingCreatedAt,
		IsNil:  ShippingCreatedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingCreatedAtPtr(ShippingCreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_created_at",
		Value:  ShippingCreatedAt,
		IsNil:  ShippingCreatedAt == nil,
		IsZero: ShippingCreatedAt != nil && (*ShippingCreatedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingPickingAt(ShippingPickingAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_picking_at",
		Value:  ShippingPickingAt,
		IsNil:  ShippingPickingAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingPickingAtPtr(ShippingPickingAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_picking_at",
		Value:  ShippingPickingAt,
		IsNil:  ShippingPickingAt == nil,
		IsZero: ShippingPickingAt != nil && (*ShippingPickingAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingHoldingAt(ShippingHoldingAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_holding_at",
		Value:  ShippingHoldingAt,
		IsNil:  ShippingHoldingAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingHoldingAtPtr(ShippingHoldingAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_holding_at",
		Value:  ShippingHoldingAt,
		IsNil:  ShippingHoldingAt == nil,
		IsZero: ShippingHoldingAt != nil && (*ShippingHoldingAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingDeliveringAt(ShippingDeliveringAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_delivering_at",
		Value:  ShippingDeliveringAt,
		IsNil:  ShippingDeliveringAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingDeliveringAtPtr(ShippingDeliveringAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_delivering_at",
		Value:  ShippingDeliveringAt,
		IsNil:  ShippingDeliveringAt == nil,
		IsZero: ShippingDeliveringAt != nil && (*ShippingDeliveringAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingReturningAt(ShippingReturningAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_returning_at",
		Value:  ShippingReturningAt,
		IsNil:  ShippingReturningAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByShippingReturningAtPtr(ShippingReturningAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_returning_at",
		Value:  ShippingReturningAt,
		IsNil:  ShippingReturningAt == nil,
		IsZero: ShippingReturningAt != nil && (*ShippingReturningAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByMoneyTransactionID(MoneyTransactionID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "money_transaction_id",
		Value:  MoneyTransactionID,
		IsNil:  MoneyTransactionID == 0,
	}
}

func (ft *FulfillmentFilters) ByMoneyTransactionIDPtr(MoneyTransactionID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "money_transaction_id",
		Value:  MoneyTransactionID,
		IsNil:  MoneyTransactionID == nil,
		IsZero: MoneyTransactionID != nil && (*MoneyTransactionID) == 0,
	}
}

func (ft *FulfillmentFilters) ByMoneyTransactionShippingExternalID(MoneyTransactionShippingExternalID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "money_transaction_shipping_external_id",
		Value:  MoneyTransactionShippingExternalID,
		IsNil:  MoneyTransactionShippingExternalID == 0,
	}
}

func (ft *FulfillmentFilters) ByMoneyTransactionShippingExternalIDPtr(MoneyTransactionShippingExternalID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "money_transaction_shipping_external_id",
		Value:  MoneyTransactionShippingExternalID,
		IsNil:  MoneyTransactionShippingExternalID == nil,
		IsZero: MoneyTransactionShippingExternalID != nil && (*MoneyTransactionShippingExternalID) == 0,
	}
}

func (ft *FulfillmentFilters) ByCancelReason(CancelReason string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "cancel_reason",
		Value:  CancelReason,
		IsNil:  CancelReason == "",
	}
}

func (ft *FulfillmentFilters) ByCancelReasonPtr(CancelReason *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "cancel_reason",
		Value:  CancelReason,
		IsNil:  CancelReason == nil,
		IsZero: CancelReason != nil && (*CancelReason) == "",
	}
}

func (ft *FulfillmentFilters) ByShippingProvider(ShippingProvider model.ShippingProvider) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_provider",
		Value:  ShippingProvider,
		IsNil:  ShippingProvider == "",
	}
}

func (ft *FulfillmentFilters) ByShippingProviderPtr(ShippingProvider *model.ShippingProvider) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_provider",
		Value:  ShippingProvider,
		IsNil:  ShippingProvider == nil,
		IsZero: ShippingProvider != nil && (*ShippingProvider) == "",
	}
}

func (ft *FulfillmentFilters) ByProviderServiceID(ProviderServiceID string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "provider_service_id",
		Value:  ProviderServiceID,
		IsNil:  ProviderServiceID == "",
	}
}

func (ft *FulfillmentFilters) ByProviderServiceIDPtr(ProviderServiceID *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "provider_service_id",
		Value:  ProviderServiceID,
		IsNil:  ProviderServiceID == nil,
		IsZero: ProviderServiceID != nil && (*ProviderServiceID) == "",
	}
}

func (ft *FulfillmentFilters) ByShippingCode(ShippingCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == "",
	}
}

func (ft *FulfillmentFilters) ByShippingCodePtr(ShippingCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == nil,
		IsZero: ShippingCode != nil && (*ShippingCode) == "",
	}
}

func (ft *FulfillmentFilters) ByShippingNote(ShippingNote string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_note",
		Value:  ShippingNote,
		IsNil:  ShippingNote == "",
	}
}

func (ft *FulfillmentFilters) ByShippingNotePtr(ShippingNote *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_note",
		Value:  ShippingNote,
		IsNil:  ShippingNote == nil,
		IsZero: ShippingNote != nil && (*ShippingNote) == "",
	}
}

func (ft *FulfillmentFilters) ByTryOn(TryOn model.TryOn) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "try_on",
		Value:  TryOn,
		IsNil:  TryOn == "",
	}
}

func (ft *FulfillmentFilters) ByTryOnPtr(TryOn *model.TryOn) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "try_on",
		Value:  TryOn,
		IsNil:  TryOn == nil,
		IsZero: TryOn != nil && (*TryOn) == "",
	}
}

func (ft *FulfillmentFilters) ByIncludeInsurance(IncludeInsurance bool) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "include_insurance",
		Value:  IncludeInsurance,
		IsNil:  bool(!IncludeInsurance),
	}
}

func (ft *FulfillmentFilters) ByIncludeInsurancePtr(IncludeInsurance *bool) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "include_insurance",
		Value:  IncludeInsurance,
		IsNil:  IncludeInsurance == nil,
		IsZero: IncludeInsurance != nil && bool(!(*IncludeInsurance)),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingName(ExternalShippingName string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_name",
		Value:  ExternalShippingName,
		IsNil:  ExternalShippingName == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingNamePtr(ExternalShippingName *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_name",
		Value:  ExternalShippingName,
		IsNil:  ExternalShippingName == nil,
		IsZero: ExternalShippingName != nil && (*ExternalShippingName) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingID(ExternalShippingID string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_id",
		Value:  ExternalShippingID,
		IsNil:  ExternalShippingID == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingIDPtr(ExternalShippingID *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_id",
		Value:  ExternalShippingID,
		IsNil:  ExternalShippingID == nil,
		IsZero: ExternalShippingID != nil && (*ExternalShippingID) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCode(ExternalShippingCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_code",
		Value:  ExternalShippingCode,
		IsNil:  ExternalShippingCode == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCodePtr(ExternalShippingCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_code",
		Value:  ExternalShippingCode,
		IsNil:  ExternalShippingCode == nil,
		IsZero: ExternalShippingCode != nil && (*ExternalShippingCode) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCreatedAt(ExternalShippingCreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_created_at",
		Value:  ExternalShippingCreatedAt,
		IsNil:  ExternalShippingCreatedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCreatedAtPtr(ExternalShippingCreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_created_at",
		Value:  ExternalShippingCreatedAt,
		IsNil:  ExternalShippingCreatedAt == nil,
		IsZero: ExternalShippingCreatedAt != nil && (*ExternalShippingCreatedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingUpdatedAt(ExternalShippingUpdatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_updated_at",
		Value:  ExternalShippingUpdatedAt,
		IsNil:  ExternalShippingUpdatedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingUpdatedAtPtr(ExternalShippingUpdatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_updated_at",
		Value:  ExternalShippingUpdatedAt,
		IsNil:  ExternalShippingUpdatedAt == nil,
		IsZero: ExternalShippingUpdatedAt != nil && (*ExternalShippingUpdatedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCancelledAt(ExternalShippingCancelledAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_cancelled_at",
		Value:  ExternalShippingCancelledAt,
		IsNil:  ExternalShippingCancelledAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingCancelledAtPtr(ExternalShippingCancelledAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_cancelled_at",
		Value:  ExternalShippingCancelledAt,
		IsNil:  ExternalShippingCancelledAt == nil,
		IsZero: ExternalShippingCancelledAt != nil && (*ExternalShippingCancelledAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingDeliveredAt(ExternalShippingDeliveredAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_delivered_at",
		Value:  ExternalShippingDeliveredAt,
		IsNil:  ExternalShippingDeliveredAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingDeliveredAtPtr(ExternalShippingDeliveredAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_delivered_at",
		Value:  ExternalShippingDeliveredAt,
		IsNil:  ExternalShippingDeliveredAt == nil,
		IsZero: ExternalShippingDeliveredAt != nil && (*ExternalShippingDeliveredAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingReturnedAt(ExternalShippingReturnedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_returned_at",
		Value:  ExternalShippingReturnedAt,
		IsNil:  ExternalShippingReturnedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingReturnedAtPtr(ExternalShippingReturnedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_returned_at",
		Value:  ExternalShippingReturnedAt,
		IsNil:  ExternalShippingReturnedAt == nil,
		IsZero: ExternalShippingReturnedAt != nil && (*ExternalShippingReturnedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingClosedAt(ExternalShippingClosedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_closed_at",
		Value:  ExternalShippingClosedAt,
		IsNil:  ExternalShippingClosedAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingClosedAtPtr(ExternalShippingClosedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_closed_at",
		Value:  ExternalShippingClosedAt,
		IsNil:  ExternalShippingClosedAt == nil,
		IsZero: ExternalShippingClosedAt != nil && (*ExternalShippingClosedAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByExternalShippingState(ExternalShippingState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_state",
		Value:  ExternalShippingState,
		IsNil:  ExternalShippingState == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingStatePtr(ExternalShippingState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_state",
		Value:  ExternalShippingState,
		IsNil:  ExternalShippingState == nil,
		IsZero: ExternalShippingState != nil && (*ExternalShippingState) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingStateCode(ExternalShippingStateCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_state_code",
		Value:  ExternalShippingStateCode,
		IsNil:  ExternalShippingStateCode == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingStateCodePtr(ExternalShippingStateCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_state_code",
		Value:  ExternalShippingStateCode,
		IsNil:  ExternalShippingStateCode == nil,
		IsZero: ExternalShippingStateCode != nil && (*ExternalShippingStateCode) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingStatus(ExternalShippingStatus model.Status5) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_status",
		Value:  ExternalShippingStatus,
		IsNil:  ExternalShippingStatus == 0,
	}
}

func (ft *FulfillmentFilters) ByExternalShippingStatusPtr(ExternalShippingStatus *model.Status5) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_status",
		Value:  ExternalShippingStatus,
		IsNil:  ExternalShippingStatus == nil,
		IsZero: ExternalShippingStatus != nil && (*ExternalShippingStatus) == 0,
	}
}

func (ft *FulfillmentFilters) ByExternalShippingNote(ExternalShippingNote string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_note",
		Value:  ExternalShippingNote,
		IsNil:  ExternalShippingNote == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingNotePtr(ExternalShippingNote *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_note",
		Value:  ExternalShippingNote,
		IsNil:  ExternalShippingNote == nil,
		IsZero: ExternalShippingNote != nil && (*ExternalShippingNote) == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingSubState(ExternalShippingSubState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_sub_state",
		Value:  ExternalShippingSubState,
		IsNil:  ExternalShippingSubState == "",
	}
}

func (ft *FulfillmentFilters) ByExternalShippingSubStatePtr(ExternalShippingSubState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_sub_state",
		Value:  ExternalShippingSubState,
		IsNil:  ExternalShippingSubState == nil,
		IsZero: ExternalShippingSubState != nil && (*ExternalShippingSubState) == "",
	}
}

func (ft *FulfillmentFilters) ByShippingState(ShippingState model.ShippingState) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == "",
	}
}

func (ft *FulfillmentFilters) ByShippingStatePtr(ShippingState *model.ShippingState) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == nil,
		IsZero: ShippingState != nil && (*ShippingState) == "",
	}
}

func (ft *FulfillmentFilters) ByShippingStatus(ShippingStatus model.Status5) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_status",
		Value:  ShippingStatus,
		IsNil:  ShippingStatus == 0,
	}
}

func (ft *FulfillmentFilters) ByShippingStatusPtr(ShippingStatus *model.Status5) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_status",
		Value:  ShippingStatus,
		IsNil:  ShippingStatus == nil,
		IsZero: ShippingStatus != nil && (*ShippingStatus) == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopPaymentStatus(EtopPaymentStatus model.Status4) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_payment_status",
		Value:  EtopPaymentStatus,
		IsNil:  EtopPaymentStatus == 0,
	}
}

func (ft *FulfillmentFilters) ByEtopPaymentStatusPtr(EtopPaymentStatus *model.Status4) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_payment_status",
		Value:  EtopPaymentStatus,
		IsNil:  EtopPaymentStatus == nil,
		IsZero: EtopPaymentStatus != nil && (*EtopPaymentStatus) == 0,
	}
}

func (ft *FulfillmentFilters) ByStatus(Status model.Status5) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "status",
		Value:  Status,
		IsNil:  Status == 0,
	}
}

func (ft *FulfillmentFilters) ByStatusPtr(Status *model.Status5) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "status",
		Value:  Status,
		IsNil:  Status == nil,
		IsZero: Status != nil && (*Status) == 0,
	}
}

func (ft *FulfillmentFilters) BySyncStatus(SyncStatus model.Status4) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "sync_status",
		Value:  SyncStatus,
		IsNil:  SyncStatus == 0,
	}
}

func (ft *FulfillmentFilters) BySyncStatusPtr(SyncStatus *model.Status4) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "sync_status",
		Value:  SyncStatus,
		IsNil:  SyncStatus == nil,
		IsZero: SyncStatus != nil && (*SyncStatus) == 0,
	}
}

func (ft *FulfillmentFilters) ByLastSyncAt(LastSyncAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "last_sync_at",
		Value:  LastSyncAt,
		IsNil:  LastSyncAt.IsZero(),
	}
}

func (ft *FulfillmentFilters) ByLastSyncAtPtr(LastSyncAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "last_sync_at",
		Value:  LastSyncAt,
		IsNil:  LastSyncAt == nil,
		IsZero: LastSyncAt != nil && (*LastSyncAt).IsZero(),
	}
}

func (ft *FulfillmentFilters) ByAdminNote(AdminNote string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "admin_note",
		Value:  AdminNote,
		IsNil:  AdminNote == "",
	}
}

func (ft *FulfillmentFilters) ByAdminNotePtr(AdminNote *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "admin_note",
		Value:  AdminNote,
		IsNil:  AdminNote == nil,
		IsZero: AdminNote != nil && (*AdminNote) == "",
	}
}

func (ft *FulfillmentFilters) ByIsPartialDelivery(IsPartialDelivery bool) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "is_partial_delivery",
		Value:  IsPartialDelivery,
		IsNil:  bool(!IsPartialDelivery),
	}
}

func (ft *FulfillmentFilters) ByIsPartialDeliveryPtr(IsPartialDelivery *bool) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "is_partial_delivery",
		Value:  IsPartialDelivery,
		IsNil:  IsPartialDelivery == nil,
		IsZero: IsPartialDelivery != nil && bool(!(*IsPartialDelivery)),
	}
}
