// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	subpricelist "o.o/api/main/shipmentpricing/subpricelist"
	subpricelistmodel "o.o/backend/com/main/shipmentpricing/subpricelist/model"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*subpricelistmodel.ShipmentSubPriceList)(nil), (*subpricelist.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		Convert_subpricelistmodel_ShipmentSubPriceList_subpricelist_ShipmentSubPriceList(arg.(*subpricelistmodel.ShipmentSubPriceList), out.(*subpricelist.ShipmentSubPriceList))
		return nil
	})
	s.Register(([]*subpricelistmodel.ShipmentSubPriceList)(nil), (*[]*subpricelist.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		out0 := Convert_subpricelistmodel_ShipmentSubPriceLists_subpricelist_ShipmentSubPriceLists(arg.([]*subpricelistmodel.ShipmentSubPriceList))
		*out.(*[]*subpricelist.ShipmentSubPriceList) = out0
		return nil
	})
	s.Register((*subpricelist.ShipmentSubPriceList)(nil), (*subpricelistmodel.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		Convert_subpricelist_ShipmentSubPriceList_subpricelistmodel_ShipmentSubPriceList(arg.(*subpricelist.ShipmentSubPriceList), out.(*subpricelistmodel.ShipmentSubPriceList))
		return nil
	})
	s.Register(([]*subpricelist.ShipmentSubPriceList)(nil), (*[]*subpricelistmodel.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		out0 := Convert_subpricelist_ShipmentSubPriceLists_subpricelistmodel_ShipmentSubPriceLists(arg.([]*subpricelist.ShipmentSubPriceList))
		*out.(*[]*subpricelistmodel.ShipmentSubPriceList) = out0
		return nil
	})
	s.Register((*subpricelist.CreateSubPriceListArgs)(nil), (*subpricelist.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		Apply_subpricelist_CreateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg.(*subpricelist.CreateSubPriceListArgs), out.(*subpricelist.ShipmentSubPriceList))
		return nil
	})
	s.Register((*subpricelist.UpdateSubPriceListArgs)(nil), (*subpricelist.ShipmentSubPriceList)(nil), func(arg, out interface{}) error {
		Apply_subpricelist_UpdateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg.(*subpricelist.UpdateSubPriceListArgs), out.(*subpricelist.ShipmentSubPriceList))
		return nil
	})
}

//-- convert o.o/api/main/shipmentpricing/subpricelist.ShipmentSubPriceList --//

func Convert_subpricelistmodel_ShipmentSubPriceList_subpricelist_ShipmentSubPriceList(arg *subpricelistmodel.ShipmentSubPriceList, out *subpricelist.ShipmentSubPriceList) *subpricelist.ShipmentSubPriceList {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &subpricelist.ShipmentSubPriceList{}
	}
	convert_subpricelistmodel_ShipmentSubPriceList_subpricelist_ShipmentSubPriceList(arg, out)
	return out
}

func convert_subpricelistmodel_ShipmentSubPriceList_subpricelist_ShipmentSubPriceList(arg *subpricelistmodel.ShipmentSubPriceList, out *subpricelist.ShipmentSubPriceList) {
	out.ID = arg.ID                     // simple assign
	out.Name = arg.Name                 // simple assign
	out.Description = arg.Description   // simple assign
	out.Status = arg.Status             // simple assign
	out.ConnectionID = arg.ConnectionID // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.DeletedAt = arg.DeletedAt       // simple assign
	out.WLPartnerID = arg.WLPartnerID   // simple assign
}

func Convert_subpricelistmodel_ShipmentSubPriceLists_subpricelist_ShipmentSubPriceLists(args []*subpricelistmodel.ShipmentSubPriceList) (outs []*subpricelist.ShipmentSubPriceList) {
	if args == nil {
		return nil
	}
	tmps := make([]subpricelist.ShipmentSubPriceList, len(args))
	outs = make([]*subpricelist.ShipmentSubPriceList, len(args))
	for i := range tmps {
		outs[i] = Convert_subpricelistmodel_ShipmentSubPriceList_subpricelist_ShipmentSubPriceList(args[i], &tmps[i])
	}
	return outs
}

func Convert_subpricelist_ShipmentSubPriceList_subpricelistmodel_ShipmentSubPriceList(arg *subpricelist.ShipmentSubPriceList, out *subpricelistmodel.ShipmentSubPriceList) *subpricelistmodel.ShipmentSubPriceList {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &subpricelistmodel.ShipmentSubPriceList{}
	}
	convert_subpricelist_ShipmentSubPriceList_subpricelistmodel_ShipmentSubPriceList(arg, out)
	return out
}

func convert_subpricelist_ShipmentSubPriceList_subpricelistmodel_ShipmentSubPriceList(arg *subpricelist.ShipmentSubPriceList, out *subpricelistmodel.ShipmentSubPriceList) {
	out.ID = arg.ID                     // simple assign
	out.Name = arg.Name                 // simple assign
	out.Description = arg.Description   // simple assign
	out.Status = arg.Status             // simple assign
	out.ConnectionID = arg.ConnectionID // simple assign
	out.WLPartnerID = arg.WLPartnerID   // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.DeletedAt = arg.DeletedAt       // simple assign
}

func Convert_subpricelist_ShipmentSubPriceLists_subpricelistmodel_ShipmentSubPriceLists(args []*subpricelist.ShipmentSubPriceList) (outs []*subpricelistmodel.ShipmentSubPriceList) {
	if args == nil {
		return nil
	}
	tmps := make([]subpricelistmodel.ShipmentSubPriceList, len(args))
	outs = make([]*subpricelistmodel.ShipmentSubPriceList, len(args))
	for i := range tmps {
		outs[i] = Convert_subpricelist_ShipmentSubPriceList_subpricelistmodel_ShipmentSubPriceList(args[i], &tmps[i])
	}
	return outs
}

func Apply_subpricelist_CreateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg *subpricelist.CreateSubPriceListArgs, out *subpricelist.ShipmentSubPriceList) *subpricelist.ShipmentSubPriceList {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &subpricelist.ShipmentSubPriceList{}
	}
	apply_subpricelist_CreateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg, out)
	return out
}

func apply_subpricelist_CreateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg *subpricelist.CreateSubPriceListArgs, out *subpricelist.ShipmentSubPriceList) {
	out.ID = 0                          // zero value
	out.Name = arg.Name                 // simple assign
	out.Description = arg.Description   // simple assign
	out.Status = 0                      // zero value
	out.ConnectionID = arg.ConnectionID // simple assign
	out.CreatedAt = time.Time{}         // zero value
	out.UpdatedAt = time.Time{}         // zero value
	out.DeletedAt = time.Time{}         // zero value
	out.WLPartnerID = 0                 // zero value
}

func Apply_subpricelist_UpdateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg *subpricelist.UpdateSubPriceListArgs, out *subpricelist.ShipmentSubPriceList) *subpricelist.ShipmentSubPriceList {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &subpricelist.ShipmentSubPriceList{}
	}
	apply_subpricelist_UpdateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg, out)
	return out
}

func apply_subpricelist_UpdateSubPriceListArgs_subpricelist_ShipmentSubPriceList(arg *subpricelist.UpdateSubPriceListArgs, out *subpricelist.ShipmentSubPriceList) {
	out.ID = arg.ID                           // simple assign
	out.Name = arg.Name                       // simple assign
	out.Description = arg.Description         // simple assign
	out.Status = arg.Status.Apply(out.Status) // apply change
	out.ConnectionID = out.ConnectionID       // no change
	out.CreatedAt = out.CreatedAt             // no change
	out.UpdatedAt = out.UpdatedAt             // no change
	out.DeletedAt = out.DeletedAt             // no change
	out.WLPartnerID = out.WLPartnerID         // no change
}
