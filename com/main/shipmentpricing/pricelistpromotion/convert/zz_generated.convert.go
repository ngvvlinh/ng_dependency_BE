// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	pricelistpromotion "o.o/api/main/shipmentpricing/pricelistpromotion"
	pricelistpromotionmodel "o.o/backend/com/main/shipmentpricing/pricelistpromotion/model"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*pricelistpromotionmodel.AppliedRules)(nil), (*pricelistpromotion.AppliedRules)(nil), func(arg, out interface{}) error {
		Convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(arg.(*pricelistpromotionmodel.AppliedRules), out.(*pricelistpromotion.AppliedRules))
		return nil
	})
	s.Register(([]*pricelistpromotionmodel.AppliedRules)(nil), (*[]*pricelistpromotion.AppliedRules)(nil), func(arg, out interface{}) error {
		out0 := Convert_pricelistpromotionmodel_AppliedRuleses_pricelistpromotion_AppliedRuleses(arg.([]*pricelistpromotionmodel.AppliedRules))
		*out.(*[]*pricelistpromotion.AppliedRules) = out0
		return nil
	})
	s.Register((*pricelistpromotion.AppliedRules)(nil), (*pricelistpromotionmodel.AppliedRules)(nil), func(arg, out interface{}) error {
		Convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(arg.(*pricelistpromotion.AppliedRules), out.(*pricelistpromotionmodel.AppliedRules))
		return nil
	})
	s.Register(([]*pricelistpromotion.AppliedRules)(nil), (*[]*pricelistpromotionmodel.AppliedRules)(nil), func(arg, out interface{}) error {
		out0 := Convert_pricelistpromotion_AppliedRuleses_pricelistpromotionmodel_AppliedRuleses(arg.([]*pricelistpromotion.AppliedRules))
		*out.(*[]*pricelistpromotionmodel.AppliedRules) = out0
		return nil
	})
	s.Register((*pricelistpromotionmodel.ShipmentPriceListPromotion)(nil), (*pricelistpromotion.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		Convert_pricelistpromotionmodel_ShipmentPriceListPromotion_pricelistpromotion_ShipmentPriceListPromotion(arg.(*pricelistpromotionmodel.ShipmentPriceListPromotion), out.(*pricelistpromotion.ShipmentPriceListPromotion))
		return nil
	})
	s.Register(([]*pricelistpromotionmodel.ShipmentPriceListPromotion)(nil), (*[]*pricelistpromotion.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		out0 := Convert_pricelistpromotionmodel_ShipmentPriceListPromotions_pricelistpromotion_ShipmentPriceListPromotions(arg.([]*pricelistpromotionmodel.ShipmentPriceListPromotion))
		*out.(*[]*pricelistpromotion.ShipmentPriceListPromotion) = out0
		return nil
	})
	s.Register((*pricelistpromotion.ShipmentPriceListPromotion)(nil), (*pricelistpromotionmodel.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		Convert_pricelistpromotion_ShipmentPriceListPromotion_pricelistpromotionmodel_ShipmentPriceListPromotion(arg.(*pricelistpromotion.ShipmentPriceListPromotion), out.(*pricelistpromotionmodel.ShipmentPriceListPromotion))
		return nil
	})
	s.Register(([]*pricelistpromotion.ShipmentPriceListPromotion)(nil), (*[]*pricelistpromotionmodel.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		out0 := Convert_pricelistpromotion_ShipmentPriceListPromotions_pricelistpromotionmodel_ShipmentPriceListPromotions(arg.([]*pricelistpromotion.ShipmentPriceListPromotion))
		*out.(*[]*pricelistpromotionmodel.ShipmentPriceListPromotion) = out0
		return nil
	})
	s.Register((*pricelistpromotion.CreatePriceListPromotionArgs)(nil), (*pricelistpromotion.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		Apply_pricelistpromotion_CreatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg.(*pricelistpromotion.CreatePriceListPromotionArgs), out.(*pricelistpromotion.ShipmentPriceListPromotion))
		return nil
	})
	s.Register((*pricelistpromotion.UpdatePriceListPromotionArgs)(nil), (*pricelistpromotion.ShipmentPriceListPromotion)(nil), func(arg, out interface{}) error {
		Apply_pricelistpromotion_UpdatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg.(*pricelistpromotion.UpdatePriceListPromotionArgs), out.(*pricelistpromotion.ShipmentPriceListPromotion))
		return nil
	})
}

//-- convert o.o/api/main/shipmentpricing/pricelistpromotion.AppliedRules --//

func Convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(arg *pricelistpromotionmodel.AppliedRules, out *pricelistpromotion.AppliedRules) *pricelistpromotion.AppliedRules {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotion.AppliedRules{}
	}
	convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(arg, out)
	return out
}

func convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(arg *pricelistpromotionmodel.AppliedRules, out *pricelistpromotion.AppliedRules) {
	out.FromCustomRegionIDs = arg.FromCustomRegionIDs // simple assign
	out.ShopCreatedDate = arg.ShopCreatedDate         // simple assign
	out.UserCreatedDate = arg.UserCreatedDate         // simple assign
	out.UsingPriceListIDs = arg.UsingPriceListIDs     // simple assign
}

func Convert_pricelistpromotionmodel_AppliedRuleses_pricelistpromotion_AppliedRuleses(args []*pricelistpromotionmodel.AppliedRules) (outs []*pricelistpromotion.AppliedRules) {
	if args == nil {
		return nil
	}
	tmps := make([]pricelistpromotion.AppliedRules, len(args))
	outs = make([]*pricelistpromotion.AppliedRules, len(args))
	for i := range tmps {
		outs[i] = Convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(args[i], &tmps[i])
	}
	return outs
}

func Convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(arg *pricelistpromotion.AppliedRules, out *pricelistpromotionmodel.AppliedRules) *pricelistpromotionmodel.AppliedRules {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotionmodel.AppliedRules{}
	}
	convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(arg, out)
	return out
}

func convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(arg *pricelistpromotion.AppliedRules, out *pricelistpromotionmodel.AppliedRules) {
	out.FromCustomRegionIDs = arg.FromCustomRegionIDs // simple assign
	out.ShopCreatedDate = arg.ShopCreatedDate         // simple assign
	out.UserCreatedDate = arg.UserCreatedDate         // simple assign
	out.UsingPriceListIDs = arg.UsingPriceListIDs     // simple assign
}

func Convert_pricelistpromotion_AppliedRuleses_pricelistpromotionmodel_AppliedRuleses(args []*pricelistpromotion.AppliedRules) (outs []*pricelistpromotionmodel.AppliedRules) {
	if args == nil {
		return nil
	}
	tmps := make([]pricelistpromotionmodel.AppliedRules, len(args))
	outs = make([]*pricelistpromotionmodel.AppliedRules, len(args))
	for i := range tmps {
		outs[i] = Convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/main/shipmentpricing/pricelistpromotion.ShipmentPriceListPromotion --//

func Convert_pricelistpromotionmodel_ShipmentPriceListPromotion_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotionmodel.ShipmentPriceListPromotion, out *pricelistpromotion.ShipmentPriceListPromotion) *pricelistpromotion.ShipmentPriceListPromotion {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotion.ShipmentPriceListPromotion{}
	}
	convert_pricelistpromotionmodel_ShipmentPriceListPromotion_pricelistpromotion_ShipmentPriceListPromotion(arg, out)
	return out
}

func convert_pricelistpromotionmodel_ShipmentPriceListPromotion_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotionmodel.ShipmentPriceListPromotion, out *pricelistpromotion.ShipmentPriceListPromotion) {
	out.ID = arg.ID                   // simple assign
	out.PriceListID = arg.PriceListID // simple assign
	out.Name = arg.Name               // simple assign
	out.Description = arg.Description // simple assign
	out.Status = arg.Status           // simple assign
	out.DateFrom = arg.DateFrom       // simple assign
	out.DateTo = arg.DateTo           // simple assign
	out.AppliedRules = Convert_pricelistpromotionmodel_AppliedRules_pricelistpromotion_AppliedRules(arg.AppliedRules, nil)
	out.CreatedAt = arg.CreatedAt         // simple assign
	out.UpdatedAt = arg.UpdatedAt         // simple assign
	out.DeletedAt = arg.DeletedAt         // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
	out.ConnectionID = arg.ConnectionID   // simple assign
	out.PriorityPoint = arg.PriorityPoint // simple assign
}

func Convert_pricelistpromotionmodel_ShipmentPriceListPromotions_pricelistpromotion_ShipmentPriceListPromotions(args []*pricelistpromotionmodel.ShipmentPriceListPromotion) (outs []*pricelistpromotion.ShipmentPriceListPromotion) {
	if args == nil {
		return nil
	}
	tmps := make([]pricelistpromotion.ShipmentPriceListPromotion, len(args))
	outs = make([]*pricelistpromotion.ShipmentPriceListPromotion, len(args))
	for i := range tmps {
		outs[i] = Convert_pricelistpromotionmodel_ShipmentPriceListPromotion_pricelistpromotion_ShipmentPriceListPromotion(args[i], &tmps[i])
	}
	return outs
}

func Convert_pricelistpromotion_ShipmentPriceListPromotion_pricelistpromotionmodel_ShipmentPriceListPromotion(arg *pricelistpromotion.ShipmentPriceListPromotion, out *pricelistpromotionmodel.ShipmentPriceListPromotion) *pricelistpromotionmodel.ShipmentPriceListPromotion {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotionmodel.ShipmentPriceListPromotion{}
	}
	convert_pricelistpromotion_ShipmentPriceListPromotion_pricelistpromotionmodel_ShipmentPriceListPromotion(arg, out)
	return out
}

func convert_pricelistpromotion_ShipmentPriceListPromotion_pricelistpromotionmodel_ShipmentPriceListPromotion(arg *pricelistpromotion.ShipmentPriceListPromotion, out *pricelistpromotionmodel.ShipmentPriceListPromotion) {
	out.ID = arg.ID                   // simple assign
	out.PriceListID = arg.PriceListID // simple assign
	out.Name = arg.Name               // simple assign
	out.Description = arg.Description // simple assign
	out.Status = arg.Status           // simple assign
	out.DateFrom = arg.DateFrom       // simple assign
	out.DateTo = arg.DateTo           // simple assign
	out.AppliedRules = Convert_pricelistpromotion_AppliedRules_pricelistpromotionmodel_AppliedRules(arg.AppliedRules, nil)
	out.CreatedAt = arg.CreatedAt         // simple assign
	out.UpdatedAt = arg.UpdatedAt         // simple assign
	out.DeletedAt = arg.DeletedAt         // simple assign
	out.WLPartnerID = arg.WLPartnerID     // simple assign
	out.ConnectionID = arg.ConnectionID   // simple assign
	out.PriorityPoint = arg.PriorityPoint // simple assign
}

func Convert_pricelistpromotion_ShipmentPriceListPromotions_pricelistpromotionmodel_ShipmentPriceListPromotions(args []*pricelistpromotion.ShipmentPriceListPromotion) (outs []*pricelistpromotionmodel.ShipmentPriceListPromotion) {
	if args == nil {
		return nil
	}
	tmps := make([]pricelistpromotionmodel.ShipmentPriceListPromotion, len(args))
	outs = make([]*pricelistpromotionmodel.ShipmentPriceListPromotion, len(args))
	for i := range tmps {
		outs[i] = Convert_pricelistpromotion_ShipmentPriceListPromotion_pricelistpromotionmodel_ShipmentPriceListPromotion(args[i], &tmps[i])
	}
	return outs
}

func Apply_pricelistpromotion_CreatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotion.CreatePriceListPromotionArgs, out *pricelistpromotion.ShipmentPriceListPromotion) *pricelistpromotion.ShipmentPriceListPromotion {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotion.ShipmentPriceListPromotion{}
	}
	apply_pricelistpromotion_CreatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg, out)
	return out
}

func apply_pricelistpromotion_CreatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotion.CreatePriceListPromotionArgs, out *pricelistpromotion.ShipmentPriceListPromotion) {
	out.ID = 0                            // zero value
	out.PriceListID = arg.PriceListID     // simple assign
	out.Name = arg.Name                   // simple assign
	out.Description = arg.Description     // simple assign
	out.Status = 0                        // zero value
	out.DateFrom = arg.DateFrom           // simple assign
	out.DateTo = arg.DateTo               // simple assign
	out.AppliedRules = arg.AppliedRules   // simple assign
	out.CreatedAt = time.Time{}           // zero value
	out.UpdatedAt = time.Time{}           // zero value
	out.DeletedAt = time.Time{}           // zero value
	out.WLPartnerID = 0                   // zero value
	out.ConnectionID = arg.ConnectionID   // simple assign
	out.PriorityPoint = arg.PriorityPoint // simple assign
}

func Apply_pricelistpromotion_UpdatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotion.UpdatePriceListPromotionArgs, out *pricelistpromotion.ShipmentPriceListPromotion) *pricelistpromotion.ShipmentPriceListPromotion {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &pricelistpromotion.ShipmentPriceListPromotion{}
	}
	apply_pricelistpromotion_UpdatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg, out)
	return out
}

func apply_pricelistpromotion_UpdatePriceListPromotionArgs_pricelistpromotion_ShipmentPriceListPromotion(arg *pricelistpromotion.UpdatePriceListPromotionArgs, out *pricelistpromotion.ShipmentPriceListPromotion) {
	out.ID = arg.ID                           // simple assign
	out.PriceListID = arg.PriceListID         // simple assign
	out.Name = arg.Name                       // simple assign
	out.Description = arg.Description         // simple assign
	out.Status = arg.Status.Apply(out.Status) // apply change
	out.DateFrom = arg.DateFrom               // simple assign
	out.DateTo = arg.DateTo                   // simple assign
	out.AppliedRules = arg.AppliedRules       // simple assign
	out.CreatedAt = out.CreatedAt             // no change
	out.UpdatedAt = out.UpdatedAt             // no change
	out.DeletedAt = out.DeletedAt             // no change
	out.WLPartnerID = out.WLPartnerID         // no change
	out.ConnectionID = arg.ConnectionID       // simple assign
	out.PriorityPoint = arg.PriorityPoint     // simple assign
}
