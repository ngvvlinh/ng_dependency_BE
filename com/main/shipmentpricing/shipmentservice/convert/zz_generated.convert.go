// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	shipmentservice "etop.vn/api/main/shipmentpricing/shipmentservice"
	shipmentservicemodel "etop.vn/backend/com/main/shipmentpricing/shipmentservice/model"
	conversion "etop.vn/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shipmentservicemodel.ShipmentService)(nil), (*shipmentservice.ShipmentService)(nil), func(arg, out interface{}) error {
		Convert_shipmentservicemodel_ShipmentService_shipmentservice_ShipmentService(arg.(*shipmentservicemodel.ShipmentService), out.(*shipmentservice.ShipmentService))
		return nil
	})
	s.Register(([]*shipmentservicemodel.ShipmentService)(nil), (*[]*shipmentservice.ShipmentService)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipmentservicemodel_ShipmentServices_shipmentservice_ShipmentServices(arg.([]*shipmentservicemodel.ShipmentService))
		*out.(*[]*shipmentservice.ShipmentService) = out0
		return nil
	})
	s.Register((*shipmentservice.ShipmentService)(nil), (*shipmentservicemodel.ShipmentService)(nil), func(arg, out interface{}) error {
		Convert_shipmentservice_ShipmentService_shipmentservicemodel_ShipmentService(arg.(*shipmentservice.ShipmentService), out.(*shipmentservicemodel.ShipmentService))
		return nil
	})
	s.Register(([]*shipmentservice.ShipmentService)(nil), (*[]*shipmentservicemodel.ShipmentService)(nil), func(arg, out interface{}) error {
		out0 := Convert_shipmentservice_ShipmentServices_shipmentservicemodel_ShipmentServices(arg.([]*shipmentservice.ShipmentService))
		*out.(*[]*shipmentservicemodel.ShipmentService) = out0
		return nil
	})
	s.Register((*shipmentservice.CreateShipmentServiceArgs)(nil), (*shipmentservice.ShipmentService)(nil), func(arg, out interface{}) error {
		Apply_shipmentservice_CreateShipmentServiceArgs_shipmentservice_ShipmentService(arg.(*shipmentservice.CreateShipmentServiceArgs), out.(*shipmentservice.ShipmentService))
		return nil
	})
	s.Register((*shipmentservice.UpdateShipmentServiceArgs)(nil), (*shipmentservice.ShipmentService)(nil), func(arg, out interface{}) error {
		Apply_shipmentservice_UpdateShipmentServiceArgs_shipmentservice_ShipmentService(arg.(*shipmentservice.UpdateShipmentServiceArgs), out.(*shipmentservice.ShipmentService))
		return nil
	})
}

//-- convert etop.vn/api/main/shipmentpricing/shipmentservice.ShipmentService --//

func Convert_shipmentservicemodel_ShipmentService_shipmentservice_ShipmentService(arg *shipmentservicemodel.ShipmentService, out *shipmentservice.ShipmentService) *shipmentservice.ShipmentService {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipmentservice.ShipmentService{}
	}
	convert_shipmentservicemodel_ShipmentService_shipmentservice_ShipmentService(arg, out)
	return out
}

func convert_shipmentservicemodel_ShipmentService_shipmentservice_ShipmentService(arg *shipmentservicemodel.ShipmentService, out *shipmentservice.ShipmentService) {
	out.ID = arg.ID                     // simple assign
	out.ConnectionID = arg.ConnectionID // simple assign
	out.Name = arg.Name                 // simple assign
	out.EdCode = arg.EdCode             // simple assign
	out.ServiceIDs = arg.ServiceIDs     // simple assign
	out.Description = arg.Description   // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.DeletedAt = arg.DeletedAt       // simple assign
	out.WLPartnerID = arg.WLPartnerID   // simple assign
	out.ImageURL = arg.ImageURL         // simple assign
	out.Status = arg.Status             // simple assign
}

func Convert_shipmentservicemodel_ShipmentServices_shipmentservice_ShipmentServices(args []*shipmentservicemodel.ShipmentService) (outs []*shipmentservice.ShipmentService) {
	if args == nil {
		return nil
	}
	tmps := make([]shipmentservice.ShipmentService, len(args))
	outs = make([]*shipmentservice.ShipmentService, len(args))
	for i := range tmps {
		outs[i] = Convert_shipmentservicemodel_ShipmentService_shipmentservice_ShipmentService(args[i], &tmps[i])
	}
	return outs
}

func Convert_shipmentservice_ShipmentService_shipmentservicemodel_ShipmentService(arg *shipmentservice.ShipmentService, out *shipmentservicemodel.ShipmentService) *shipmentservicemodel.ShipmentService {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipmentservicemodel.ShipmentService{}
	}
	convert_shipmentservice_ShipmentService_shipmentservicemodel_ShipmentService(arg, out)
	return out
}

func convert_shipmentservice_ShipmentService_shipmentservicemodel_ShipmentService(arg *shipmentservice.ShipmentService, out *shipmentservicemodel.ShipmentService) {
	out.ID = arg.ID                     // simple assign
	out.ConnectionID = arg.ConnectionID // simple assign
	out.Name = arg.Name                 // simple assign
	out.EdCode = arg.EdCode             // simple assign
	out.ServiceIDs = arg.ServiceIDs     // simple assign
	out.Description = arg.Description   // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.DeletedAt = arg.DeletedAt       // simple assign
	out.WLPartnerID = arg.WLPartnerID   // simple assign
	out.ImageURL = arg.ImageURL         // simple assign
	out.Status = arg.Status             // simple assign
}

func Convert_shipmentservice_ShipmentServices_shipmentservicemodel_ShipmentServices(args []*shipmentservice.ShipmentService) (outs []*shipmentservicemodel.ShipmentService) {
	if args == nil {
		return nil
	}
	tmps := make([]shipmentservicemodel.ShipmentService, len(args))
	outs = make([]*shipmentservicemodel.ShipmentService, len(args))
	for i := range tmps {
		outs[i] = Convert_shipmentservice_ShipmentService_shipmentservicemodel_ShipmentService(args[i], &tmps[i])
	}
	return outs
}

func Apply_shipmentservice_CreateShipmentServiceArgs_shipmentservice_ShipmentService(arg *shipmentservice.CreateShipmentServiceArgs, out *shipmentservice.ShipmentService) *shipmentservice.ShipmentService {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipmentservice.ShipmentService{}
	}
	apply_shipmentservice_CreateShipmentServiceArgs_shipmentservice_ShipmentService(arg, out)
	return out
}

func apply_shipmentservice_CreateShipmentServiceArgs_shipmentservice_ShipmentService(arg *shipmentservice.CreateShipmentServiceArgs, out *shipmentservice.ShipmentService) {
	out.ID = 0                          // zero value
	out.ConnectionID = arg.ConnectionID // simple assign
	out.Name = arg.Name                 // simple assign
	out.EdCode = arg.EdCode             // simple assign
	out.ServiceIDs = arg.ServiceIDs     // simple assign
	out.Description = arg.Description   // simple assign
	out.CreatedAt = time.Time{}         // zero value
	out.UpdatedAt = time.Time{}         // zero value
	out.DeletedAt = time.Time{}         // zero value
	out.WLPartnerID = 0                 // zero value
	out.ImageURL = arg.ImageURL         // simple assign
	out.Status = 0                      // zero value
}

func Apply_shipmentservice_UpdateShipmentServiceArgs_shipmentservice_ShipmentService(arg *shipmentservice.UpdateShipmentServiceArgs, out *shipmentservice.ShipmentService) *shipmentservice.ShipmentService {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shipmentservice.ShipmentService{}
	}
	apply_shipmentservice_UpdateShipmentServiceArgs_shipmentservice_ShipmentService(arg, out)
	return out
}

func apply_shipmentservice_UpdateShipmentServiceArgs_shipmentservice_ShipmentService(arg *shipmentservice.UpdateShipmentServiceArgs, out *shipmentservice.ShipmentService) {
	out.ID = arg.ID                           // simple assign
	out.ConnectionID = arg.ConnectionID       // simple assign
	out.Name = arg.Name                       // simple assign
	out.EdCode = arg.EdCode                   // simple assign
	out.ServiceIDs = arg.ServiceIDs           // simple assign
	out.Description = arg.Description         // simple assign
	out.CreatedAt = out.CreatedAt             // no change
	out.UpdatedAt = out.UpdatedAt             // no change
	out.DeletedAt = out.DeletedAt             // no change
	out.WLPartnerID = out.WLPartnerID         // no change
	out.ImageURL = arg.ImageURL               // simple assign
	out.Status = arg.Status.Apply(out.Status) // apply change
}
