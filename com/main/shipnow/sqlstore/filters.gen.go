// Generated by common/sq. DO NOT EDIT.

package sqlstore

import (
	"time"

	"etop.vn/api/top/types/etc/status3"
	"etop.vn/api/top/types/etc/status4"
	"etop.vn/api/top/types/etc/status5"
	m "etop.vn/backend/com/main/shipnow/model"
	"etop.vn/backend/pkg/common/sq"
	"etop.vn/capi/dot"
)

type ShipnowFulfillmentFilters struct{ prefix string }

func NewShipnowFulfillmentFilters(prefix string) ShipnowFulfillmentFilters {
	return ShipnowFulfillmentFilters{prefix}
}

func (ft *ShipnowFulfillmentFilters) Filter(pred string, args ...interface{}) sq.WriterTo {
	return sq.Filter(&ft.prefix, pred, args...)
}

func (ft ShipnowFulfillmentFilters) Prefix() string {
	return ft.prefix
}

func (ft *ShipnowFulfillmentFilters) ByID(ID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByIDPtr(ID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == nil,
		IsZero: ID != nil && (*ID) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShopID(ShopID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShopIDPtr(ShopID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shop_id",
		Value:  ShopID,
		IsNil:  ShopID == nil,
		IsZero: ShopID != nil && (*ShopID) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByPartnerID(PartnerID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "partner_id",
		Value:  PartnerID,
		IsNil:  PartnerID == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByPartnerIDPtr(PartnerID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "partner_id",
		Value:  PartnerID,
		IsNil:  PartnerID == nil,
		IsZero: PartnerID != nil && (*PartnerID) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByCarrier(Carrier m.Carrier) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "carrier",
		Value:  Carrier,
		IsNil:  Carrier == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByCarrierPtr(Carrier *m.Carrier) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "carrier",
		Value:  Carrier,
		IsNil:  Carrier == nil,
		IsZero: Carrier != nil && (*Carrier) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceCode(ShippingServiceCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_service_code",
		Value:  ShippingServiceCode,
		IsNil:  ShippingServiceCode == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceCodePtr(ShippingServiceCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_service_code",
		Value:  ShippingServiceCode,
		IsNil:  ShippingServiceCode == nil,
		IsZero: ShippingServiceCode != nil && (*ShippingServiceCode) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceFee(ShippingServiceFee int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_service_fee",
		Value:  ShippingServiceFee,
		IsNil:  ShippingServiceFee == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceFeePtr(ShippingServiceFee *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_service_fee",
		Value:  ShippingServiceFee,
		IsNil:  ShippingServiceFee == nil,
		IsZero: ShippingServiceFee != nil && (*ShippingServiceFee) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceName(ShippingServiceName string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_service_name",
		Value:  ShippingServiceName,
		IsNil:  ShippingServiceName == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceNamePtr(ShippingServiceName *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_service_name",
		Value:  ShippingServiceName,
		IsNil:  ShippingServiceName == nil,
		IsZero: ShippingServiceName != nil && (*ShippingServiceName) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceDescription(ShippingServiceDescription string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_service_description",
		Value:  ShippingServiceDescription,
		IsNil:  ShippingServiceDescription == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingServiceDescriptionPtr(ShippingServiceDescription *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_service_description",
		Value:  ShippingServiceDescription,
		IsNil:  ShippingServiceDescription == nil,
		IsZero: ShippingServiceDescription != nil && (*ShippingServiceDescription) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByChargeableWeight(ChargeableWeight int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "chargeable_weight",
		Value:  ChargeableWeight,
		IsNil:  ChargeableWeight == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByChargeableWeightPtr(ChargeableWeight *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "chargeable_weight",
		Value:  ChargeableWeight,
		IsNil:  ChargeableWeight == nil,
		IsZero: ChargeableWeight != nil && (*ChargeableWeight) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByGrossWeight(GrossWeight int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "gross_weight",
		Value:  GrossWeight,
		IsNil:  GrossWeight == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByGrossWeightPtr(GrossWeight *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "gross_weight",
		Value:  GrossWeight,
		IsNil:  GrossWeight == nil,
		IsZero: GrossWeight != nil && (*GrossWeight) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByBasketValue(BasketValue int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "basket_value",
		Value:  BasketValue,
		IsNil:  BasketValue == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByBasketValuePtr(BasketValue *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "basket_value",
		Value:  BasketValue,
		IsNil:  BasketValue == nil,
		IsZero: BasketValue != nil && (*BasketValue) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByCODAmount(CODAmount int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "cod_amount",
		Value:  CODAmount,
		IsNil:  CODAmount == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByCODAmountPtr(CODAmount *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "cod_amount",
		Value:  CODAmount,
		IsNil:  CODAmount == nil,
		IsZero: CODAmount != nil && (*CODAmount) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingNote(ShippingNote string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_note",
		Value:  ShippingNote,
		IsNil:  ShippingNote == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingNotePtr(ShippingNote *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_note",
		Value:  ShippingNote,
		IsNil:  ShippingNote == nil,
		IsZero: ShippingNote != nil && (*ShippingNote) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByRequestPickupAt(RequestPickupAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "request_pickup_at",
		Value:  RequestPickupAt,
		IsNil:  RequestPickupAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByRequestPickupAtPtr(RequestPickupAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "request_pickup_at",
		Value:  RequestPickupAt,
		IsNil:  RequestPickupAt == nil,
		IsZero: RequestPickupAt != nil && (*RequestPickupAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByCancelReason(CancelReason string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "cancel_reason",
		Value:  CancelReason,
		IsNil:  CancelReason == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByCancelReasonPtr(CancelReason *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "cancel_reason",
		Value:  CancelReason,
		IsNil:  CancelReason == nil,
		IsZero: CancelReason != nil && (*CancelReason) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByStatus(Status status5.Status) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "status",
		Value:  Status,
		IsNil:  Status == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByStatusPtr(Status *status5.Status) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "status",
		Value:  Status,
		IsNil:  Status == nil,
		IsZero: Status != nil && (*Status) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByConfirmStatus(ConfirmStatus status3.Status) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "confirm_status",
		Value:  ConfirmStatus,
		IsNil:  ConfirmStatus == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByConfirmStatusPtr(ConfirmStatus *status3.Status) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "confirm_status",
		Value:  ConfirmStatus,
		IsNil:  ConfirmStatus == nil,
		IsZero: ConfirmStatus != nil && (*ConfirmStatus) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingStatus(ShippingStatus status5.Status) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_status",
		Value:  ShippingStatus,
		IsNil:  ShippingStatus == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingStatusPtr(ShippingStatus *status5.Status) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_status",
		Value:  ShippingStatus,
		IsNil:  ShippingStatus == nil,
		IsZero: ShippingStatus != nil && (*ShippingStatus) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByEtopPaymentStatus(EtopPaymentStatus status4.Status) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "etop_payment_status",
		Value:  EtopPaymentStatus,
		IsNil:  EtopPaymentStatus == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByEtopPaymentStatusPtr(EtopPaymentStatus *status4.Status) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "etop_payment_status",
		Value:  EtopPaymentStatus,
		IsNil:  EtopPaymentStatus == nil,
		IsZero: EtopPaymentStatus != nil && (*EtopPaymentStatus) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingState(ShippingState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingStatePtr(ShippingState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == nil,
		IsZero: ShippingState != nil && (*ShippingState) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCode(ShippingCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCodePtr(ShippingCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == nil,
		IsZero: ShippingCode != nil && (*ShippingCode) == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByTotalFee(TotalFee int) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "total_fee",
		Value:  TotalFee,
		IsNil:  TotalFee == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByTotalFeePtr(TotalFee *int) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "total_fee",
		Value:  TotalFee,
		IsNil:  TotalFee == nil,
		IsZero: TotalFee != nil && (*TotalFee) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCreatedAt(ShippingCreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_created_at",
		Value:  ShippingCreatedAt,
		IsNil:  ShippingCreatedAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCreatedAtPtr(ShippingCreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_created_at",
		Value:  ShippingCreatedAt,
		IsNil:  ShippingCreatedAt == nil,
		IsZero: ShippingCreatedAt != nil && (*ShippingCreatedAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingPickingAt(ShippingPickingAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_picking_at",
		Value:  ShippingPickingAt,
		IsNil:  ShippingPickingAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingPickingAtPtr(ShippingPickingAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_picking_at",
		Value:  ShippingPickingAt,
		IsNil:  ShippingPickingAt == nil,
		IsZero: ShippingPickingAt != nil && (*ShippingPickingAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingDeliveringAt(ShippingDeliveringAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_delivering_at",
		Value:  ShippingDeliveringAt,
		IsNil:  ShippingDeliveringAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingDeliveringAtPtr(ShippingDeliveringAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_delivering_at",
		Value:  ShippingDeliveringAt,
		IsNil:  ShippingDeliveringAt == nil,
		IsZero: ShippingDeliveringAt != nil && (*ShippingDeliveringAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingDeliveredAt(ShippingDeliveredAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_delivered_at",
		Value:  ShippingDeliveredAt,
		IsNil:  ShippingDeliveredAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingDeliveredAtPtr(ShippingDeliveredAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_delivered_at",
		Value:  ShippingDeliveredAt,
		IsNil:  ShippingDeliveredAt == nil,
		IsZero: ShippingDeliveredAt != nil && (*ShippingDeliveredAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCancelledAt(ShippingCancelledAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_cancelled_at",
		Value:  ShippingCancelledAt,
		IsNil:  ShippingCancelledAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingCancelledAtPtr(ShippingCancelledAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_cancelled_at",
		Value:  ShippingCancelledAt,
		IsNil:  ShippingCancelledAt == nil,
		IsZero: ShippingCancelledAt != nil && (*ShippingCancelledAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) BySyncStatus(SyncStatus status4.Status) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "sync_status",
		Value:  SyncStatus,
		IsNil:  SyncStatus == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) BySyncStatusPtr(SyncStatus *status4.Status) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "sync_status",
		Value:  SyncStatus,
		IsNil:  SyncStatus == nil,
		IsZero: SyncStatus != nil && (*SyncStatus) == 0,
	}
}

func (ft *ShipnowFulfillmentFilters) ByCreatedAt(CreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByCreatedAtPtr(CreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt == nil,
		IsZero: CreatedAt != nil && (*CreatedAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByUpdatedAt(UpdatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByUpdatedAtPtr(UpdatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt == nil,
		IsZero: UpdatedAt != nil && (*UpdatedAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByCODEtopTransferedAt(CODEtopTransferedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "cod_etop_transfered_at",
		Value:  CODEtopTransferedAt,
		IsNil:  CODEtopTransferedAt.IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByCODEtopTransferedAtPtr(CODEtopTransferedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "cod_etop_transfered_at",
		Value:  CODEtopTransferedAt,
		IsNil:  CODEtopTransferedAt == nil,
		IsZero: CODEtopTransferedAt != nil && (*CODEtopTransferedAt).IsZero(),
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingSharedLink(ShippingSharedLink string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_shared_link",
		Value:  ShippingSharedLink,
		IsNil:  ShippingSharedLink == "",
	}
}

func (ft *ShipnowFulfillmentFilters) ByShippingSharedLinkPtr(ShippingSharedLink *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_shared_link",
		Value:  ShippingSharedLink,
		IsNil:  ShippingSharedLink == nil,
		IsZero: ShippingSharedLink != nil && (*ShippingSharedLink) == "",
	}
}
