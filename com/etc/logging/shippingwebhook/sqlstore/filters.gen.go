// +build !generator

// Code generated by generator sqlgen. DO NOT EDIT.

package sqlstore

import (
	time "time"

	sq "o.o/backend/pkg/common/sql/sq"
	dot "o.o/capi/dot"
)

type ShippingProviderWebhookFilters struct{ prefix string }

func NewShippingProviderWebhookFilters(prefix string) ShippingProviderWebhookFilters {
	return ShippingProviderWebhookFilters{prefix}
}

func (ft *ShippingProviderWebhookFilters) Filter(pred string, args ...interface{}) sq.WriterTo {
	return sq.Filter(&ft.prefix, pred, args...)
}

func (ft ShippingProviderWebhookFilters) Prefix() string {
	return ft.prefix
}

func (ft *ShippingProviderWebhookFilters) ByID(ID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == 0,
	}
}

func (ft *ShippingProviderWebhookFilters) ByIDPtr(ID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "id",
		Value:  ID,
		IsNil:  ID == nil,
		IsZero: ID != nil && (*ID) == 0,
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingProvider(ShippingProvider string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_provider",
		Value:  ShippingProvider,
		IsNil:  ShippingProvider == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingProviderPtr(ShippingProvider *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_provider",
		Value:  ShippingProvider,
		IsNil:  ShippingProvider == nil,
		IsZero: ShippingProvider != nil && (*ShippingProvider) == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingCode(ShippingCode string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingCodePtr(ShippingCode *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_code",
		Value:  ShippingCode,
		IsNil:  ShippingCode == nil,
		IsZero: ShippingCode != nil && (*ShippingCode) == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingState(ShippingState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByShippingStatePtr(ShippingState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "shipping_state",
		Value:  ShippingState,
		IsNil:  ShippingState == nil,
		IsZero: ShippingState != nil && (*ShippingState) == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByExternalShippingState(ExternalShippingState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_state",
		Value:  ExternalShippingState,
		IsNil:  ExternalShippingState == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByExternalShippingStatePtr(ExternalShippingState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_state",
		Value:  ExternalShippingState,
		IsNil:  ExternalShippingState == nil,
		IsZero: ExternalShippingState != nil && (*ExternalShippingState) == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByExternalShippingSubState(ExternalShippingSubState string) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "external_shipping_sub_state",
		Value:  ExternalShippingSubState,
		IsNil:  ExternalShippingSubState == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByExternalShippingSubStatePtr(ExternalShippingSubState *string) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "external_shipping_sub_state",
		Value:  ExternalShippingSubState,
		IsNil:  ExternalShippingSubState == nil,
		IsZero: ExternalShippingSubState != nil && (*ExternalShippingSubState) == "",
	}
}

func (ft *ShippingProviderWebhookFilters) ByCreatedAt(CreatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt.IsZero(),
	}
}

func (ft *ShippingProviderWebhookFilters) ByCreatedAtPtr(CreatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "created_at",
		Value:  CreatedAt,
		IsNil:  CreatedAt == nil,
		IsZero: CreatedAt != nil && (*CreatedAt).IsZero(),
	}
}

func (ft *ShippingProviderWebhookFilters) ByUpdatedAt(UpdatedAt time.Time) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt.IsZero(),
	}
}

func (ft *ShippingProviderWebhookFilters) ByUpdatedAtPtr(UpdatedAt *time.Time) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "updated_at",
		Value:  UpdatedAt,
		IsNil:  UpdatedAt == nil,
		IsZero: UpdatedAt != nil && (*UpdatedAt).IsZero(),
	}
}

func (ft *ShippingProviderWebhookFilters) ByConnectionID(ConnectionID dot.ID) *sq.ColumnFilter {
	return &sq.ColumnFilter{
		Prefix: &ft.prefix,
		Column: "connection_id",
		Value:  ConnectionID,
		IsNil:  ConnectionID == 0,
	}
}

func (ft *ShippingProviderWebhookFilters) ByConnectionIDPtr(ConnectionID *dot.ID) *sq.ColumnFilterPtr {
	return &sq.ColumnFilterPtr{
		Prefix: &ft.prefix,
		Column: "connection_id",
		Value:  ConnectionID,
		IsNil:  ConnectionID == nil,
		IsZero: ConnectionID != nil && (*ConnectionID) == 0,
	}
}
