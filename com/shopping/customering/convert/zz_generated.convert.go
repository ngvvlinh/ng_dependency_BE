// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	customering "etop.vn/api/shopping/customering"
	customeringmodel "etop.vn/backend/com/shopping/customering/model"
)

//-- convert etop.vn/api/shopping/customering.ShopCustomer --//

func Convert_customering_ShopCustomer_customeringmodel_ShopCustomer(in *customering.ShopCustomer, out *customeringmodel.ShopCustomer) *customeringmodel.ShopCustomer {
	return ShopCustomerDB(in)
}

func convert_customering_ShopCustomer_customeringmodel_ShopCustomer(in *customering.ShopCustomer, out *customeringmodel.ShopCustomer) {
	out.ID = in.ID               // simple assign
	out.ShopID = in.ShopID       // simple assign
	out.Code = in.Code           // simple assign
	out.FullName = in.FullName   // simple assign
	out.Gender = in.Gender       // simple assign
	out.Type = in.Type           // simple assign
	out.Birthday = in.Birthday   // simple assign
	out.Note = in.Note           // simple assign
	out.Phone = in.Phone         // simple assign
	out.Email = in.Email         // simple assign
	out.Status = in.Status       // simple assign
	out.CreatedAt = in.CreatedAt // simple assign
	out.UpdatedAt = in.UpdatedAt // simple assign
	out.DeletedAt = time.Time{}  // zero value
}

func Convert_customering_ShopCustomers_customeringmodel_ShopCustomers(ins []*customering.ShopCustomer) (outs []*customeringmodel.ShopCustomer) {
	tmps := make([]customeringmodel.ShopCustomer, len(ins))
	outs = make([]*customeringmodel.ShopCustomer, len(ins))
	for i := range tmps {
		outs[i] = Convert_customering_ShopCustomer_customeringmodel_ShopCustomer(ins[i], &tmps[i])
	}
	return outs
}

func Convert_customeringmodel_ShopCustomer_customering_ShopCustomer(in *customeringmodel.ShopCustomer, out *customering.ShopCustomer) *customering.ShopCustomer {
	return ShopCustomer(in)
}

func convert_customeringmodel_ShopCustomer_customering_ShopCustomer(in *customeringmodel.ShopCustomer, out *customering.ShopCustomer) {
	out.ID = in.ID               // simple assign
	out.ShopID = in.ShopID       // simple assign
	out.Code = in.Code           // simple assign
	out.FullName = in.FullName   // simple assign
	out.Gender = in.Gender       // simple assign
	out.Type = in.Type           // simple assign
	out.Birthday = in.Birthday   // simple assign
	out.Note = in.Note           // simple assign
	out.Phone = in.Phone         // simple assign
	out.Email = in.Email         // simple assign
	out.Status = in.Status       // simple assign
	out.CreatedAt = in.CreatedAt // simple assign
	out.UpdatedAt = in.UpdatedAt // simple assign
}

func Convert_customeringmodel_ShopCustomers_customering_ShopCustomers(ins []*customeringmodel.ShopCustomer) (outs []*customering.ShopCustomer) {
	tmps := make([]customering.ShopCustomer, len(ins))
	outs = make([]*customering.ShopCustomer, len(ins))
	for i := range tmps {
		outs[i] = Convert_customeringmodel_ShopCustomer_customering_ShopCustomer(ins[i], &tmps[i])
	}
	return outs
}

func apply_customering_CreateCustomerArgs(arg *customering.CreateCustomerArgs, out *customering.ShopCustomer) {
	out.ID = 0                  // zero value
	out.ShopID = arg.ShopID     // simple assign
	out.Code = arg.Code         // simple assign
	out.FullName = arg.FullName // simple assign
	out.Gender = arg.Gender     // simple assign
	out.Type = arg.Type         // simple assign
	out.Birthday = arg.Birthday // simple assign
	out.Note = arg.Note         // simple assign
	out.Phone = arg.Phone       // simple assign
	out.Email = arg.Email       // simple assign
	out.Status = 0              // zero value
	out.CreatedAt = time.Time{} // zero value
	out.UpdatedAt = time.Time{} // zero value
}

func apply_customering_UpdateCustomerArgs(arg *customering.UpdateCustomerArgs, out *customering.ShopCustomer) {
	out.ID = out.ID                                 // identifier
	out.ShopID = out.ShopID                         // identifier
	out.Code = arg.Code.Apply(out.Code)             // apply change
	out.FullName = arg.FullName.Apply(out.FullName) // apply change
	out.Gender = arg.Gender.Apply(out.Gender)       // apply change
	out.Type = arg.Type.Apply(out.Type)             // apply change
	out.Birthday = arg.Birthday.Apply(out.Birthday) // apply change
	out.Note = arg.Note.Apply(out.Note)             // apply change
	out.Phone = arg.Phone.Apply(out.Phone)          // apply change
	out.Email = arg.Email.Apply(out.Email)          // apply change
	out.Status = out.Status                         // no change
	out.CreatedAt = out.CreatedAt                   // no change
	out.UpdatedAt = out.UpdatedAt                   // no change
}

//-- convert etop.vn/api/shopping/customering.ShopTrader --//

func Convert_customering_ShopTrader_customeringmodel_ShopTrader(in *customering.ShopTrader, out *customeringmodel.ShopTrader) *customeringmodel.ShopTrader {
	if in == nil {
		return nil
	}
	if out == nil {
		out = &customeringmodel.ShopTrader{}
	}
	convert_customering_ShopTrader_customeringmodel_ShopTrader(in, out)
	return out
}

func convert_customering_ShopTrader_customeringmodel_ShopTrader(in *customering.ShopTrader, out *customeringmodel.ShopTrader) {
	out.ID = in.ID         // simple assign
	out.ShopID = in.ShopID // simple assign
}

func Convert_customering_ShopTraders_customeringmodel_ShopTraders(ins []*customering.ShopTrader) (outs []*customeringmodel.ShopTrader) {
	tmps := make([]customeringmodel.ShopTrader, len(ins))
	outs = make([]*customeringmodel.ShopTrader, len(ins))
	for i := range tmps {
		outs[i] = Convert_customering_ShopTrader_customeringmodel_ShopTrader(ins[i], &tmps[i])
	}
	return outs
}

func Convert_customeringmodel_ShopTrader_customering_ShopTrader(in *customeringmodel.ShopTrader, out *customering.ShopTrader) *customering.ShopTrader {
	if in == nil {
		return nil
	}
	if out == nil {
		out = &customering.ShopTrader{}
	}
	convert_customeringmodel_ShopTrader_customering_ShopTrader(in, out)
	return out
}

func convert_customeringmodel_ShopTrader_customering_ShopTrader(in *customeringmodel.ShopTrader, out *customering.ShopTrader) {
	out.ID = in.ID         // simple assign
	out.ShopID = in.ShopID // simple assign
}

func Convert_customeringmodel_ShopTraders_customering_ShopTraders(ins []*customeringmodel.ShopTrader) (outs []*customering.ShopTrader) {
	tmps := make([]customering.ShopTrader, len(ins))
	outs = make([]*customering.ShopTrader, len(ins))
	for i := range tmps {
		outs[i] = Convert_customeringmodel_ShopTrader_customering_ShopTrader(ins[i], &tmps[i])
	}
	return outs
}

//-- convert etop.vn/api/shopping/customering.ShopVendor --//

func Convert_customering_ShopVendor_customeringmodel_ShopVendor(in *customering.ShopVendor, out *customeringmodel.ShopVendor) *customeringmodel.ShopVendor {
	if in == nil {
		return nil
	}
	if out == nil {
		out = &customeringmodel.ShopVendor{}
	}
	convert_customering_ShopVendor_customeringmodel_ShopVendor(in, out)
	return out
}

func convert_customering_ShopVendor_customeringmodel_ShopVendor(in *customering.ShopVendor, out *customeringmodel.ShopVendor) {
	out.ID = in.ID               // simple assign
	out.ShopID = in.ShopID       // simple assign
	out.Name = in.Name           // simple assign
	out.Note = in.Note           // simple assign
	out.Status = in.Status       // simple assign
	out.CreatedAt = in.CreatedAt // simple assign
	out.UpdatedAt = in.UpdatedAt // simple assign
	out.DeletedAt = time.Time{}  // zero value
}

func Convert_customering_ShopVendors_customeringmodel_ShopVendors(ins []*customering.ShopVendor) (outs []*customeringmodel.ShopVendor) {
	tmps := make([]customeringmodel.ShopVendor, len(ins))
	outs = make([]*customeringmodel.ShopVendor, len(ins))
	for i := range tmps {
		outs[i] = Convert_customering_ShopVendor_customeringmodel_ShopVendor(ins[i], &tmps[i])
	}
	return outs
}

func Convert_customeringmodel_ShopVendor_customering_ShopVendor(in *customeringmodel.ShopVendor, out *customering.ShopVendor) *customering.ShopVendor {
	if in == nil {
		return nil
	}
	if out == nil {
		out = &customering.ShopVendor{}
	}
	convert_customeringmodel_ShopVendor_customering_ShopVendor(in, out)
	return out
}

func convert_customeringmodel_ShopVendor_customering_ShopVendor(in *customeringmodel.ShopVendor, out *customering.ShopVendor) {
	out.ID = in.ID               // simple assign
	out.ShopID = in.ShopID       // simple assign
	out.Name = in.Name           // simple assign
	out.Note = in.Note           // simple assign
	out.Status = in.Status       // simple assign
	out.CreatedAt = in.CreatedAt // simple assign
	out.UpdatedAt = in.UpdatedAt // simple assign
}

func Convert_customeringmodel_ShopVendors_customering_ShopVendors(ins []*customeringmodel.ShopVendor) (outs []*customering.ShopVendor) {
	tmps := make([]customering.ShopVendor, len(ins))
	outs = make([]*customering.ShopVendor, len(ins))
	for i := range tmps {
		outs[i] = Convert_customeringmodel_ShopVendor_customering_ShopVendor(ins[i], &tmps[i])
	}
	return outs
}
