// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	setting "o.o/api/shopping/setting"
	settingmodel "o.o/backend/com/shopping/setting/model"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*settingmodel.ShopSetting)(nil), (*setting.ShopSetting)(nil), func(arg, out interface{}) error {
		Convert_settingmodel_ShopSetting_setting_ShopSetting(arg.(*settingmodel.ShopSetting), out.(*setting.ShopSetting))
		return nil
	})
	s.Register(([]*settingmodel.ShopSetting)(nil), (*[]*setting.ShopSetting)(nil), func(arg, out interface{}) error {
		out0 := Convert_settingmodel_ShopSettings_setting_ShopSettings(arg.([]*settingmodel.ShopSetting))
		*out.(*[]*setting.ShopSetting) = out0
		return nil
	})
	s.Register((*setting.ShopSetting)(nil), (*settingmodel.ShopSetting)(nil), func(arg, out interface{}) error {
		Convert_setting_ShopSetting_settingmodel_ShopSetting(arg.(*setting.ShopSetting), out.(*settingmodel.ShopSetting))
		return nil
	})
	s.Register(([]*setting.ShopSetting)(nil), (*[]*settingmodel.ShopSetting)(nil), func(arg, out interface{}) error {
		out0 := Convert_setting_ShopSettings_settingmodel_ShopSettings(arg.([]*setting.ShopSetting))
		*out.(*[]*settingmodel.ShopSetting) = out0
		return nil
	})
	s.Register((*setting.InsertDirectShopSettingArgs)(nil), (*setting.ShopSetting)(nil), func(arg, out interface{}) error {
		Apply_setting_InsertDirectShopSettingArgs_setting_ShopSetting(arg.(*setting.InsertDirectShopSettingArgs), out.(*setting.ShopSetting))
		return nil
	})
	s.Register((*setting.UpdateDirectShopSettingArgs)(nil), (*setting.ShopSetting)(nil), func(arg, out interface{}) error {
		Apply_setting_UpdateDirectShopSettingArgs_setting_ShopSetting(arg.(*setting.UpdateDirectShopSettingArgs), out.(*setting.ShopSetting))
		return nil
	})
	s.Register((*setting.UpdateShopSettingArgs)(nil), (*setting.ShopSetting)(nil), func(arg, out interface{}) error {
		Apply_setting_UpdateShopSettingArgs_setting_ShopSetting(arg.(*setting.UpdateShopSettingArgs), out.(*setting.ShopSetting))
		return nil
	})
}

//-- convert o.o/api/shopping/setting.ShopSetting --//

func Convert_settingmodel_ShopSetting_setting_ShopSetting(arg *settingmodel.ShopSetting, out *setting.ShopSetting) *setting.ShopSetting {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &setting.ShopSetting{}
	}
	convert_settingmodel_ShopSetting_setting_ShopSetting(arg, out)
	return out
}

func convert_settingmodel_ShopSetting_setting_ShopSetting(arg *settingmodel.ShopSetting, out *setting.ShopSetting) {
	out.ShopID = arg.ShopID                                         // simple assign
	out.ReturnAddress = nil                                         // zero value
	out.ReturnAddressID = arg.ReturnAddressID                       // simple assign
	out.PaymentTypeID = arg.PaymentTypeID                           // simple assign
	out.TryOn = arg.TryOn                                           // simple assign
	out.ShippingNote = arg.ShippingNote                             // simple assign
	out.Weight = arg.Weight                                         // simple assign
	out.HideAllComments = arg.HideAllComments                       // simple assign
	out.CreatedAt = arg.CreatedAt                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                   // simple assign
	out.AllowConnectDirectShipment = arg.AllowConnectDirectShipment // simple assign
}

func Convert_settingmodel_ShopSettings_setting_ShopSettings(args []*settingmodel.ShopSetting) (outs []*setting.ShopSetting) {
	if args == nil {
		return nil
	}
	tmps := make([]setting.ShopSetting, len(args))
	outs = make([]*setting.ShopSetting, len(args))
	for i := range tmps {
		outs[i] = Convert_settingmodel_ShopSetting_setting_ShopSetting(args[i], &tmps[i])
	}
	return outs
}

func Convert_setting_ShopSetting_settingmodel_ShopSetting(arg *setting.ShopSetting, out *settingmodel.ShopSetting) *settingmodel.ShopSetting {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &settingmodel.ShopSetting{}
	}
	convert_setting_ShopSetting_settingmodel_ShopSetting(arg, out)
	return out
}

func convert_setting_ShopSetting_settingmodel_ShopSetting(arg *setting.ShopSetting, out *settingmodel.ShopSetting) {
	out.ShopID = arg.ShopID                                         // simple assign
	out.PaymentTypeID = arg.PaymentTypeID                           // simple assign
	out.ReturnAddressID = arg.ReturnAddressID                       // simple assign
	out.TryOn = arg.TryOn                                           // simple assign
	out.ShippingNote = arg.ShippingNote                             // simple assign
	out.Weight = arg.Weight                                         // simple assign
	out.HideAllComments = arg.HideAllComments                       // simple assign
	out.CreatedAt = arg.CreatedAt                                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                                   // simple assign
	out.AllowConnectDirectShipment = arg.AllowConnectDirectShipment // simple assign
}

func Convert_setting_ShopSettings_settingmodel_ShopSettings(args []*setting.ShopSetting) (outs []*settingmodel.ShopSetting) {
	if args == nil {
		return nil
	}
	tmps := make([]settingmodel.ShopSetting, len(args))
	outs = make([]*settingmodel.ShopSetting, len(args))
	for i := range tmps {
		outs[i] = Convert_setting_ShopSetting_settingmodel_ShopSetting(args[i], &tmps[i])
	}
	return outs
}

func Apply_setting_InsertDirectShopSettingArgs_setting_ShopSetting(arg *setting.InsertDirectShopSettingArgs, out *setting.ShopSetting) *setting.ShopSetting {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &setting.ShopSetting{}
	}
	apply_setting_InsertDirectShopSettingArgs_setting_ShopSetting(arg, out)
	return out
}

func apply_setting_InsertDirectShopSettingArgs_setting_ShopSetting(arg *setting.InsertDirectShopSettingArgs, out *setting.ShopSetting) {
	out.ShopID = arg.ShopID                                         // simple assign
	out.ReturnAddress = out.ReturnAddress                           // no change
	out.ReturnAddressID = out.ReturnAddressID                       // no change
	out.PaymentTypeID = out.PaymentTypeID                           // no change
	out.TryOn = out.TryOn                                           // no change
	out.ShippingNote = out.ShippingNote                             // no change
	out.Weight = out.Weight                                         // no change
	out.HideAllComments = out.HideAllComments                       // no change
	out.CreatedAt = out.CreatedAt                                   // no change
	out.UpdatedAt = out.UpdatedAt                                   // no change
	out.AllowConnectDirectShipment = arg.AllowConnectDirectShipment // simple assign
}

func Apply_setting_UpdateDirectShopSettingArgs_setting_ShopSetting(arg *setting.UpdateDirectShopSettingArgs, out *setting.ShopSetting) *setting.ShopSetting {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &setting.ShopSetting{}
	}
	apply_setting_UpdateDirectShopSettingArgs_setting_ShopSetting(arg, out)
	return out
}

func apply_setting_UpdateDirectShopSettingArgs_setting_ShopSetting(arg *setting.UpdateDirectShopSettingArgs, out *setting.ShopSetting) {
	out.ShopID = arg.ShopID                                         // simple assign
	out.ReturnAddress = out.ReturnAddress                           // no change
	out.ReturnAddressID = out.ReturnAddressID                       // no change
	out.PaymentTypeID = out.PaymentTypeID                           // no change
	out.TryOn = out.TryOn                                           // no change
	out.ShippingNote = out.ShippingNote                             // no change
	out.Weight = out.Weight                                         // no change
	out.HideAllComments = out.HideAllComments                       // no change
	out.CreatedAt = out.CreatedAt                                   // no change
	out.UpdatedAt = out.UpdatedAt                                   // no change
	out.AllowConnectDirectShipment = arg.AllowConnectDirectShipment // simple assign
}

func Apply_setting_UpdateShopSettingArgs_setting_ShopSetting(arg *setting.UpdateShopSettingArgs, out *setting.ShopSetting) *setting.ShopSetting {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &setting.ShopSetting{}
	}
	apply_setting_UpdateShopSettingArgs_setting_ShopSetting(arg, out)
	return out
}

func apply_setting_UpdateShopSettingArgs_setting_ShopSetting(arg *setting.UpdateShopSettingArgs, out *setting.ShopSetting) {
	out.ShopID = arg.ShopID                                         // simple assign
	out.ReturnAddress = arg.ReturnAddress                           // simple assign
	out.ReturnAddressID = out.ReturnAddressID                       // no change
	out.PaymentTypeID = arg.PaymentTypeID.Apply(out.PaymentTypeID)  // apply change
	out.TryOn = arg.TryOn.Apply(out.TryOn)                          // apply change
	out.ShippingNote = arg.ShippingNote.Apply(out.ShippingNote)     // apply change
	out.Weight = arg.Weight.Apply(out.Weight)                       // apply change
	out.HideAllComments = arg.HideAllComments                       // simple assign
	out.CreatedAt = out.CreatedAt                                   // no change
	out.UpdatedAt = out.UpdatedAt                                   // no change
	out.AllowConnectDirectShipment = out.AllowConnectDirectShipment // no change
}
