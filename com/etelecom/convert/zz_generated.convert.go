// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	etelecom "o.o/api/etelecom"
	etelecommodel "o.o/backend/com/etelecom/model"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*etelecommodel.Extension)(nil), (*etelecom.Extension)(nil), func(arg, out interface{}) error {
		Convert_etelecommodel_Extension_etelecom_Extension(arg.(*etelecommodel.Extension), out.(*etelecom.Extension))
		return nil
	})
	s.Register(([]*etelecommodel.Extension)(nil), (*[]*etelecom.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecommodel_Extensions_etelecom_Extensions(arg.([]*etelecommodel.Extension))
		*out.(*[]*etelecom.Extension) = out0
		return nil
	})
	s.Register((*etelecom.Extension)(nil), (*etelecommodel.Extension)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Extension_etelecommodel_Extension(arg.(*etelecom.Extension), out.(*etelecommodel.Extension))
		return nil
	})
	s.Register(([]*etelecom.Extension)(nil), (*[]*etelecommodel.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Extensions_etelecommodel_Extensions(arg.([]*etelecom.Extension))
		*out.(*[]*etelecommodel.Extension) = out0
		return nil
	})
	s.Register((*etelecom.CreateExtensionArgs)(nil), (*etelecom.Extension)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateExtensionArgs_etelecom_Extension(arg.(*etelecom.CreateExtensionArgs), out.(*etelecom.Extension))
		return nil
	})
	s.Register((*etelecommodel.ExtensionExternalData)(nil), (*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(arg.(*etelecommodel.ExtensionExternalData), out.(*etelecom.ExtensionExternalData))
		return nil
	})
	s.Register(([]*etelecommodel.ExtensionExternalData)(nil), (*[]*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecommodel_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(arg.([]*etelecommodel.ExtensionExternalData))
		*out.(*[]*etelecom.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*etelecom.ExtensionExternalData)(nil), (*etelecommodel.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(arg.(*etelecom.ExtensionExternalData), out.(*etelecommodel.ExtensionExternalData))
		return nil
	})
	s.Register(([]*etelecom.ExtensionExternalData)(nil), (*[]*etelecommodel.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_ExtensionExternalDatas_etelecommodel_ExtensionExternalDatas(arg.([]*etelecom.ExtensionExternalData))
		*out.(*[]*etelecommodel.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*etelecommodel.Hotline)(nil), (*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		Convert_etelecommodel_Hotline_etelecom_Hotline(arg.(*etelecommodel.Hotline), out.(*etelecom.Hotline))
		return nil
	})
	s.Register(([]*etelecommodel.Hotline)(nil), (*[]*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecommodel_Hotlines_etelecom_Hotlines(arg.([]*etelecommodel.Hotline))
		*out.(*[]*etelecom.Hotline) = out0
		return nil
	})
	s.Register((*etelecom.Hotline)(nil), (*etelecommodel.Hotline)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Hotline_etelecommodel_Hotline(arg.(*etelecom.Hotline), out.(*etelecommodel.Hotline))
		return nil
	})
	s.Register(([]*etelecom.Hotline)(nil), (*[]*etelecommodel.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Hotlines_etelecommodel_Hotlines(arg.([]*etelecom.Hotline))
		*out.(*[]*etelecommodel.Hotline) = out0
		return nil
	})
	s.Register((*etelecommodel.Summary)(nil), (*etelecom.Summary)(nil), func(arg, out interface{}) error {
		Convert_etelecommodel_Summary_etelecom_Summary(arg.(*etelecommodel.Summary), out.(*etelecom.Summary))
		return nil
	})
	s.Register(([]*etelecommodel.Summary)(nil), (*[]*etelecom.Summary)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecommodel_Summaries_etelecom_Summaries(arg.([]*etelecommodel.Summary))
		*out.(*[]*etelecom.Summary) = out0
		return nil
	})
	s.Register((*etelecom.Summary)(nil), (*etelecommodel.Summary)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Summary_etelecommodel_Summary(arg.(*etelecom.Summary), out.(*etelecommodel.Summary))
		return nil
	})
	s.Register(([]*etelecom.Summary)(nil), (*[]*etelecommodel.Summary)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Summaries_etelecommodel_Summaries(arg.([]*etelecom.Summary))
		*out.(*[]*etelecommodel.Summary) = out0
		return nil
	})
}

//-- convert o.o/api/etelecom.Extension --//

func Convert_etelecommodel_Extension_etelecom_Extension(arg *etelecommodel.Extension, out *etelecom.Extension) *etelecom.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Extension{}
	}
	convert_etelecommodel_Extension_etelecom_Extension(arg, out)
	return out
}

func convert_etelecommodel_Extension_etelecom_Extension(arg *etelecommodel.Extension, out *etelecom.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.ExternalData = Convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(arg.ExternalData, nil)
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = arg.DeletedAt               // simple assign
}

func Convert_etelecommodel_Extensions_etelecom_Extensions(args []*etelecommodel.Extension) (outs []*etelecom.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Extension, len(args))
	outs = make([]*etelecom.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecommodel_Extension_etelecom_Extension(args[i], &tmps[i])
	}
	return outs
}

func Convert_etelecom_Extension_etelecommodel_Extension(arg *etelecom.Extension, out *etelecommodel.Extension) *etelecommodel.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecommodel.Extension{}
	}
	convert_etelecom_Extension_etelecommodel_Extension(arg, out)
	return out
}

func convert_etelecom_Extension_etelecommodel_Extension(arg *etelecom.Extension, out *etelecommodel.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.ExternalData = Convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(arg.ExternalData, nil)
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = arg.DeletedAt               // simple assign
}

func Convert_etelecom_Extensions_etelecommodel_Extensions(args []*etelecom.Extension) (outs []*etelecommodel.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecommodel.Extension, len(args))
	outs = make([]*etelecommodel.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Extension_etelecommodel_Extension(args[i], &tmps[i])
	}
	return outs
}

func Apply_etelecom_CreateExtensionArgs_etelecom_Extension(arg *etelecom.CreateExtensionArgs, out *etelecom.Extension) *etelecom.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Extension{}
	}
	apply_etelecom_CreateExtensionArgs_etelecom_Extension(arg, out)
	return out
}

func apply_etelecom_CreateExtensionArgs_etelecom_Extension(arg *etelecom.CreateExtensionArgs, out *etelecom.Extension) {
	out.ID = 0                                    // zero value
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.HotlineID = 0                             // zero value
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.ExternalData = nil                        // zero value
	out.ConnectionID = arg.ConnectionID           // simple assign
	out.ConnectionMethod = 0                      // zero value
	out.CreatedAt = time.Time{}                   // zero value
	out.UpdatedAt = time.Time{}                   // zero value
	out.DeletedAt = time.Time{}                   // zero value
}

//-- convert o.o/api/etelecom.ExtensionExternalData --//

func Convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(arg *etelecommodel.ExtensionExternalData, out *etelecom.ExtensionExternalData) *etelecom.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.ExtensionExternalData{}
	}
	convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(arg, out)
	return out
}

func convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(arg *etelecommodel.ExtensionExternalData, out *etelecom.ExtensionExternalData) {
	out.ID = arg.ID // simple assign
}

func Convert_etelecommodel_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(args []*etelecommodel.ExtensionExternalData) (outs []*etelecom.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.ExtensionExternalData, len(args))
	outs = make([]*etelecom.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecommodel_ExtensionExternalData_etelecom_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

func Convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *etelecommodel.ExtensionExternalData) *etelecommodel.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecommodel.ExtensionExternalData{}
	}
	convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(arg, out)
	return out
}

func convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *etelecommodel.ExtensionExternalData) {
	out.ID = arg.ID // simple assign
}

func Convert_etelecom_ExtensionExternalDatas_etelecommodel_ExtensionExternalDatas(args []*etelecom.ExtensionExternalData) (outs []*etelecommodel.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecommodel.ExtensionExternalData, len(args))
	outs = make([]*etelecommodel.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_ExtensionExternalData_etelecommodel_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/etelecom.Hotline --//

func Convert_etelecommodel_Hotline_etelecom_Hotline(arg *etelecommodel.Hotline, out *etelecom.Hotline) *etelecom.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Hotline{}
	}
	convert_etelecommodel_Hotline_etelecom_Hotline(arg, out)
	return out
}

func convert_etelecommodel_Hotline_etelecom_Hotline(arg *etelecommodel.Hotline, out *etelecom.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = arg.DeletedAt               // simple assign
}

func Convert_etelecommodel_Hotlines_etelecom_Hotlines(args []*etelecommodel.Hotline) (outs []*etelecom.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Hotline, len(args))
	outs = make([]*etelecom.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecommodel_Hotline_etelecom_Hotline(args[i], &tmps[i])
	}
	return outs
}

func Convert_etelecom_Hotline_etelecommodel_Hotline(arg *etelecom.Hotline, out *etelecommodel.Hotline) *etelecommodel.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecommodel.Hotline{}
	}
	convert_etelecom_Hotline_etelecommodel_Hotline(arg, out)
	return out
}

func convert_etelecom_Hotline_etelecommodel_Hotline(arg *etelecom.Hotline, out *etelecommodel.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = arg.DeletedAt               // simple assign
}

func Convert_etelecom_Hotlines_etelecommodel_Hotlines(args []*etelecom.Hotline) (outs []*etelecommodel.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecommodel.Hotline, len(args))
	outs = make([]*etelecommodel.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Hotline_etelecommodel_Hotline(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/etelecom.Summary --//

func Convert_etelecommodel_Summary_etelecom_Summary(arg *etelecommodel.Summary, out *etelecom.Summary) *etelecom.Summary {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Summary{}
	}
	convert_etelecommodel_Summary_etelecom_Summary(arg, out)
	return out
}

func convert_etelecommodel_Summary_etelecom_Summary(arg *etelecommodel.Summary, out *etelecom.Summary) {
	out.ID = arg.ID                         // simple assign
	out.ExtensionID = arg.ExtensionID       // simple assign
	out.Date = arg.Date                     // simple assign
	out.TotalPhoneCall = arg.TotalPhoneCall // simple assign
	out.TotalCallTime = arg.TotalCallTime   // simple assign
	out.CreatedAt = arg.CreatedAt           // simple assign
	out.UpdatedAt = arg.UpdatedAt           // simple assign
	out.DeletedAt = arg.DeletedAt           // simple assign
}

func Convert_etelecommodel_Summaries_etelecom_Summaries(args []*etelecommodel.Summary) (outs []*etelecom.Summary) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Summary, len(args))
	outs = make([]*etelecom.Summary, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecommodel_Summary_etelecom_Summary(args[i], &tmps[i])
	}
	return outs
}

func Convert_etelecom_Summary_etelecommodel_Summary(arg *etelecom.Summary, out *etelecommodel.Summary) *etelecommodel.Summary {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecommodel.Summary{}
	}
	convert_etelecom_Summary_etelecommodel_Summary(arg, out)
	return out
}

func convert_etelecom_Summary_etelecommodel_Summary(arg *etelecom.Summary, out *etelecommodel.Summary) {
	out.ID = arg.ID                         // simple assign
	out.ExtensionID = arg.ExtensionID       // simple assign
	out.Date = arg.Date                     // simple assign
	out.TotalPhoneCall = arg.TotalPhoneCall // simple assign
	out.TotalCallTime = arg.TotalCallTime   // simple assign
	out.CreatedAt = arg.CreatedAt           // simple assign
	out.UpdatedAt = arg.UpdatedAt           // simple assign
	out.DeletedAt = arg.DeletedAt           // simple assign
}

func Convert_etelecom_Summaries_etelecommodel_Summaries(args []*etelecom.Summary) (outs []*etelecommodel.Summary) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecommodel.Summary, len(args))
	outs = make([]*etelecommodel.Summary, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Summary_etelecommodel_Summary(args[i], &tmps[i])
	}
	return outs
}
