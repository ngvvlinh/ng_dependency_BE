syntax = "proto2";
package sadmin;
option go_package = "etop.vn/backend/pb/etop/sadmin";

import "protoc-gen-swagger/options/annotations.proto";
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "eTop API: SuperAdmin";
        version: "v1";
    };
};

import "gogoproto/gogo.proto";
option (gogoproto.equal_all)                = false;
option (gogoproto.gogoproto_import)         = false;
option (gogoproto.goproto_enum_prefix_all)  = true;
option (gogoproto.goproto_getters_all)      = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all)             = false;
option (gogoproto.marshaler_all)            = false;
option (gogoproto.onlyone_all)              = false;
option (gogoproto.sizer_all)                = false;
option (gogoproto.testgen_all)              = false;
option (gogoproto.unmarshaler_all)          = false;
option (gogoproto.verbose_equal_all)        = false;

import "common/common.proto";
import "etop/etop.proto";

service MiscService {
    rpc VersionInfo(cm.Empty) returns (cm.VersionInfoResponse);
}

service UserService {
    rpc CreateUser(SAdminCreateUserRequest) returns (etop.RegisterResponse);
    rpc ResetPassword(SAdminResetPasswordRequest) returns (cm.Empty);
    rpc LoginAsAccount(LoginAsAccountRequest) returns (etop.LoginResponse);
}

message SAdminResetPasswordRequest {
    optional int64  user_id  = 1 [(gogoproto.nullable)=false];
    optional string password = 2 [(gogoproto.nullable)=false];
    optional string confirm  = 3 [(gogoproto.nullable)=false];
}

message SAdminCreateUserRequest {
    optional etop.CreateUserRequest info = 1;
    optional bool   is_etop_admin        = 2 [(gogoproto.nullable)=false];
    optional etop.Permission permission  = 3;
}

message LoginAsAccountRequest {
    optional int64 user_id    = 1 [(gogoproto.nullable)=false];
    optional int64 account_id = 2 [(gogoproto.nullable)=false];
}
