syntax = "proto2";
package shop;
option go_package = "etop.vn/backend/pb/etop/shop";

import "protoc-gen-swagger/options/annotations.proto";
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "eTop API: Shop";
        version: "v1";
    };
};

import "gogoproto/gogo.proto";
option (gogoproto.equal_all)                = false;
option (gogoproto.gogoproto_import)         = false;
option (gogoproto.goproto_enum_prefix_all)  = true;
option (gogoproto.goproto_getters_all)      = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all)             = false;
option (gogoproto.marshaler_all)            = false;
option (gogoproto.onlyone_all)              = false;
option (gogoproto.sizer_all)                = false;
option (gogoproto.testgen_all)              = false;
option (gogoproto.unmarshaler_all)          = false;
option (gogoproto.verbose_equal_all)        = false;

import "google/protobuf/timestamp.proto";
import "common/common.proto";
import "common/spreadsheet/spreadsheet.proto";
import "etop/etc/ghn_note_code/code.proto";
import "etop/etc/try_on/code.proto";
import "etop/etc/shipping/state.proto";
import "etop/etc/status3/status.proto";
import "etop/etc/status4/status.proto";
import "etop/etop.proto";
import "etop/order/order.proto";
import "etop/etc/payment_provider/payment_provider.proto";
import "etop/etc/product_type/product_type.proto";

service MiscService {
    rpc VersionInfo(cm.Empty) returns (cm.VersionInfoResponse);
}

service InventoryService {
    rpc CreateInventoryVoucher (CreateInventoryVoucherRequest) returns (CreateInventoryVoucherResponse);
    rpc ConfirmInventoryVoucher (ConfirmInventoryVoucherRequest) returns (ConfirmInventoryVoucherResponse);
    rpc CancelInventoryVoucher (CancelInventoryVoucherRequest) returns (CancelInventoryVoucherResponse);
    rpc UpdateInventoryVoucher (UpdateInventoryVoucherRequest) returns (UpdateInventoryVoucherResponse);
    rpc AdjustInventoryQuantity (AdjustInventoryQuantityRequest) returns (AdjustInventoryQuantityResponse);

    rpc GetInventory (GetInventoryRequest) returns (Inventory);
    rpc GetInventories (GetInventoriesRequest) returns (GetInventoriesResponse);
    rpc GetInventoriesByVariantIDs (GetInventoriesByVariantIDsRequest) returns (GetInventoriesResponse);

    rpc GetInventoryVoucher (cm.IDRequest) returns (InventoryVoucher);
    rpc GetInventoryVouchers (GetInventoryVouchersRequest) returns (GetInventoryVouchersResponse);
    rpc GetInventoryVouchersByIDs (GetInventoryVouchersByIDsRequest) returns (GetInventoryVouchersResponse);
}

service AccountService {
    rpc RegisterShop(RegisterShopRequest) returns (RegisterShopResponse);
    rpc UpdateShop(UpdateShopRequest) returns (UpdateShopResponse);
    rpc DeleteShop (cm.IDRequest) returns (cm.Empty);
    rpc SetDefaultAddress (etop.SetDefaultAddressRequest) returns (cm.UpdatedResponse);
    rpc GetBalanceShop (cm.Empty) returns (GetBalanceShopResponse);

    rpc CreateExternalAccountAhamove (cm.Empty) returns (ExternalAccountAhamove);
    rpc GetExternalAccountAhamove (cm.Empty) returns (ExternalAccountAhamove);
    rpc RequestVerifyExternalAccountAhamove (cm.Empty) returns (cm.UpdatedResponse);
    rpc UpdateExternalAccountAhamoveVerification (UpdateXAccountAhamoveVerificationRequest) returns (cm.UpdatedResponse);

    // deprecated: backward-compatible, will be removed later
    rpc UpdateExternalAccountAhamoveVerificationImages (UpdateXAccountAhamoveVerificationRequest) returns (cm.UpdatedResponse);
}

service ExternalAccountService {
    rpc GetExternalAccountHaravan(cm.Empty) returns (ExternalAccountHaravan);
    rpc CreateExternalAccountHaravan(ExternalAccountHaravanRequest) returns (ExternalAccountHaravan);
    rpc UpdateExternalAccountHaravanToken(ExternalAccountHaravanRequest) returns (ExternalAccountHaravan);
    rpc ConnectCarrierServiceExternalAccountHaravan(cm.Empty) returns (cm.UpdatedResponse);
    rpc DeleteConnectedCarrierServiceExternalAccountHaravan(cm.Empty) returns(cm.DeletedResponse);
}

service CollectionService {
    rpc CreateCollection(CreateCollectionRequest) returns (ShopCollection);
    rpc GetCollection(cm.IDRequest) returns (ShopCollection);
    rpc GetCollections(GetCollectionsRequest) returns (ShopCollectionsResponse);
    rpc UpdateCollection(UpdateCollectionRequest) returns (ShopCollection);
    rpc GetCollectionsByProductID(GetShopCollectionsByProductIDRequest) returns (CollectionsResponse);
}

service CustomerService {
    rpc CreateCustomer(CreateCustomerRequest) returns (Customer);
    rpc UpdateCustomer(UpdateCustomerRequest) returns (Customer);
    rpc DeleteCustomer(cm.IDRequest) returns (cm.DeletedResponse);
    rpc GetCustomer(cm.IDRequest) returns (Customer);
    rpc GetCustomerDetails(cm.IDRequest) returns (CustomerDetailsResponse);
    rpc GetCustomers(GetCustomersRequest) returns (CustomersResponse);
    rpc GetCustomersByIDs(cm.IDsRequest) returns (CustomersResponse);
    rpc BatchSetCustomersStatus(SetCustomersStatusRequest) returns (cm.UpdatedResponse);

    //-- address --//

    rpc GetCustomerAddresses(GetCustomerAddressesRequest) returns (CustomerAddressesResponse);
    rpc CreateCustomerAddress(CreateCustomerAddressRequest) returns (CustomerAddress);
    rpc UpdateCustomerAddress(UpdateCustomerAddressRequest) returns (CustomerAddress);
    rpc SetDefaultCustomerAddress(cm.IDRequest) returns (cm.UpdatedResponse);
    rpc DeleteCustomerAddress(cm.IDRequest) returns (cm.DeletedResponse);

    //-- group --//
    rpc AddCustomersToGroup(AddCustomerToGroupRequest) returns (cm.UpdatedResponse);
    rpc RemoveCustomersFromGroup(RemoveCustomerOutOfGroupRequest) returns (cm.RemovedResponse);
}

service CustomerGroupService {
    rpc CreateCustomerGroup (CreateCustomerGroupRequest) returns (CustomerGroup);
    rpc GetCustomerGroup (cm.IDRequest) returns (CustomerGroup);
    rpc GetCustomerGroups (GetCustomerGroupsRequest) returns (CustomerGroupsResponse);
    rpc UpdateCustomerGroup (UpdateCustomerGroupRequest) returns (CustomerGroup);
}

service ProductService {

    //-- product --//

    rpc GetProduct (cm.IDRequest) returns (ShopProduct);
    rpc GetProducts (GetVariantsRequest) returns (ShopProductsResponse);
    rpc GetProductsByIDs (cm.IDsRequest) returns (ShopProductsResponse);

    rpc CreateProduct (CreateProductRequest) returns (ShopProduct);
    rpc UpdateProduct (UpdateProductRequest) returns (ShopProduct);
    rpc UpdateProductsStatus (UpdateProductStatusRequest) returns (UpdateProductStatusResponse);
    rpc UpdateProductsTags (UpdateProductsTagsRequest) returns (cm.UpdatedResponse);
    rpc UpdateProductImages (UpdateVariantImagesRequest) returns (ShopProduct);
    rpc UpdateProductMetaFields (UpdateProductMetaFieldsRequest) returns (ShopProduct);
    rpc RemoveProducts (RemoveVariantsRequest) returns (cm.RemovedResponse);
    //-- variant --//

    rpc GetVariant (cm.IDRequest) returns (ShopVariant);
    rpc GetVariantsByIDs (cm.IDsRequest) returns (ShopVariantsResponse);

    rpc CreateVariant (CreateVariantRequest) returns (ShopVariant);
    rpc UpdateVariant (UpdateVariantRequest) returns (ShopVariant);
    rpc UpdateVariantImages (UpdateVariantImagesRequest) returns (ShopVariant);
    rpc UpdateVariantsStatus (UpdateProductStatusRequest) returns(UpdateProductStatusResponse);
    rpc UpdateVariantAttributes (UpdateVariantAttributesRequest) returns (ShopVariant);
    rpc RemoveVariants (RemoveVariantsRequest) returns (cm.RemovedResponse);

    //-- category --//
    rpc UpdateProductCategory(UpdateProductCategoryRequest) returns (ShopProduct);
    rpc RemoveProductCategory(cm.IDRequest) returns (ShopProduct);

    //-- collection --//
    rpc AddProductCollection(AddShopProductCollectionRequest) returns (cm.UpdatedResponse);
    rpc RemoveProductCollection(RemoveShopProductCollectionRequest) returns (cm.RemovedResponse);
}

service CategoryService{
    rpc CreateCategory(CreateCategoryRequest) returns (ShopCategory);
    rpc GetCategory(cm.IDRequest) returns (ShopCategory);
    rpc GetCategories(GetCategoriesRequest) returns (ShopCategoriesResponse);
    rpc UpdateCategory(UpdateCategoryRequest) returns(ShopCategory);
    rpc DeleteCategory(cm.IDRequest) returns (cm.DeletedResponse);
}

// deprecated: 2018.07.31+14
service ProductSourceService {
    rpc CreateProductSource (CreateProductSourceRequest) returns (ProductSource);
    rpc GetShopProductSources (cm.Empty) returns (ProductSourcesResponse);
    // deprecated: use shop.Product/CreateVariant instead
    rpc CreateVariant (DeprecatedCreateVariantRequest) returns (ShopProduct);
    rpc CreateProductSourceCategory (CreatePSCategoryRequest) returns (Category);
    rpc UpdateProductsPSCategory (UpdateProductsPSCategoryRequest) returns (cm.UpdatedResponse);
    rpc GetProductSourceCategory (cm.IDRequest) returns (Category);
    rpc GetProductSourceCategories (GetProductSourceCategoriesRequest) returns (CategoriesResponse);
    rpc UpdateProductSourceCategory (UpdateProductSourceCategoryRequest) returns (Category);
    rpc RemoveProductSourceCategory (cm.IDRequest) returns (cm.RemovedResponse);
}

service OrderService {
    rpc CreateOrder(order.CreateOrderRequest) returns (order.Order);
    rpc GetOrder(cm.IDRequest) returns (order.Order);
    rpc GetOrders(GetOrdersRequest) returns (order.OrdersResponse);
    rpc GetOrdersByIDs(etop.IDsRequest) returns (order.OrdersResponse);
    rpc GetOrdersByReceiptID(GetOrdersByReceiptIDRequest) returns (order.OrdersResponse);
    rpc UpdateOrder(order.UpdateOrderRequest) returns (order.Order);

    // @deprecated
    rpc UpdateOrdersStatus(UpdateOrdersStatusRequest) returns (cm.UpdatedResponse);

    rpc ConfirmOrderAndCreateFulfillments(OrderIDRequest) returns (order.OrderWithErrorsResponse);
    rpc CancelOrder(CancelOrderRequest) returns (order.OrderWithErrorsResponse);
    rpc UpdateOrderPaymentStatus(UpdateOrderPaymentStatusRequest) returns (cm.UpdatedResponse);
}

service FulfillmentService {
    rpc GetFulfillment(cm.IDRequest) returns (order.Fulfillment);
    rpc GetFulfillments(GetFulfillmentsRequest) returns (order.FulfillmentsResponse);

    rpc GetPublicExternalShippingServices(order.GetExternalShippingServicesRequest) returns (order.GetExternalShippingServicesResponse);
    rpc GetExternalShippingServices(order.GetExternalShippingServicesRequest) returns (order.GetExternalShippingServicesResponse);
    rpc GetPublicFulfillment(GetPublicFulfillmentRequest) returns (order.PublicFulfillment);
    rpc UpdateFulfillmentsShippingState(UpdateFulfillmentsShippingStateRequest) returns (cm.UpdatedResponse);
}

service ShipnowService {
    rpc GetShipnowFulfillment (cm.IDRequest) returns (order.ShipnowFulfillment);
    rpc GetShipnowFulfillments (order.GetShipnowFulfillmentsRequest) returns (order.ShipnowFulfillments);

    rpc CreateShipnowFulfillment (order.CreateShipnowFulfillmentRequest) returns (order.ShipnowFulfillment);
    rpc ConfirmShipnowFulfillment (cm.IDRequest) returns (order.ShipnowFulfillment);
    rpc UpdateShipnowFulfillment(order.UpdateShipnowFulfillmentRequest) returns (order.ShipnowFulfillment);
    rpc CancelShipnowFulfillment(order.CancelShipnowFulfillmentRequest) returns (cm.UpdatedResponse);

    rpc GetShipnowServices(order.GetShipnowServicesRequest) returns (order.GetShipnowServicesResponse);
}

service HistoryService {
    rpc GetFulfillmentHistory(GetFulfillmentHistoryRequest) returns (etop.HistoryResponse);
}

service MoneyTransactionService {
    rpc GetMoneyTransaction(cm.IDRequest) returns (order.MoneyTransaction);
    rpc GetMoneyTransactions(GetMoneyTransactionsRequest) returns (order.MoneyTransactionsResponse);
}

service SummaryService {
    rpc SummarizeFulfillments(SummarizeFulfillmentsRequest) returns (SummarizeFulfillmentsResponse);
    rpc SummarizePOS (SummarizePOSRequest) returns (SummarizePOSResponse);
    rpc CalcBalanceShop(cm.Empty) returns (CalcBalanceShopResponse);
}

service ExportService {
    rpc GetExports(GetExportsRequest) returns (GetExportsResponse);
    rpc RequestExport(RequestExportRequest) returns (RequestExportResponse);
}

service NotificationService {
    rpc CreateDevice (etop.CreateDeviceRequest) returns (etop.Device);
    rpc DeleteDevice (etop.DeleteDeviceRequest) returns (cm.DeletedResponse);

    rpc GetNotification (cm.IDRequest) returns (etop.Notification);
    rpc GetNotifications (etop.GetNotificationsRequest) returns (etop.NotificationsResponse);
    rpc UpdateNotifications (etop.UpdateNotificationsRequest) returns (cm.UpdatedResponse);
}

service AuthorizeService {
    rpc GetAuthorizedPartners(cm.Empty) returns (GetAuthorizedPartnersResponse);
    rpc GetAvailablePartners(cm.Empty) returns (GetPartnersResponse);
    rpc AuthorizePartner(AuthorizePartnerRequest) returns (AuthorizedPartnerResponse);
}

service TradingService {
    rpc TradingGetProduct(cm.IDRequest) returns (ShopProduct);
    rpc TradingGetProducts(cm.CommonListRequest) returns (ShopProductsResponse);

    rpc TradingCreateOrder(order.TradingCreateOrderRequest) returns (order.Order);
    rpc TradingGetOrder(cm.IDRequest) returns (order.Order);
    rpc TradingGetOrders(GetOrdersRequest) returns (order.OrdersResponse);

}

service PaymentService {
    rpc PaymentTradingOrder(PaymentTradingOrderRequest) returns (PaymentTradingOrderResponse);
    rpc PaymentCheckReturnData(PaymentCheckReturnDataRequest) returns (cm.MessageResponse);
}

service ReceiptService {
    rpc CreateReceipt(CreateReceiptRequest) returns (Receipt);
    rpc UpdateReceipt(UpdateReceiptRequest) returns (Receipt);
    rpc DeleteReceipt(cm.IDRequest) returns (cm.DeletedResponse);
    rpc GetReceipt(cm.IDRequest) returns (Receipt);
    rpc GetReceipts(GetReceiptsRequest) returns (ReceiptsResponse);
}

service VendorService {
    rpc GetVendor(cm.IDRequest) returns (Vendor);
    rpc GetVendors(GetVendorsRequest) returns (VendorsResponse);
    rpc GetVendorsByIDs(cm.IDsRequest) returns (VendorsResponse);
    rpc CreateVendor(CreateVendorRequest) returns (Vendor);
    rpc UpdateVendor(UpdateVendorRequest) returns (Vendor);
    rpc DeleteVendor(cm.IDRequest) returns (cm.DeletedResponse);
}

service CarrierService {
    rpc GetCarrier(cm.IDRequest) returns (Carrier);
    rpc GetCarriers(GetCarriersRequest) returns (CarriersResponse);
    rpc GetCarriersByIDs(cm.IDsRequest) returns (CarriersResponse);
    rpc CreateCarrier(CreateCarrierRequest) returns (Carrier);
    rpc UpdateCarrier(UpdateCarrierRequest) returns (Carrier);
    rpc DeleteCarrier(cm.IDRequest) returns (cm.DeletedResponse);
}

service LedgerService {
    rpc GetLedger(cm.IDRequest) returns (Ledger);
    rpc GetLedgers(GetLedgersRequest) returns (LedgersResponse);
    rpc CreateLedger(CreateLedgerRequest) returns (Ledger);
    rpc UpdateLedger(UpdateLedgerRequest) returns (Ledger);
    rpc DeleteLedger(cm.IDRequest) returns (cm.DeletedResponse);
}

message GetLedgersRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message CreateLedgerRequest {
    optional string name = 1 [(gogoproto.nullable)=false];
    // required name, account_number, account_name
    optional etop.BankAccount bank_account = 2;
    optional string note = 3 [(gogoproto.nullable)=false];
    optional string created_by = 4 [(gogoproto.nullable)=false];
}

message UpdateLedgerRequest {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional string name = 2;
    // required name, account_number, account_name
    optional etop.BankAccount bank_account = 3;
    optional string note = 4;
}

message LedgersResponse {
    repeated Ledger ledgers = 1;
    optional cm.PageInfo paging = 2;
}

message Ledger {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional string name = 2 [(gogoproto.nullable)=false];
    optional etop.BankAccount bank_account = 3;
    optional string note = 4 [(gogoproto.nullable)=false];
    // enum: cash, bank
    optional string type = 5 [(gogoproto.nullable)=false];
    optional int64 created_by = 6 [(gogoproto.nullable)=false];
    optional google.protobuf.Timestamp created_at = 7;
    optional google.protobuf.Timestamp updated_at = 8;
}

message RegisterShopRequest {
    // @required
    optional string name = 1 [(gogoproto.nullable)=false];
    optional etop.Address address = 2;
    optional string phone = 7 [(gogoproto.nullable)=false];
    optional etop.BankAccount bank_account = 8;

    optional string website_url = 12 [(gogoproto.nullable)=false];
    optional string image_url = 13 [(gogoproto.nullable)=false];
    optional string email = 14 [(gogoproto.nullable)=false];

    optional string url_slug = 16 [(gogoproto.nullable)=false];
    optional etop.CompanyInfo company_info = 17;
    // referrence: https://icalendar.org/rrule-tool.html
    optional string money_transaction_rrule = 18 [(gogoproto.nullable)=false];
    repeated etop.SurveyInfo survey_info = 19;
    repeated etop.ShippingServiceSelectStrategyItem shipping_service_select_strategy = 20;
}

message RegisterShopResponse {
    // @required
    optional etop.Shop shop = 1;
}

message UpdateShopRequest {
    optional bool inventory_overstock = 4 ;
    optional string name = 1 [(gogoproto.nullable)=false];
    optional etop.Address address = 2;
    optional string phone = 7 [(gogoproto.nullable)=false];
    optional etop.BankAccount bank_account = 8;

    optional string website_url = 12 [(gogoproto.nullable)=false];
    optional string image_url = 13 [(gogoproto.nullable)=false];
    optional string email = 14 [(gogoproto.nullable)=false];
    optional bool auto_create_ffm = 15;

    // @deprecated use try_on instead
    optional ghn_note_code.GHNNoteCode ghn_note_code = 16;
    optional try_on.TryOnCode try_on = 17;
    optional etop.CompanyInfo company_info = 18;
    // referrence: https://icalendar.org/rrule-tool.html
    optional string money_transaction_rrule = 19 [(gogoproto.nullable)=false];
    repeated etop.SurveyInfo survey_info = 20;
    repeated etop.ShippingServiceSelectStrategyItem shipping_service_select_strategy = 21;
}

message UpdateShopResponse {
    optional etop.Shop shop = 1;
}

message Collection {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional int64 shop_id = 8 [(gogoproto.nullable)=false];

    // @required
    optional string name = 2 [(gogoproto.nullable)=false];

    optional string description = 3 [(gogoproto.nullable)=false];
    optional string short_desc  = 4 [(gogoproto.nullable)=false];
    optional string desc_html   = 5 [(gogoproto.nullable)=false];

    // @required
    optional google.protobuf.Timestamp created_at = 6;

    // @required
    optional google.protobuf.Timestamp updated_at = 7;
}

message CreateCollectionRequest {
     // @required
     optional string name = 2 [(gogoproto.nullable)=false];

     optional string description = 3 [(gogoproto.nullable)=false];
     optional string short_desc  = 4 [(gogoproto.nullable)=false];
     optional string desc_html   = 5 [(gogoproto.nullable)=false];
}

message UpdateProductCategoryRequest {
    optional int64 product_id =1 [(gogoproto.nullable)=false];
    optional int64 category_id =2 [(gogoproto.nullable)=false];
}

message CollectionsResponse {
    repeated ShopCollection collections = 1;
}

message UpdateCollectionRequest {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];

    // @required
    optional string name = 2;

    optional string description = 3;
    optional string short_desc  = 4;
    optional string desc_html   = 5;
}

message UpdateProductsCollectionRequest {
    // @required
    optional int64 collection_id = 1 [(gogoproto.nullable)=false];

    repeated int64 product_ids = 2;
}

message RemoveProductsCollectionRequest {
    // @required
    optional int64 collection_id = 1 [(gogoproto.nullable)=false];

    repeated int64 product_ids = 2;
}

message EtopVariant {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional string code   = 2 [(gogoproto.nullable)=false];

    optional string name  = 4 [(gogoproto.nullable)=false];
    optional string description = 6 [(gogoproto.nullable)=false];
    optional string short_desc  = 7 [(gogoproto.nullable)=false];
    optional string desc_html   = 8 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;

    optional int32  list_price = 15 [(gogoproto.nullable)=false];
    optional int32  cost_price = 16 [(gogoproto.nullable)=false];

    repeated Attribute attributes = 18;
}

message EtopProduct {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional string code   = 2 [(gogoproto.nullable)=false];

    optional string name  = 4 [(gogoproto.nullable)=false];
    optional string description = 6 [(gogoproto.nullable)=false];
    optional string short_desc  = 7 [(gogoproto.nullable)=false];
    optional string desc_html   = 8 [(gogoproto.nullable)=false];
    optional string unit        = 12 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;

    optional int32  list_price = 15 [(gogoproto.nullable)=false];
    optional int32  cost_price = 16 [(gogoproto.nullable)=false];

    optional int64  category_id = 10 [(gogoproto.nullable)=false];
    // @deprecated
    optional int64 product_source_category_id = 11 [(gogoproto.nullable)=false];
}

message ShopVariant {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional EtopVariant info = 8;

    optional string code   = 2 [(gogoproto.nullable)=false];
    // @deprecated use code instead
    optional string ed_code   = 3 [(gogoproto.nullable)=false];

    optional string name        = 4 [(gogoproto.nullable)=false];
    optional string description = 5 [(gogoproto.nullable)=false];
    optional string short_desc  = 6 [(gogoproto.nullable)=false];
    optional string desc_html   = 7 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;

    optional int32  list_price = 14 [(gogoproto.nullable)=false];
    optional int32  retail_price = 15 [(gogoproto.nullable)=false];
    optional int32  cost_price = 16 [(gogoproto.nullable)=false];

    optional string note        = 11 [(gogoproto.nullable)=false];
    optional status3.Status status = 12 [(gogoproto.nullable)=false];
    optional bool is_available  = 13 [(gogoproto.nullable)=false];

    // @deprecated use stags instead
    repeated string  tags = 10;
    repeated Tag    stags = 22;

    repeated Attribute attributes = 18;
}

message ShopProduct {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional EtopProduct info = 8;

    optional string code   = 2 [(gogoproto.nullable)=false];
    // @deprecated use code instead
    optional string ed_code   = 3 [(gogoproto.nullable)=false];

    optional string name        = 4 [(gogoproto.nullable)=false];
    optional string description = 5 [(gogoproto.nullable)=false];
    optional string short_desc  = 6 [(gogoproto.nullable)=false];
    optional string desc_html   = 7 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;
    optional int64 category_id = 24 [(gogoproto.nullable)=false];
    optional int64 vendor_id = 25  [(gogoproto.nullable)=false];

    // @deprecated use stags instead
    repeated string  tags = 10;
    repeated Tag    stags = 22;

    optional string note        = 11 [(gogoproto.nullable)=false];
    optional status3.Status status = 12 [(gogoproto.nullable)=false];
    optional bool is_available  = 13 [(gogoproto.nullable)=false];

    optional int32  list_price = 14 [(gogoproto.nullable)=false];
    optional int32  retail_price = 15 [(gogoproto.nullable)=false];
    optional int32  cost_price = 16 [(gogoproto.nullable)=false];

    repeated int64 collection_ids = 17;
    repeated ShopVariant variants = 18;

    optional int64 product_source_id = 19 [(gogoproto.nullable)=false];

    optional google.protobuf.Timestamp created_at = 21;
    optional google.protobuf.Timestamp updated_at = 20;
    optional product_type.ProductType product_type = 23;

    repeated cm.MetaField meta_fields = 26;
}

message  ShopCollection {
	optional int64 id = 1 [(gogoproto.nullable)=false];
	optional int64 shop_id = 2 [(gogoproto.nullable)=false];

	optional string name = 3 [(gogoproto.nullable)=false];
	optional string description = 4 [(gogoproto.nullable)=false];
	optional string desc_html = 5 [(gogoproto.nullable)=false];
	optional string short_desc = 6 [(gogoproto.nullable)=false];
}

message GetVariantsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 4;
}

message GetCategoriesRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 4;
}

message ShopVariantsResponse {
    optional cm.PageInfo paging   = 1;
    repeated ShopVariant variants = 2;
}

message ShopProductsResponse {
    optional cm.PageInfo paging   = 1;
    repeated ShopProduct products = 2;
}

message ShopCategoriesResponse {
    optional cm.PageInfo paging   = 1;
    repeated ShopCategory categories = 2;
}

message UpdateVariantRequest {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];

    optional string name        = 2;
    optional string note        = 3;
    optional string code       = 11;

    optional int32  cost_price  = 4;
    optional int32  list_price  = 5;
    optional int32  retail_price  = 6;

    optional string description = 7;
    optional string short_desc  = 8;
    optional string desc_html   = 9;

    repeated Attribute attributes = 10;


    // deprecated
    optional string sku        = 16 [(gogoproto.nullable)=false];
}

message UpdateProductRequest {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional int64 vendor_id = 13 [(gogoproto.nullable)=false];

    optional string name = 2;
    optional string code = 3;
    optional string note = 4;
    optional string unit = 5;

    optional string description = 6;
    optional string short_desc  = 7;
    optional string desc_html   = 8;

    optional int32 cost_price = 9;
    optional int32 list_price = 10;
    optional int32 retail_price = 11;
    optional product_type.ProductType product_type = 12;

    optional cm.MetaField meta_fields = 14;
}

message UpdateCategoryRequest {
     optional int64 id = 1 [(gogoproto.nullable)=false];
     optional string name = 2;
     optional int64 parent_id = 3 [(gogoproto.nullable)=false];
}

message UpdateVariantsRequest {
    repeated UpdateVariantRequest updates = 1;
}

message UpdateProductsTagsRequest {
    // @required
    repeated int64  ids         = 1;
    repeated string adds        = 2;
    repeated string deletes     = 3;
    repeated string replace_all = 4;
    optional bool   delete_all  = 5 [(gogoproto.nullable)=false];
}

message UpdateVariantsResponse {
    repeated ShopVariant  variants = 2;
    repeated cm.Error     errors   = 3;
}

message AddVariantsRequest {
    repeated int64  ids  = 1;
    repeated string tags = 2;

    optional int64 collection_id = 3 [(gogoproto.nullable)=false];
}

message AddVariantsResponse {
    repeated ShopVariant variants = 1;
    repeated cm.Error    errors = 2;
}

message RemoveVariantsRequest {
    repeated int64 ids   = 1;
}

message GetOrdersRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 4;
    optional etop.MixedAccount mixed = 5;
}

message UpdateOrdersStatusRequest {
    // @required
    repeated int64 ids = 1;

    // @required
    optional status3.Status confirm = 2;
    optional string cancel_reason = 3 [(gogoproto.nullable)=false];
    optional status4.Status status = 4 [(gogoproto.nullable)=false];
}

message OrderIDRequest {
    optional int64 order_id = 1 [(gogoproto.nullable)=false];
}

message OrderIDsRequest {
    repeated int64 order_ids = 1;
}

message CreateFulfillmentsForOrderRequest {
    optional int64 order_id = 1 [(gogoproto.nullable)=false];
    repeated int64 variant_ids = 3;
}

message CancelOrderRequest {
    optional int64  order_id = 1 [(gogoproto.nullable)=false];
    optional string cancel_reason = 2 [(gogoproto.nullable)=false];
}

message CancelOrdersRequest {
    repeated int64 ids = 1;
    optional string reason = 2 [(gogoproto.nullable)=false];
}

message ProductSource {
    optional int64 id =  1 [(gogoproto.nullable)=false];
    optional string type =  2 [(gogoproto.nullable)=false];
    optional string name =  3 [(gogoproto.nullable)=false];
    optional status3.Status status = 4 [(gogoproto.nullable)=false];
    optional google.protobuf.Timestamp   updated_at = 5;
    optional google.protobuf.Timestamp   created_at = 6;
}

// deprecated
message CreateProductSourceRequest {
}

message ProductSourcesResponse {
    repeated ProductSource product_sources = 1;
}

message CreateCategoryRequest {
    optional string name = 1 [(gogoproto.nullable)=false];
    optional int64 parent_id = 2 [(gogoproto.nullable)=false];
}

message CreateProductRequest {
    optional string code = 1 [(gogoproto.nullable)=false];
    optional string name = 2 [(gogoproto.nullable)=false];
    optional string unit = 3 [(gogoproto.nullable)=false];
    optional string note = 4 [(gogoproto.nullable)=false];
    optional string description = 5 [(gogoproto.nullable)=false];
    optional string short_desc  = 6 [(gogoproto.nullable)=false];
    optional string desc_html   = 7 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;
    optional int64 vendor_id = 10 [(gogoproto.nullable)=false];

    optional int32  cost_price = 16 [(gogoproto.nullable)=false];
    optional int32  list_price = 15 [(gogoproto.nullable)=false];
    optional int32  retail_price = 26 [(gogoproto.nullable)=false];
    optional product_type.ProductType product_type = 27;

    repeated cm.MetaField meta_fields = 28;
}

message CreateVariantRequest {
    optional string code = 1 [(gogoproto.nullable)=false];
    optional string name = 2 [(gogoproto.nullable)=false];
    optional int64  product_id = 3 [(gogoproto.nullable)=false];
    optional string note = 4 [(gogoproto.nullable)=false];
    optional string description = 5 [(gogoproto.nullable)=false];
    optional string short_desc  = 6 [(gogoproto.nullable)=false];
    optional string desc_html   = 7 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;
    repeated Attribute attributes = 14;

    optional int32  cost_price = 16 [(gogoproto.nullable)=false];
    optional int32  list_price = 15 [(gogoproto.nullable)=false];
    optional int32  retail_price = 26 [(gogoproto.nullable)=false];
}

message DeprecatedCreateVariantRequest {
    // required
    optional int64 product_source_id = 23 [(gogoproto.nullable)=false];
    optional int64 product_id = 1 [(gogoproto.nullable)=false];
    // In `Dép Adidas Adilette Slides - Full Đỏ`, product_name is "Dép Adidas Adilette Slides"
    optional string product_name = 2 [(gogoproto.nullable)=false];
    // In `Dép Adidas Adilette Slides - Full Đỏ`, name is "Full Đỏ"
    optional string name        = 3 [(gogoproto.nullable)=false];
    optional string description = 5 [(gogoproto.nullable)=false];
    optional string short_desc  = 6 [(gogoproto.nullable)=false];
    optional string desc_html   = 7 [(gogoproto.nullable)=false];
    repeated string image_urls  = 9;
    repeated string tags        = 10;
    optional status3.Status status = 12 [(gogoproto.nullable)=false];

    optional int32  cost_price = 16 [(gogoproto.nullable)=false];
    optional int32  list_price = 15 [(gogoproto.nullable)=false];
    optional int32  retail_price = 26 [(gogoproto.nullable)=false];
    optional string code = 19 [(gogoproto.nullable)=false];
    optional int32 quantity_available = 20 [(gogoproto.nullable)=false];
    optional int32 quantity_on_hand = 21 [(gogoproto.nullable)=false];
    optional int32 quantity_reserved = 22 [(gogoproto.nullable)=false];
    repeated Attribute attributes = 24;
    optional string unit = 25 [(gogoproto.nullable)=false];

    // deprecated: use code instead
    optional string sku = 18 [(gogoproto.nullable)=false];
}

message ConnectProductSourceResquest {
    optional int64 product_source_id = 1 [(gogoproto.nullable)=false];
}

// deprecated
message CreatePSCategoryRequest {
    optional string name = 1 [(gogoproto.nullable)=false];
    optional int64 parent_id = 2 [(gogoproto.nullable)=false];
}

message UpdateProductsPSCategoryRequest {
    optional int64 category_id = 1 [(gogoproto.nullable)=false];
    repeated int64 product_ids = 2;
}

message UpdateProductsCollectionResponse {
    optional int32 updated = 1 [(gogoproto.nullable)=false];
    repeated cm.Error errors   = 2;
}

message UpdateProductSourceCategoryRequest {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional int64 parent_id = 2 [(gogoproto.nullable)=false];
    optional string name = 3 [(gogoproto.nullable)=false];
}

// deprecated
message GetProductSourceCategoriesRequest {
}

message GetFulfillmentsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
    optional etop.MixedAccount mixed = 3;
    optional int64 order_id = 4 [(gogoproto.nullable)=false];
    optional status3.Status status  = 5;
}

message GetFulfillmentHistoryRequest {
    optional cm.Paging paging = 1;
    optional bool  all = 2 [(gogoproto.nullable)=false];
    optional int64 id = 3 [(gogoproto.nullable)=false];
    optional int64 order_id = 4 [(gogoproto.nullable)=false];
}

message GetBalanceShopResponse {
    optional int32 amount = 1 [(gogoproto.nullable)=false];
}

message GetMoneyTransactionsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message GetPublicFulfillmentRequest {
    // @Required
    optional string code = 1 [(gogoproto.nullable)=false];
}

message UpdateFulfillmentsShippingStateRequest {
    // Only support for manual order
    repeated int64 ids = 1;
    // @required
    optional shipping.State shipping_state = 3 [(gogoproto.nullable)=false];
}

message UpdateOrderPaymentStatusRequest {
    optional int64 order_id = 1 [(gogoproto.nullable)=false];
    optional status3.Status status = 2;
}

message SummarizeFulfillmentsRequest {
    optional string date_from = 1 [(gogoproto.nullable)=false];
    optional string date_to   = 2 [(gogoproto.nullable)=false];
}

message SummarizeFulfillmentsResponse {
    repeated SummaryTable tables = 1;
}

message SummarizePOSResponse {
    repeated SummaryTable tables = 1;
}

message SummarizePOSRequest{
    optional string date_from = 1 [(gogoproto.nullable)=false];
    optional string date_to   = 2 [(gogoproto.nullable)=false];
}

message SummaryTable {
    optional string label = 1 [(gogoproto.nullable)=false];
    repeated string tags  = 2;

    repeated SummaryColRow columns = 3 [(gogoproto.nullable)=false];
    repeated SummaryColRow rows    = 4 [(gogoproto.nullable)=false];
    repeated SummaryItem   data    = 5 [(gogoproto.nullable)=false];
}

message SummaryColRow {
    optional string label = 1 [(gogoproto.nullable)=false];
    optional string spec  = 2 [(gogoproto.nullable)=false];
    optional string unit  = 3 [(gogoproto.nullable)=false];
    optional int32 indent = 4 [(gogoproto.nullable)=false];
}

message SummaryItem {
    optional string label = 1 [(gogoproto.nullable)=false];
    optional string spec  = 2 [(gogoproto.nullable)=false];
    optional int32  value = 3 [(gogoproto.nullable)=false];
    optional string unit  = 4 [(gogoproto.nullable)=false];
    repeated string image_urls = 5;
}

message ImportProductsResponse {
    optional spreadsheet.SpreadsheetData data = 1;
    repeated cm.Error import_errors = 3;
    repeated cm.Error cell_errors = 4;
    optional int64 import_id = 5 [(gogoproto.nullable)=false];
}

message CalcBalanceShopResponse {
    optional int32 balance = 1 [(gogoproto.nullable)=false];
}

message RequestExportRequest {
    optional string export_type = 1 [(gogoproto.nullable)=false];
    repeated cm.Filter filters = 2;
    optional string date_from = 3 [(gogoproto.nullable)=false];
    optional string date_to = 4 [(gogoproto.nullable)=false];

    // Accept '\t', ',' or ';'. Default to ','.
    optional string delimiter = 5 [(gogoproto.nullable)=false];

    // For exporting csv compatible with Excel
    optional bool excel_compatible_mode = 6 [(gogoproto.nullable)=false];

    // Export specific ids
    repeated int64 ids = 7;
}

message RequestExportResponse {
    optional string id = 1 [(gogoproto.nullable)=false];
    optional string filename = 2 [(gogoproto.nullable)=false];
    optional string export_type = 3 [(gogoproto.nullable)=false];
    optional status4.Status status = 4 [(gogoproto.nullable)=false];
}

message GetExportsRequest {
}

message GetExportsResponse {
    repeated ExportItem export_items = 1;
}

message ExportItem {
    optional string id = 1 [(gogoproto.nullable)=false];
    optional string filename = 2 [(gogoproto.nullable)=false];

    // example: shop/fulfillments, admin/orders
    optional string export_type = 3 [(gogoproto.nullable)=false];
    optional string download_url = 4 [(gogoproto.nullable)=false];
    optional int64 account_id = 5 [(gogoproto.nullable)=false];
    optional int64 user_id = 6 [(gogoproto.nullable)=false];
    optional google.protobuf.Timestamp created_at = 7;
    optional google.protobuf.Timestamp deleted_at = 8;
    optional string request_query = 9 [(gogoproto.nullable)=false];
    optional string mime_type = 10 [(gogoproto.nullable)=false];
    optional status4.Status status = 11 [(gogoproto.nullable)=false];
    repeated cm.Error export_errors = 12;
    optional cm.Error error = 13;
}

message GetExportsStatusRequest {
}

message ExportStatusItem {
    optional string id = 1 [(gogoproto.nullable)=false];
    optional int32 progress_max = 2 [(gogoproto.nullable)=false];
    optional int32 progress_value = 3 [(gogoproto.nullable)=false];
    optional int32 progress_error = 4 [(gogoproto.nullable)=false];
    optional cm.Error error = 5;
}

message AuthorizePartnerRequest {
    optional int64 partner_id = 1 [(gogoproto.nullable) = false];
}

message GetPartnersResponse {
    repeated etop.PublicAccountInfo partners = 1;
}

message AuthorizedPartnerResponse {
    optional etop.PublicAccountInfo partner = 1;
    optional string redirect_url = 2 [(gogoproto.nullable) = false];
}

message GetAuthorizedPartnersResponse {
    repeated AuthorizedPartnerResponse partners = 1;
}

message Attribute {
    optional string name      = 1 [(gogoproto.nullable)=false];
    optional string value     = 2 [(gogoproto.nullable)=false];
}

message UpdateVariantImagesRequest {
    // @required
    optional int64  id          = 1 [(gogoproto.nullable)=false];

    repeated string adds        = 2;
    repeated string deletes     = 3;
    repeated string replace_all = 4;
    optional bool   delete_all  = 5 [(gogoproto.nullable)=false];
}

message UpdateProductMetaFieldsRequest {
    // @required
    optional int64 id = 1 [(gogoproto.nullable)=false];

    repeated cm.MetaField meta_fields = 2;
}

message CategoriesResponse {
    repeated Category categories = 1;
}

message Category {
    optional int64  id     = 1 [(gogoproto.nullable)=false];
    optional string name   = 2 [(gogoproto.nullable)=false];
    optional int64 product_source_id = 3 [(gogoproto.nullable)=false];
    optional int64 parent_id = 6 [(gogoproto.nullable)=false];
    optional int64 shop_id = 7 [(gogoproto.nullable)=false];
}

message Tag {
    optional int64 id = 1 [(gogoproto.nullable)=false];
    optional string label = 2 [(gogoproto.nullable)=false];
}

message ExternalAccountAhamove {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string phone = 2 [(gogoproto.nullable) = false];
    optional string name = 3 [(gogoproto.nullable) = false];
    optional bool external_verified = 4 [(gogoproto.nullable) = false];
//    optional string external_token = 5 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp external_created_at = 6;
    optional google.protobuf.Timestamp created_at = 7;
    optional google.protobuf.Timestamp updated_at = 8;
    optional google.protobuf.Timestamp last_send_verify_at = 9;
    optional string external_ticket_id = 10 [(gogoproto.nullable) = false];
    optional string id_card_front_img = 11 [(gogoproto.nullable) = false];
    optional string id_card_back_img = 12 [(gogoproto.nullable) = false];
    optional string portrait_img = 13 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp uploaded_at = 14;
    optional string fanpage_url = 15 [(gogoproto.nullable) = false];
    optional string website_url = 16 [(gogoproto.nullable) = false];
    repeated string company_imgs = 17;
    repeated string business_license_imgs = 18;
}

message UpdateXAccountAhamoveVerificationRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string id_card_front_img = 2 [(gogoproto.nullable) = false];
    optional string id_card_back_img = 3 [(gogoproto.nullable) = false];
    optional string portrait_img = 4 [(gogoproto.nullable) = false];
    optional string fanpage_url = 5 [(gogoproto.nullable) = false];
    optional string website_url = 6 [(gogoproto.nullable) = false];
    repeated string company_imgs = 7;
    repeated string business_license_imgs = 8;
}

message ExternalAccountHaravan {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 shop_id = 2 [(gogoproto.nullable) = false];
    optional string subdomain = 3 [(gogoproto.nullable) = false];
    optional int32 external_carrier_service_id = 8 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp external_connected_carrier_service_at = 9;
    optional google.protobuf.Timestamp expires_at = 5;
    optional google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
}

message ExternalAccountHaravanRequest {
    // @required
    optional string subdomain = 1 [(gogoproto.nullable) = false];
    // @required OAuth code
    optional string code = 2 [(gogoproto.nullable) = false];
    // @required
    optional string redirect_uri = 3 [(gogoproto.nullable) = false];
}

message Liability {
    optional int32 total_orders = 1 [(gogoproto.nullable) = false];

    optional int64 total_amount = 2 [(gogoproto.nullable) = false];

    optional int64 received_amount = 3 [(gogoproto.nullable) = false];

    optional int64 liability = 4 [(gogoproto.nullable) = false];
}

message Customer {
    optional int64 id = 1 [(gogoproto.nullable) = false];

    optional int64 shop_id = 2 [(gogoproto.nullable) = false];

    optional string full_name = 3 [(gogoproto.nullable) = false];

    optional string code = 13 [(gogoproto.nullable) = false];

    optional string note = 4 [(gogoproto.nullable) = false];

    optional string phone = 5 [(gogoproto.nullable) = false];

    optional string email = 6 [(gogoproto.nullable) = false];

    optional string gender = 7 [(gogoproto.nullable) = false];

    optional string type = 8 [(gogoproto.nullable) = false];

    optional string birthday = 12 [(gogoproto.nullable) = false];

    optional google.protobuf.Timestamp created_at = 9;

    optional google.protobuf.Timestamp updated_at = 10;

    optional status3.Status status = 11 [(gogoproto.nullable) = false];

    repeated int64 group_ids = 14 [(gogoproto.nullable) = false];

    optional Liability liability = 15;
}

message CreateCustomerRequest {
    // @required
    optional string full_name = 1 [(gogoproto.nullable) = false];

    optional string code = 5 [(gogoproto.nullable) = false];

    optional string gender = 12 [(gogoproto.nullable) = false];

    optional string birthday = 13 [(gogoproto.nullable) = false];

    // enum ('individual', 'organization')
    optional string type = 14 [(gogoproto.nullable) = false];

    optional string note = 2 [(gogoproto.nullable) = false];
    // @required
    optional string phone = 3 [(gogoproto.nullable) = false];

    optional string email = 4 [(gogoproto.nullable) = false];
}

message UpdateCustomerRequest {
    optional int64 id = 5 [(gogoproto.nullable) = false];

    optional string code = 6;

    optional string full_name = 1;

    optional string gender = 12;

    optional string birthday = 13;

    // enum ('individual', 'organization')
    optional string type = 14;

    optional string note = 2;

    optional string phone = 3;

    optional string email = 4;
}

message GetCustomersRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message CustomersResponse {
    repeated Customer customers = 1;
    optional cm.PageInfo paging = 2;
}

message SetCustomersStatusRequest {
    repeated int64 ids = 1;
    optional status3.Status status = 2 [(gogoproto.nullable) = false];
}

message CustomerDetailsResponse {
    optional Customer customer = 1;
    repeated IndependentSummaryItem summary_items = 2;
}

message IndependentSummaryItem {
    optional string name  = 1 [(gogoproto.nullable)=false];
    optional string label = 2 [(gogoproto.nullable)=false];
    optional string spec  = 3 [(gogoproto.nullable)=false];
    optional int32  value = 4 [(gogoproto.nullable)=false];
    optional string unit  = 5 [(gogoproto.nullable)=false];
}

message GetCustomerAddressesRequest {
    optional int64 customer_id = 1 [(gogoproto.nullable)=false];
}

message CustomerAddress {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string province = 2 [(gogoproto.nullable) = false];
    optional string province_code = 6 [(gogoproto.nullable) = false];
    optional string district = 3 [(gogoproto.nullable) = false];
    optional string district_code = 7 [(gogoproto.nullable) = false];
    optional string ward = 4 [(gogoproto.nullable) = false];
    optional string ward_code = 8 [(gogoproto.nullable) = false];
    optional string address1 = 5 [(gogoproto.nullable) = false];
    optional string address2 = 9 [(gogoproto.nullable) = false];

    optional string country = 11 [(gogoproto.nullable) = false];

    optional string full_name = 12 [(gogoproto.nullable) = false];

    optional string company = 10 [(gogoproto.nullable) = false];

    optional string phone = 15 [(gogoproto.nullable) = false];

    optional string email = 16 [(gogoproto.nullable) = false];

    optional string position = 17 [(gogoproto.nullable) = false];

    optional etop.Coordinates coordinates = 20;
}

message CreateCustomerAddressRequest {
    optional int64 customer_id = 1 [(gogoproto.nullable) = false];

    optional string province_code = 2 [(gogoproto.nullable) = false];

    optional string district_code = 3 [(gogoproto.nullable) = false];

    optional string ward_code = 4 [(gogoproto.nullable) = false];

    optional string address1 = 5 [(gogoproto.nullable) = false];

    optional string address2 = 6 [(gogoproto.nullable) = false];

    optional string country = 7 [(gogoproto.nullable) = false];

    optional string full_name = 8 [(gogoproto.nullable) = false];

    optional string company = 12 [(gogoproto.nullable) = false];

    optional string phone = 9 [(gogoproto.nullable) = false];

    optional string email = 10 [(gogoproto.nullable) = false];

    optional string position = 11 [(gogoproto.nullable) = false];

    optional etop.Coordinates coordinates = 18;
}

message UpdateCustomerAddressRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];

    optional string province_code = 2;

    optional string district_code = 3;

    optional string ward_code = 4;

    optional string address1 = 5;

    optional string address2 = 6;

    optional string country = 7;

    optional string full_name = 8;

    optional string phone = 9;

    optional string email = 10;

    optional string position = 11;

    optional string company = 12;

    optional etop.Coordinates coordinates = 18;
}

message CustomerAddressesResponse {
    repeated CustomerAddress addresses = 1;
}

message UpdateProductStatusRequest {
    repeated int64 ids  = 1 ;
    optional status3.Status status = 3 [(gogoproto.nullable) = false];
}

message UpdateProductStatusResponse {
    optional int32 updated = 2 [(gogoproto.nullable) = false];
}

message PaymentTradingOrderRequest {
    optional int64 order_id = 1 [(gogoproto.nullable) = false];
    optional string desc = 2 [(gogoproto.nullable) = false];
    optional string return_url = 3 [(gogoproto.nullable) = false];
    optional int32 amount = 4 [(gogoproto.nullable) = false];
    optional payment_provider.PaymentProvider payment_provider = 5 [(gogoproto.nullable) = false];
}

message PaymentTradingOrderResponse {
    optional string url = 1 [(gogoproto.nullable) = false];
}

message UpdateVariantAttributesRequest {
    // @required
    optional int64 variant_id = 1 [(gogoproto.nullable) = false];
    repeated Attribute attributes =2;
}

message PaymentCheckReturnDataRequest {
    optional string id = 1 [(gogoproto.nullable) = false];
    optional string code = 2 [(gogoproto.nullable) = false];
    optional string payment_status = 3 [(gogoproto.nullable) = false];
    optional int32 amount = 4 [(gogoproto.nullable) = false];
    optional string external_transaction_id = 5 [(gogoproto.nullable) = false];
    optional payment_provider.PaymentProvider payment_provider = 6 [(gogoproto.nullable) = false];
}

message ShopCategory {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional int64 parent_id = 3 [(gogoproto.nullable) = false];
    optional int64 shop_id = 4 [(gogoproto.nullable) = false];
    optional int64 status = 5 [(gogoproto.nullable) = false];
}

message GetCollectionsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 4;
}

message ShopCollectionsResponse {
    optional cm.PageInfo paging   = 1;
    repeated ShopCollection collections = 2;
}

message AddShopProductCollectionRequest {
   optional int64 product_id = 1 [(gogoproto.nullable) = false];
   repeated int64 collection_ids = 2 [(gogoproto.nullable) = false];
}

message RemoveShopProductCollectionRequest {
   optional int64 product_id = 1 [(gogoproto.nullable) = false];
   repeated int64 collection_ids = 2 [(gogoproto.nullable) = false];
}

message AddCustomerToGroupRequest {
   repeated int64 customer_ids = 1 [(gogoproto.nullable) = false];
   optional int64 group_id = 2 [(gogoproto.nullable) = false];
}

message RemoveCustomerOutOfGroupRequest {
   repeated int64 customer_ids = 1 [(gogoproto.nullable) = false];
   optional int64 group_id = 2 [(gogoproto.nullable) = false];
}

message Vendor {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 shop_id = 2 [(gogoproto.nullable) = false];
    optional string full_name = 3 [(gogoproto.nullable) = false];
    optional string note = 4 [(gogoproto.nullable) = false];
    optional status3.Status status = 5 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
}

message CreateVendorRequest {
    optional string full_name = 1 [(gogoproto.nullable) = false];
    optional string note = 2 [(gogoproto.nullable) = false];
}

message UpdateVendorRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string full_name = 2;
    optional string note = 3;
}

message GetVendorsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message VendorsResponse {
    repeated Vendor vendors = 1;
    optional cm.PageInfo paging = 2;
}

message Carrier {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 shop_id = 2 [(gogoproto.nullable) = false];
    optional string full_name = 3 [(gogoproto.nullable) = false];
    optional string note = 4 [(gogoproto.nullable) = false];
    optional status3.Status status = 5 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
}

message CreateCarrierRequest {
    optional string full_name = 1 [(gogoproto.nullable) = false];
    optional string note = 2 [(gogoproto.nullable) = false];
}

message UpdateCarrierRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string full_name = 2;
    optional string note = 3;
}

message GetCarriersRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message CarriersResponse {
    repeated Carrier carriers = 1;
    optional cm.PageInfo paging = 2;
}

message OrderOfReceiptLine {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 shop_id = 2 [(gogoproto.nullable) = false];
    optional string code = 3 [(gogoproto.nullable) = false];
    optional int32 total_amount = 4 [(gogoproto.nullable) = false];
}

message ReceiptLine {
    optional int64 order_id = 1 [(gogoproto.nullable) = false];
    optional string title = 2 [(gogoproto.nullable) = false];
    required int32 amount = 3 [(gogoproto.nullable) = false];
    optional int32 received_amount = 4 [(gogoproto.nullable) = false];
    optional OrderOfReceiptLine order = 5;
}

message Partner {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string type = 2 [(gogoproto.nullable) = false];
    optional string full_name = 3 [(gogoproto.nullable) = false];
}

message Receipt {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 shop_id = 2 [(gogoproto.nullable) = false];
    optional int64 trader_id = 3 [(gogoproto.nullable) = false];
    optional int64 created_by = 4 [(gogoproto.nullable) = false];
    optional string code = 5 [(gogoproto.nullable) = false];
    optional string title = 6 [(gogoproto.nullable) = false];
    optional string type = 7 [(gogoproto.nullable) = false];
    optional string description = 8 [(gogoproto.nullable) = false];
    optional int32 amount = 9 [(gogoproto.nullable) = false];
    optional int64 ledger_id = 10 [(gogoproto.nullable) = false];
    repeated ReceiptLine lines = 11;
    optional status3.Status status = 12 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 13;
    optional google.protobuf.Timestamp updated_at = 14;

    optional etop.User user = 15;
    optional Partner partner = 16;
}

message CreateReceiptRequest {
    optional int64 trader_id = 1 [(gogoproto.nullable) = false];
    optional string title = 2 [(gogoproto.nullable) = false];
    // enum('receipt', 'payment')
    optional string type = 3 [(gogoproto.nullable) = false];
    optional string code = 4 [(gogoproto.nullable) = false];
    optional string description = 5 [(gogoproto.nullable) = false];
    optional int32 amount = 6 [(gogoproto.nullable) = false];
    optional int64 ledger_id = 7 [(gogoproto.nullable) = false];
    repeated ReceiptLine lines = 8;
}

message UpdateReceiptRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 trader_id = 2;
    optional string title = 3;
    optional string code = 4;
    optional string description = 5;
    optional int32 amount = 6;
    optional int64 ledger_id = 7;
    repeated ReceiptLine lines = 8;
}

message GetReceiptsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message ReceiptsResponse {
    repeated Receipt receipts = 1;
    optional cm.PageInfo paging = 2;
}

message GetReceivedAmountByOrderIDResponse {
    optional int32 total_amount = 1 [(gogoproto.nullable) = false];
    optional int32 received_amount = 2 [(gogoproto.nullable) = false];
    optional int64 user_id = 3 [(gogoproto.nullable) = false];
}

message GetShopCollectionsByProductIDRequest {
    optional int64 product_id =1  [(gogoproto.nullable) = false];
}

message CreateInventoryVoucherRequest{
    optional int64 trader_id = 3 [(gogoproto.nullable) = false];
    optional string note = 4  [(gogoproto.nullable) = false];
    repeated InventoryVoucherLine lines = 6;
    optional string type = 5 [(gogoproto.nullable) = false];
    optional string title = 7 [(gogoproto.nullable) = false];
    optional int32 total_amount = 8 [(gogoproto.nullable) = false];

}

message InventoryVoucherLine{
    optional int64 variant_id = 1 [(gogoproto.nullable) = false];
    optional int32 price = 2 [(gogoproto.nullable) = false];
    optional int32 quantity = 5 [(gogoproto.nullable) = false];
}

message CreateInventoryVoucherResponse {
    optional InventoryVoucher inventory= 1;
}

message ConfirmInventoryVoucherRequest{
    optional int64 id = 1 [(gogoproto.nullable) = false];
}

message ConfirmInventoryVoucherResponse{
    optional InventoryVoucher  inventory = 1;
}

message CancelInventoryVoucherRequest{
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string reason = 2 [(gogoproto.nullable) = false];
}

message CancelInventoryVoucherResponse {
    optional InventoryVoucher inventory= 1;
}

message UpdateInventoryVoucherRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 trader_id = 3 [(gogoproto.nullable) = false];
    repeated InventoryVoucherLine lines = 6 [(gogoproto.nullable) = false];
    optional string note = 2 [(gogoproto.nullable) = false];
    optional string type = 4 [(gogoproto.nullable) = false];
    optional string title = 7 [(gogoproto.nullable) = false];
    optional int32 total_amount = 8 [(gogoproto.nullable) = false];
}

message UpdateInventoryVoucherResponse {
    optional InventoryVoucher inventory = 1;
}

message AdjustInventoryQuantityRequest {
    repeated Inventory inventories = 1;
    optional string note = 2 [(gogoproto.nullable) = false];
}

message AdjustInventoryQuantityResponse {
    repeated Inventory inventories = 1;
    repeated InventoryVoucher inventory_vouchers = 2;
}

message GetInventoriesRequest {
    optional cm.Paging paging   = 1 [(gogoproto.nullable) = false];
}

message GetInventoriesResponse {
    repeated Inventory inventories = 1;
}

message GetInventoriesByVariantIDsRequest {
    repeated int64 variant_ids = 1;
}

message Inventory {
    optional int64 shop_id = 1 [(gogoproto.nullable) = false];
    optional int64 variant_id = 2 [(gogoproto.nullable) = false];
    optional int32 quantity_on_hand = 3 [(gogoproto.nullable) = false];
    optional int32 quantity_picked = 4 [(gogoproto.nullable) = false];
    optional int32 purchase_price = 5 [(gogoproto.nullable) = false];
    optional int32 quantity = 6 [(gogoproto.nullable) = false];
}

message InventoryVoucher {
    optional int32 total_amount = 7 [(gogoproto.nullable) = false];
    optional int64 created_by = 8 [(gogoproto.nullable) = false];
	optional int64 updated_by = 9 [(gogoproto.nullable) = false];
    repeated InventoryVoucherLine lines = 1;
    optional int64 trader_id = 2 [(gogoproto.nullable) = false];
    optional string note = 3  [(gogoproto.nullable) = false];
    optional string type = 4 [(gogoproto.nullable) = false];
    optional int64 id = 5 [(gogoproto.nullable) = false];
    optional int64 shop_id = 6 [(gogoproto.nullable) = false];
    optional string title = 15 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 10;
    optional google.protobuf.Timestamp updated_at = 11;
    optional google.protobuf.Timestamp cancelled_at = 12;
    optional google.protobuf.Timestamp comfirmed_at = 13;
    optional string cancel_reason = 14 [(gogoproto.nullable) = false];

}

message GetInventoryVouchersRequest {
    optional cm.Paging paging   = 1 [(gogoproto.nullable) = false];
}

message GetInventoryVouchersByIDsRequest {
    repeated int64 ids = 1;
}

message GetInventoryVouchersResponse {
    repeated InventoryVoucher inventory_vouchers = 1;
}

message CustomerGroup {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
}

message CreateCustomerGroupRequest {
    optional string name = 1 [(gogoproto.nullable) = false];
}

message UpdateCustomerGroupRequest {
    optional int64 group_id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
}

message GetCustomerGroupsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
}

message CustomerGroupsResponse {
    repeated CustomerGroup customer_groups = 1;
    optional cm.PageInfo paging = 2;
}

message GetOrdersByReceiptIDRequest{
    optional int64 receipt_id = 1 [(gogoproto.nullable) = false];
}

message GetInventoryRequest {
    optional int64 variant_id = 1 [(gogoproto.nullable) = false];
}
