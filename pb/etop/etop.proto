syntax = "proto2";
package etop;
option go_package = "etop.vn/backend/pb/etop";

import "protoc-gen-swagger/options/annotations.proto";
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "eTop API";
        version:"v1";
        description:"API Documentation:\n- [/doc/etop](/doc/etop) Shared API for managing login and account\n- [/doc/shop](/doc/shop) API for shops\n- [/doc/admin](/doc/admin) API for eTop admins\n- [/doc/ext/shop](/doc/ext/shop) External API for shops\n- [/doc/ext/partner](/doc/ext/partner) External API for partners\n- [/doc/sadmin](/doc/sadmin) Special API for super admins";
        };
};

import "gogoproto/gogo.proto";
option (gogoproto.equal_all)                = false;
option (gogoproto.gogoproto_import)         = false;
option (gogoproto.goproto_enum_prefix_all)  = true;
option (gogoproto.goproto_getters_all)      = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all)             = false;
option (gogoproto.marshaler_all)            = false;
option (gogoproto.onlyone_all)              = false;
option (gogoproto.sizer_all)                = false;
option (gogoproto.testgen_all)              = false;
option (gogoproto.unmarshaler_all)          = false;
option (gogoproto.verbose_equal_all)        = false;

import "google/protobuf/timestamp.proto";
import "common/common.proto";
import "etop/etc/try_on/code.proto";
import "etop/etc/status3/status.proto";
import "etop/etc/address_type/type.proto";
import "etop/etc/shipping_provider/provider.proto";

service MiscService {
    rpc VersionInfo(cm.Empty) returns (cm.VersionInfoResponse);
}

service UserService {
    // Register
    //
    // Register a new user or after a user has login using generated password.
    rpc Register(CreateUserRequest) returns (RegisterResponse);

    // Login
    //
    // Log the user in and generate access token.
    rpc Login(LoginRequest) returns (LoginResponse);

    // SessionInfo
    //
    // Return current session info.
    rpc SessionInfo(cm.Empty) returns (LoginResponse);

    // SwitchAccount
    //
    // Response error if the user does not have permission to the requested account.
    rpc SwitchAccount(SwitchAccountRequest) returns (AccessTokenResponse);

    //== SToken ==//

    rpc SendSTokenEmail(SendSTokenEmailRequest) returns (cm.MessageResponse);

    rpc UpgradeAccessToken(UpgradeAccessTokenRequest) returns (AccessTokenResponse);

    // Password

    // ResetPassword
    //
    // Send email or sms to allow the user reset their password.
    rpc ResetPassword(ResetPasswordRequest) returns (cm.MessageResponse);

    // ChangePassword
    //
    // Change the user password
    rpc ChangePassword(ChangePasswordRequest) returns (cm.Empty);

    // ChangePasswordUsingToken
    //
    // Reset password by providing the token sent to email or phone
    rpc ChangePasswordUsingToken(ChangePasswordUsingTokenRequest) returns (cm.Empty);

    // Verification

    rpc SendEmailVerification(SendEmailVerificationRequest) returns (cm.MessageResponse);

    rpc SendPhoneVerification(SendPhoneVerificationRequest) returns (cm.MessageResponse);

    rpc VerifyEmailUsingToken(VerifyEmailUsingTokenRequest) returns (cm.MessageResponse);

    rpc VerifyPhoneUsingToken(VerifyPhoneUsingTokenRequest) returns (cm.MessageResponse);

    rpc UpdatePermission(UpdatePermissionRequest) returns (UpdatePermissionResponse);
}

service AccountService {
    rpc UpdateURLSlug(UpdateURLSlugRequest) returns (cm.Empty);
    rpc GetPublicPartnerInfo(cm.IDRequest) returns (PublicAccountInfo);

    // leave ids empty to get all connected partners
    rpc GetPublicPartners(cm.IDsRequest) returns (PublicAccountsResponse);
}

service RelationshipService {
    rpc InviteUserToAccount (InviteUserToAccountRequest) returns (UserAccountInfo);
    rpc AnswerInvitation (AnswerInvitationRequest) returns (UserAccountInfo);
    rpc GetUsersInCurrentAccounts (GetUsersInCurrentAccountsRequest) returns (ProtectedUsersResponse);
    rpc LeaveAccount (LeaveAccountRequest) returns (cm.Empty);
    rpc RemoveUserFromCurrentAccount (RemoveUserFromCurrentAccountRequest) returns (cm.Empty);
}

service LocationService {
    rpc GetProvinces(cm.Empty) returns (GetProvincesResponse);
    rpc GetDistricts(cm.Empty) returns (GetDistrictsResponse);
    rpc GetDistrictsByProvince(GetDistrictsByProvinceRequest) returns (GetDistrictsResponse);
    rpc GetWards(cm.Empty) returns (GetWardsResponse);
    rpc GetWardsByDistrict(GetWardsByDistrictRequest) returns (GetWardsResponse);
    rpc ParseLocation(ParseLocationRequest) returns (ParseLocationResponse);
}

service BankService {
    rpc GetBanks(cm.Empty) returns (GetBanksResponse);
    rpc GetProvincesByBank(GetProvincesByBankResquest) returns (GetBankProvincesResponse);
    rpc GetBranchesByBankProvince(GetBranchesByBankProvinceResquest) returns (GetBranchesByBankProvinceResponse);
}

service AddressService {
    rpc CreateAddress(CreateAddressRequest) returns (Address);
    rpc GetAddresses(cm.Empty) returns (GetAddressResponse);
    rpc UpdateAddress(UpdateAddressRequest) returns (Address);
    rpc RemoveAddress(cm.IDRequest) returns (cm.Empty);
}

// Indicates whether given account is **etop**, **shop** or **supplier**.
enum AccountType {
    unknown  = 0;
    partner  = 21;
    shop     = 33;
    supplier = 65;
    etop     = 101;
}

// Represents a user in eTop system. The user may or may not have associated accounts.
message User {
    // @required
    optional int64  id         = 1 [(gogoproto.nullable) = false];

    // @required
    optional string full_name  = 2 [(gogoproto.nullable) = false];

    // @required
    optional string short_name = 3 [(gogoproto.nullable) = false];

    // @required
    optional string phone      = 4 [(gogoproto.nullable) = false];

    // @required
    optional string email      = 5 [(gogoproto.nullable) = false];

    // @required
    optional google.protobuf.Timestamp created_at = 6;

    // @required
    optional google.protobuf.Timestamp updated_at = 7;

    optional google.protobuf.Timestamp email_verified_at = 8;

    optional google.protobuf.Timestamp phone_verified_at = 9;

    optional google.protobuf.Timestamp email_verification_sent_at = 10;

    optional google.protobuf.Timestamp phone_verification_sent_at = 11;
}

message IDsRequest {
    // @required
    repeated int64 ids = 1;

    optional MixedAccount mixed = 2;
}

message MixedAccount {
    repeated int64 ids = 1;
    optional bool  all = 2 [(gogoproto.nullable) = false];
    optional bool  all_shops = 3 [(gogoproto.nullable) = false];
    optional bool  all_suppliers = 4 [(gogoproto.nullable) = false];
}

message Partner {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional string public_name = 24 [(gogoproto.nullable) = false];
    optional status3.Status status = 3 [(gogoproto.nullable) = false];
    optional bool is_test = 4 [(gogoproto.nullable) = false];
    repeated ContactPerson contact_persons = 8;
    optional string phone = 9 [(gogoproto.nullable) = false];
    optional string website_url = 14 [(gogoproto.nullable) = false];
    optional string image_url = 15 [(gogoproto.nullable) = false];
    optional string email = 16 [(gogoproto.nullable) = false];
    optional int64 owner_id = 22 [(gogoproto.nullable) = false];
    optional User  user          = 23;
}

message PublicAccountInfo {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional AccountType type = 3 [(gogoproto.nullable) = false];
    optional string image_url = 4 [(gogoproto.nullable) = false];
    optional string website = 5 [(gogoproto.nullable) = false]; // only domain, no http
}

message PublicAuthorizedPartnerInfo {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional AccountType type = 3 [(gogoproto.nullable) = false];
    optional string image_url = 4 [(gogoproto.nullable) = false];
    optional string website = 5 [(gogoproto.nullable) = false]; // only domain, no http
    optional string redirect_url = 6 [(gogoproto.nullable) = false];
}

message PublicAccountsResponse {
    repeated PublicAccountInfo accounts = 1;
}

message Shop {
    repeated string exported_fields = 100;

    optional int64  id   = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional status3.Status status = 3 [(gogoproto.nullable) = false];
    optional bool is_test = 4 [(gogoproto.nullable) = false];
    optional Address address = 5;
    optional string phone = 9 [(gogoproto.nullable) = false];
    optional etop.BankAccount bank_account = 10;
    optional bool auto_create_ffm = 20 [(gogoproto.nullable) = false];

    optional string website_url = 14 [(gogoproto.nullable) = false];
    optional string image_url = 15 [(gogoproto.nullable) = false];
    optional string email = 16 [(gogoproto.nullable) = false];
    optional int64 product_source_id = 17 [(gogoproto.nullable) = false];
    optional int64 ship_to_address_id = 18 [(gogoproto.nullable) = false];
    optional int64 ship_from_address_id = 19 [(gogoproto.nullable) = false];

    // @deprecated use try_on instead
    optional string ghn_note_code = 21 [(gogoproto.nullable) = false];
    optional try_on.TryOnCode try_on = 24 [(gogoproto.nullable) = false];

    optional int64 owner_id = 22 [(gogoproto.nullable) = false];
    optional User  user          = 23;
    optional CompanyInfo company_info = 25;
    // referrence: https://icalendar.org/rrule-tool.html
    optional string money_transaction_rrule = 26 [(gogoproto.nullable) = false];
    repeated SurveyInfo survey_info = 27;
    repeated ShippingServiceSelectStrategyItem shipping_service_select_strategy = 28;
    optional string code = 29 [(gogoproto.nullable) = false];
}

message ShippingServiceSelectStrategyItem {
    optional string key = 1 [(gogoproto.nullable) = false];
    optional string value = 2 [(gogoproto.nullable) = false];
}

message SurveyInfo {
    optional string key = 1 [(gogoproto.nullable) = false];
    optional string question = 2 [(gogoproto.nullable) = false];
    optional string answer = 3 [(gogoproto.nullable) = false];
}

message CreateUserRequest {
    // @required
    optional string full_name  = 1 [(gogoproto.nullable) = false];

    // Can be automatically deduce from full_name.
    optional string short_name = 2 [(gogoproto.nullable) = false];

    // @required
    optional string phone      = 3 [(gogoproto.nullable) = false];

    // It's not required if the user provides register_token
    optional string email      = 4 [(gogoproto.nullable) = false];

    // @required
    optional string password   = 5 [(gogoproto.nullable) = false];

    // @required
    optional bool agree_tos   = 6 [(gogoproto.nullable) = false];

    // @required
    optional bool agree_email_info = 7; // nullable = true

    // This field must be set if the user uses generated password to register.
    // Automatically set phone_verified if it's sent within a specific time.
    optional string register_token = 8 [(gogoproto.nullable) = false];
}

message RegisterResponse {
    // @required
    optional User user = 1;
}

// Exactly one of phone or email must be provided.
message ResetPasswordRequest {
    // Phone number to send reset password instruction.
    optional string phone = 1 [(gogoproto.nullable) = false];

    // Email address to send reset password instruction.
    optional string email = 2 [(gogoproto.nullable) = false];
}

// Exactly one of current_password or reset_password_token must be provided.
message ChangePasswordRequest {
    // @required
    optional string current_password = 2 [(gogoproto.nullable) = false];

    // @required
    optional string new_password = 3 [(gogoproto.nullable) = false];

    // @required
    optional string confirm_password = 4 [(gogoproto.nullable) = false];
}

// Exactly one of email or phone must be provided.
message ChangePasswordUsingTokenRequest {
    optional string email = 1 [(gogoproto.nullable) = false];

    optional string phone = 2 [(gogoproto.nullable) = false];

    // @required
    optional string reset_password_token = 3 [(gogoproto.nullable) = false];

    // @required
    optional string new_password = 4 [(gogoproto.nullable) = false];

    // @required
    optional string confirm_password = 5 [(gogoproto.nullable) = false];
}

// Represents permission of the current user relation with an account.
message Permission {
    repeated string roles       = 2;
    repeated string permissions = 3;
}

message LoginRequest {
    // @required Phone or email
    optional string login        = 1 [(gogoproto.nullable) = false];

    // @required
    optional string password     = 2 [(gogoproto.nullable) = false];

    // Automatically switch to this account if available.
    //
    // It's *ignored* if the user *does not* have permission to this account.
    optional int64  account_id   = 3 [(gogoproto.nullable) = false];

    // Automatically switch to the only account of this account type if available.
    //
    // It's *ignored* if the user *does not* have any account of this account type, or if the user *has more than one* account of this account type.
    optional AccountType account_type = 4 [(gogoproto.nullable) = false];

    // Not implemented.
    optional string      account_key  = 5 [(gogoproto.nullable) = false];
}

// Represents an account associated with the current user. It has extra fields to represents relation with the user.
message LoginAccount {
    repeated string exported_fields = 100;

    // @required
    optional int64      id         = 1 [(gogoproto.nullable) = false];

    // @required
    optional string     name       = 2 [(gogoproto.nullable) = false];

    // @required
    optional AccountType type       = 3 [(gogoproto.nullable) = false];

    // Associated token for the account. It's returned when calling Login or
    // SwitchAccount with regenerate_tokens set to true.
    optional string access_token = 5 [(gogoproto.nullable) = false];

    // The same as access_token.
    optional int32  expires_in   = 6 [(gogoproto.nullable) = false];

    optional string image_url = 7 [(gogoproto.nullable) = false];

    optional string url_slug = 8 [(gogoproto.nullable) = false];

    optional UserAccountInfo user_account = 9;
}

message LoginResponse {
    // @required
    optional string       access_token  = 1 [(gogoproto.nullable) = false];

    // @required
    optional int32        expires_in    = 2 [(gogoproto.nullable) = false];

    // @required
    optional User         user          = 3;

    optional LoginAccount account       = 4;
    optional Shop         shop          = 5;

    // @required
    repeated LoginAccount available_accounts = 7;
    repeated UserAccountInfo invitation_accounts = 8;

    optional bool stoken = 9 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp stoken_expires_at = 10;
}

message SwitchAccountRequest {
    // @required
    optional int64 account_id = 1 [(gogoproto.nullable) = false];

    // This field should only be used after creating new accounts. If it is set,
    // account_id can be left empty.
    optional bool regenerate_tokens = 2 [(gogoproto.nullable) = false];
}

message UpgradeAccessTokenRequest {
    // @required
    optional string stoken = 1 [(gogoproto.nullable) = false];

    optional string password = 2 [(gogoproto.nullable) = false];
}

message AccessTokenResponse {
    // @required
    optional string       access_token  = 1 [(gogoproto.nullable) = false];

    // @required
    optional int32        expires_in    = 2 [(gogoproto.nullable) = false];

    // @required
    optional User         user          = 3;

    optional LoginAccount account       = 4;
    optional Shop         shop          = 5;

    optional bool stoken = 8 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp stoken_expires_at = 9;
}

message SendSTokenEmailRequest {
    // @required
    optional string email = 1 [(gogoproto.nullable) = false];

    // @required
    optional int64 account_id = 2 [(gogoproto.nullable) = false];
}

message SendEmailVerificationRequest {
    // @required
    optional string email = 1 [(gogoproto.nullable) = false];
}

message SendPhoneVerificationRequest {
    // @required
    optional string phone = 1 [(gogoproto.nullable) = false];
}

message VerifyEmailUsingTokenRequest {
    // @required
    optional string verification_token = 1 [(gogoproto.nullable) = false];
}

message VerifyPhoneUsingTokenRequest {
    // @required
    optional string verification_token = 1 [(gogoproto.nullable) = false];
}

message InviteUserToAccountRequest {
    // @required account to manage, must be owner of the account
    optional int64 account_id = 1 [(gogoproto.nullable) = false];

    // @required phone or email
    optional string invitee_identifier = 2 [(gogoproto.nullable) = false];

    optional Permission permission = 4;
}

message AnswerInvitationRequest {
    optional int64 account_id = 1 [(gogoproto.nullable) = false];

    optional status3.Status response = 2;
}

message GetUsersInCurrentAccountsRequest {
    optional cm.Paging paging = 1;
    repeated cm.Filter filters = 2;
    optional MixedAccount mixed = 3;
}

message PublicUserInfo {
    // @required
    optional int64 id = 1 [(gogoproto.nullable) = false];

    // @required
    optional string full_name = 2 [(gogoproto.nullable) = false];

    // @required
    optional string short_name = 3 [(gogoproto.nullable) = false];
}

// Presents user information inside an account
message UserAccountInfo {
    // @required
    optional int64 user_id = 1 [(gogoproto.nullable) = false];

    // @required
    optional string user_full_name = 2 [(gogoproto.nullable) = false];

    // @required
    optional string user_short_name = 3 [(gogoproto.nullable) = false];

    // @required
    optional int64 account_id = 4 [(gogoproto.nullable) = false];

    // @required
    optional string account_name = 5 [(gogoproto.nullable) = false];

    // @required
    optional AccountType account_type = 6 [(gogoproto.nullable) = false];

    optional string position = 7 [(gogoproto.nullable) = false];

    // @required
    optional Permission  permission = 8;

    optional status3.Status status = 9 [(gogoproto.nullable) = false];
    optional status3.Status response_status = 10 [(gogoproto.nullable) = false];

    optional int64 invitation_sent_by = 11 [(gogoproto.nullable) = false];

    optional google.protobuf.Timestamp invitation_sent_at     = 12;
    optional google.protobuf.Timestamp invitation_accepted_at = 13;
    optional google.protobuf.Timestamp invitation_rejected_at = 14;

    optional google.protobuf.Timestamp disabled_at = 15;
    optional int64  disabled_by = 16    [(gogoproto.nullable) = false];
    optional string disable_reason = 17 [(gogoproto.nullable) = false];
}

// Prepsents users in current account
message ProtectedUsersResponse {
    optional cm.PageInfo paging    = 1;
    repeated UserAccountInfo users = 2;
}

message LeaveAccountRequest {

}

message RemoveUserFromCurrentAccountRequest {

}

message CategoriesResponse {
    repeated Category categories = 1;
}

message Category {
    // @required
    optional int64 id = 1 [(gogoproto.nullable) = false];

    // @required
    optional string name = 2 [(gogoproto.nullable) = false];

    // @required
    optional status3.Status status = 3 [(gogoproto.nullable) = false];

    optional int64 parent_id = 4 [(gogoproto.nullable) = false];
}

message Province {
    optional string code  = 1 [(gogoproto.nullable) = false];
    optional string name  = 2 [(gogoproto.nullable) = false];
    optional string region = 3 [(gogoproto.nullable) = false];
    optional int64  region_code = 4 [(gogoproto.nullable) = false];
}

message GetProvincesResponse {
    repeated Province provinces = 1;
}

message District {
    optional string code = 1 [(gogoproto.nullable) = false];
    optional string province_code = 2 [(gogoproto.nullable) = false];
    optional string name = 3 [(gogoproto.nullable) = false];
    optional bool is_freeship = 4 [(gogoproto.nullable) = false];
}

message GetDistrictsResponse {
    repeated District districts = 1;
}

message GetDistrictsByProvinceRequest {
    optional string province_code = 1 [(gogoproto.nullable) = false];
    optional string province_name = 2 [(gogoproto.nullable) = false];
}

message Ward {
    optional string code = 1 [(gogoproto.nullable) = false];
    optional string district_code = 2 [(gogoproto.nullable) = false];
    optional string name = 3 [(gogoproto.nullable) = false];
}

message GetWardsResponse {
    repeated Ward wards = 1;
}

message GetWardsByDistrictRequest {
    optional string district_code = 1 [(gogoproto.nullable) = false];
    optional string district_name = 2 [(gogoproto.nullable) = false];
}

message ParseLocationRequest {
    optional string province_name = 1 [(gogoproto.nullable) = false];
    optional string district_name = 2 [(gogoproto.nullable) = false];
    optional string ward_name = 3 [(gogoproto.nullable) = false];
}

message ParseLocationResponse {
    optional Province province = 1;
    optional District district = 2;
    optional Ward ward = 3;
}

message Bank {
    optional string code = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional string type = 3 [(gogoproto.nullable) = false];
}

message GetBanksResponse {
    repeated Bank banks = 1;
}

message BankProvince {
    optional string code = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional string bank_code = 3 [(gogoproto.nullable) = false];
}

message GetBankProvincesResponse {
    repeated BankProvince provinces = 1;
}

message GetProvincesByBankResquest {
    optional string bank_code = 1 [(gogoproto.nullable) = false];
    optional string bank_name = 2 [(gogoproto.nullable) = false];
}

message BankBranch {
    optional string code = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional string bank_code = 3 [(gogoproto.nullable) = false];
    optional string province_code = 4 [(gogoproto.nullable) = false];
}

message GetBranchesByBankProvinceResponse {
    repeated BankBranch branches = 1;
}

message GetBranchesByBankProvinceResquest {
    optional string bank_code = 1 [(gogoproto.nullable) = false];
    optional string bank_name = 2 [(gogoproto.nullable) = false];
    optional string province_code = 3 [(gogoproto.nullable) = false];
    optional string province_name = 4 [(gogoproto.nullable) = false];
}

message Address {
    repeated string exported_fields = 100;

    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string province = 2 [(gogoproto.nullable) = false];
    optional string province_code = 6 [(gogoproto.nullable) = false];
    optional string district = 3 [(gogoproto.nullable) = false];
    optional string district_code = 7 [(gogoproto.nullable) = false];
    optional string ward = 4 [(gogoproto.nullable) = false];
    optional string ward_code = 8 [(gogoproto.nullable) = false];
    optional string address1 = 5 [(gogoproto.nullable) = false];
    optional string address2 = 9 [(gogoproto.nullable) = false];
    optional string zip = 10 [(gogoproto.nullable) = false];
    optional string country = 11 [(gogoproto.nullable) = false];

    optional string full_name = 12 [(gogoproto.nullable) = false];
    optional string first_name = 13 [(gogoproto.nullable) = false];
    optional string last_name = 14 [(gogoproto.nullable) = false];
    optional string phone = 15 [(gogoproto.nullable) = false];
    optional string email = 16 [(gogoproto.nullable) = false];
    optional string position = 17 [(gogoproto.nullable) = false];
    optional address_type.AddressType type = 18 [(gogoproto.nullable) = false];
    optional AddressNote notes = 19;
}

message BankAccount {
    optional string name = 1 [(gogoproto.nullable) = false];
    optional string province = 2 [(gogoproto.nullable) = false];
    optional string branch = 3 [(gogoproto.nullable) = false];
    optional string account_number = 4 [(gogoproto.nullable) = false];
    optional string account_name = 5 [(gogoproto.nullable) = false];
}

message ContactPerson {
    optional string name = 1 [(gogoproto.nullable) = false];
    optional string position = 2 [(gogoproto.nullable) = false];
    optional string phone = 3 [(gogoproto.nullable) = false];
    optional string email = 4 [(gogoproto.nullable) = false];
}

message CompanyInfo {
    optional string name = 1 [(gogoproto.nullable) = false];
    optional string tax_code = 2 [(gogoproto.nullable) = false];
    optional string address = 3 [(gogoproto.nullable) = false];
    optional string website = 5 [(gogoproto.nullable) = false];
    optional ContactPerson legal_representative = 4;
}

message CreateAddressRequest {
    optional string province = 2 [(gogoproto.nullable) = false];
    // @required
    optional string province_code = 6 [(gogoproto.nullable) = false];
    optional string district = 3 [(gogoproto.nullable) = false];
    // @required
    optional string district_code = 7 [(gogoproto.nullable) = false];
    optional string ward = 4 [(gogoproto.nullable) = false];
    // @required
    optional string ward_code = 8 [(gogoproto.nullable) = false];
    optional string address1 = 5 [(gogoproto.nullable) = false];
    optional string address2 = 9 [(gogoproto.nullable) = false];
    optional string zip = 10 [(gogoproto.nullable) = false];
    optional string country = 11 [(gogoproto.nullable) = false];

    optional string full_name = 12 [(gogoproto.nullable) = false];
    optional string first_name = 13 [(gogoproto.nullable) = false];
    optional string last_name = 14 [(gogoproto.nullable) = false];
    optional string phone = 15 [(gogoproto.nullable) = false];
    optional string email = 16 [(gogoproto.nullable) = false];
    optional string position = 17 [(gogoproto.nullable) = false];
    optional address_type.AddressType type = 18 [(gogoproto.nullable) = false];
    optional AddressNote notes = 19;
}

message AddressNote {
    optional string note = 1 [(gogoproto.nullable) = false];
    optional string open_time = 2 [(gogoproto.nullable) = false];
    optional string lunch_break = 3 [(gogoproto.nullable) = false];
    optional string other = 4 [(gogoproto.nullable) = false];
}

message GetAddressResponse {
    repeated Address addresses = 1;
}

message UpdateAddressRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string province = 2 [(gogoproto.nullable) = false];
    // @required
    optional string province_code = 6 [(gogoproto.nullable) = false];
    optional string district = 3 [(gogoproto.nullable) = false];
    // @required
    optional string district_code = 7 [(gogoproto.nullable) = false];
    optional string ward = 4 [(gogoproto.nullable) = false];
    // @required
    optional string ward_code = 8 [(gogoproto.nullable) = false];
    optional string address1 = 5 [(gogoproto.nullable) = false];
    optional string address2 = 9 [(gogoproto.nullable) = false];
    optional string zip = 10 [(gogoproto.nullable) = false];
    optional string country = 11 [(gogoproto.nullable) = false];

    optional string full_name = 12 [(gogoproto.nullable) = false];
    optional string first_name = 13 [(gogoproto.nullable) = false];
    optional string last_name = 14 [(gogoproto.nullable) = false];
    optional string phone = 15 [(gogoproto.nullable) = false];
    optional string email = 16 [(gogoproto.nullable) = false];
    optional string position = 17 [(gogoproto.nullable) = false];
    optional address_type.AddressType type = 18 [(gogoproto.nullable) = false];
    optional AddressNote notes = 19;
}

message SetDefaultAddressRequest {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional address_type.AddressType type = 2 [(gogoproto.nullable) = false];
}

message UpdateURLSlugRequest {
    optional int64 account_id = 1 [(gogoproto.nullable) = false];
    optional string url_slug  = 2;
}

message HistoryResponse {
    optional cm.PageInfo paging    = 1;
    optional cm.RawJSONObject data = 2;
}

message Credit {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional int64 amount = 2 [(gogoproto.nullable) = false];
    optional int64 shop_id = 3 [(gogoproto.nullable) = false];
    optional string type = 5 [(gogoproto.nullable) = false];
    optional etop.Shop shop = 6;

    optional google.protobuf.Timestamp created_at = 7;
    optional google.protobuf.Timestamp updated_at = 8;
    optional google.protobuf.Timestamp paid_at = 9;
    optional status3.Status status = 10 [(gogoproto.nullable) = false];
}

message CreditsResponse {
    optional cm.PageInfo paging = 1;
    repeated Credit credits = 2;
}

message UpdatePermissionRequest {
    repeated UpdatePermissionItem items = 1;
}

message UpdatePermissionItem {
    optional string type = 1 [(gogoproto.nullable) = false];
    optional string key  = 2 [(gogoproto.nullable) = false];
    repeated string grants  = 3;
    repeated string revokes = 4;
    repeated string replace_all = 5;
    optional bool   revoke_all  = 6 [(gogoproto.nullable) = false];
}

message UpdatePermissionResponse {
    optional string msg = 1 [(gogoproto.nullable) = false];
}

message Device {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string device_id = 2 [(gogoproto.nullable) = false];
    optional string device_name = 3 [(gogoproto.nullable) = false];
    optional string external_device_id = 4 [(gogoproto.nullable) = false];
    optional int32 external_service_id = 8 [(gogoproto.nullable) = false];
    optional int64 account_id = 5 [(gogoproto.nullable) = false];

    optional google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
}

message Notification {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string title = 2 [(gogoproto.nullable) = false];
    optional string message = 3 [(gogoproto.nullable) = false];
    optional bool is_read = 4 [(gogoproto.nullable) = false];
    optional string entity = 5 [(gogoproto.nullable) = false];
    optional int64 entity_id = 6 [(gogoproto.nullable) = false];
    optional int64 account_id = 7 [(gogoproto.nullable) = false];
    optional bool send_notification = 12 [(gogoproto.nullable) = false];

    optional google.protobuf.Timestamp seen_at = 8;
    optional google.protobuf.Timestamp created_at = 9;
    optional google.protobuf.Timestamp updated_at = 10;

    optional status3.Status sync_status = 11 [(gogoproto.nullable) = false];
}

message CreateDeviceRequest {
    optional string device_id = 1 [(gogoproto.nullable) = false];
    optional string device_name = 2 [(gogoproto.nullable) = false];
    optional string external_device_id = 3 [(gogoproto.nullable) = false];
}

message DeleteDeviceRequest {
    optional string device_id = 1 [(gogoproto.nullable) = false];
}

message GetNotificationsRequest {
    optional cm.Paging paging = 2;
}

message NotificationsResponse {
    optional cm.PageInfo paging = 1;
    repeated Notification notifications = 2;
}

message UpdateNotificationsRequest {
    repeated int64 ids = 1;
    optional bool is_read = 2 [(gogoproto.nullable) = false];
}
