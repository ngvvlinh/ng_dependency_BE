// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: etop/etc/try_on/code.proto

package try_on

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TryOnCode int32

const (
	TryOnCode_unknown TryOnCode = 0
	TryOnCode_none    TryOnCode = 1
	TryOnCode_open    TryOnCode = 2
	TryOnCode_try     TryOnCode = 3
)

var TryOnCode_name = map[int32]string{
	0: "unknown",
	1: "none",
	2: "open",
	3: "try",
}

var TryOnCode_value = map[string]int32{
	"unknown": 0,
	"none":    1,
	"open":    2,
	"try":     3,
}

func (x TryOnCode) Enum() *TryOnCode {
	p := new(TryOnCode)
	*p = x
	return p
}

func (x TryOnCode) String() string {
	return proto.EnumName(TryOnCode_name, int32(x))
}

func (x *TryOnCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TryOnCode_value, data, "TryOnCode")
	if err != nil {
		return err
	}
	*x = TryOnCode(value)
	return nil
}

func (TryOnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1faae46b780f8e42, []int{0}
}

func init() {
	proto.RegisterEnum("try_on.TryOnCode", TryOnCode_name, TryOnCode_value)
}

func init() { proto.RegisterFile("etop/etc/try_on/code.proto", fileDescriptor_1faae46b780f8e42) }

var fileDescriptor_1faae46b780f8e42 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4a, 0x2d, 0xc9, 0x2f,
	0xd0, 0x4f, 0x2d, 0x49, 0xd6, 0x2f, 0x29, 0xaa, 0x8c, 0xcf, 0xcf, 0xd3, 0x4f, 0xce, 0x4f, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0x08, 0x49, 0x89, 0xa4, 0xe7, 0xa7, 0xe7,
	0x83, 0x85, 0xf4, 0x41, 0x2c, 0x88, 0xac, 0x96, 0x29, 0x17, 0x67, 0x48, 0x51, 0xa5, 0x7f, 0x9e,
	0x73, 0x7e, 0x4a, 0xaa, 0x10, 0x37, 0x17, 0x7b, 0x69, 0x5e, 0x76, 0x5e, 0x7e, 0x79, 0x9e, 0x00,
	0x83, 0x10, 0x07, 0x17, 0x4b, 0x5e, 0x7e, 0x5e, 0xaa, 0x00, 0x23, 0x88, 0x95, 0x5f, 0x90, 0x9a,
	0x27, 0xc0, 0x24, 0xc4, 0xce, 0xc5, 0x5c, 0x52, 0x54, 0x29, 0xc0, 0xec, 0xa4, 0x31, 0xe3, 0xb1,
	0x1c, 0x43, 0x94, 0x12, 0xc8, 0x5a, 0xbd, 0xb2, 0x3c, 0xfd, 0xa4, 0xc4, 0xe4, 0xec, 0xd4, 0xbc,
	0x14, 0xfd, 0x82, 0x24, 0x7d, 0x34, 0x97, 0x00, 0x02, 0x00, 0x00, 0xff, 0xff, 0x22, 0x5c, 0x7c,
	0x12, 0x9b, 0x00, 0x00, 0x00,
}
