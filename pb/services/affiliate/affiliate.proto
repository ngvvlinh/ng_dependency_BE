syntax = "proto2";
package affiliate;
option go_package = "etop.vn/backend/pb/services/affiliate";
import "gogoproto/gogo.proto";
option (gogoproto.equal_all)                = false;
option (gogoproto.gogoproto_import)         = false;
option (gogoproto.goproto_enum_prefix_all)  = true;
option (gogoproto.goproto_getters_all)      = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all)             = false;
option (gogoproto.marshaler_all)            = false;
option (gogoproto.onlyone_all)              = false;
option (gogoproto.sizer_all)                = false;
option (gogoproto.testgen_all)              = false;
option (gogoproto.unmarshaler_all)          = false;
option (gogoproto.verbose_equal_all)        = false;
import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "etop/shop/shop.proto";
//service MiscService {
//    rpc VersionInfo(cm.Empty) returns (cm.VersionInfoResponse);
//}
service AffiliateService {
    rpc GetCommissions (cm.Paging) returns (GetCommissionsResponse);
    rpc NotifyNewShopPurchase (NotifyNewShopPurchaseRequest) returns (NotifyNewShopPurchaseResponse);
    rpc GetTransactions (cm.Paging) returns (GetTransactionsResponse);
    rpc CreateOrUpdateTradingCommissionSetting (CreateOrUpdateCommissionSettingRequest) returns (CommissionSetting);
    rpc CreateOrUpdateAffiliateCommissionSetting (CreateOrUpdateCommissionSettingRequest) returns (CommissionSetting);
    rpc GetProductPromotionByProductID (GetProductPromotionByProductIDRequest) returns (GetProductPromotionByProductIDResponse);
    rpc CreateProductPromotion (CreateOrUpdateProductPromotionRequest) returns (ProductPromotion);
    rpc UpdateProductPromotion (CreateOrUpdateProductPromotionRequest) returns (ProductPromotion);
    rpc TradingGetProducts (cm.CommonListRequest) returns (ShopGetProductsResponse);
    rpc AffiliateGetProducts (cm.CommonListRequest) returns (AffiliateGetProductsResponse);
}

message GetCommissionsResponse {
    optional string message = 1 [(gogoproto.nullable) = false];
}
message NotifyNewShopPurchaseRequest {
    optional int64 order_id = 1 [(gogoproto.nullable) = false];
}
message NotifyNewShopPurchaseResponse {
    optional string message = 1 [(gogoproto.nullable) = false];
}
message GetCouponsResponse {
    repeated Coupon coupons = 1;
}
message CreateCouponRequest {
    optional int32 value = 1 [(gogoproto.nullable) = false];
    optional string unit = 2 [(gogoproto.nullable) = true];
    optional string description = 3 [(gogoproto.nullable) = true];
    optional int64 product_id = 4 [(gogoproto.nullable) = false];
}
message Coupon {
    optional int64 id = 1 [(gogoproto.nullable) = false];
    optional string code = 2 [(gogoproto.nullable) = false];
    optional int32 value = 3 [(gogoproto.nullable) = false];
    optional string unit = 4 [(gogoproto.nullable) = false];
    optional string description = 5 [(gogoproto.nullable) = true];
    optional int64 user_id = 6 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp start_date = 7;
    optional google.protobuf.Timestamp end_date = 8;
    optional int64 product_id = 9 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 10;
    optional google.protobuf.Timestamp updated_at = 11;
}
message GetTransactionsResponse {
    repeated Transaction transactions = 1;
}
message Transaction {
}

message CommissionSetting {
    optional int64 product_id = 2 [(gogoproto.nullable) = false];
    optional int32 amount = 3 [(gogoproto.nullable) = false];
    optional string unit = 4 [(gogoproto.nullable) = false];
    optional google.protobuf.Timestamp created_at = 5;
    optional google.protobuf.Timestamp updated_at = 6;
}

message GetEtopCommissionSettingByProductIDsRequest {
    repeated int64 product_ids = 1;
}

message GetEtopCommissionSettingByProductIDsResponse {
    repeated CommissionSetting etop_commission_settings = 1;
}

message GetCommissionSettingByProductIDsRequest {
    repeated int64 product_ids = 1;
}

message GetCommissionSettingByProductIDsResponse {
    repeated CommissionSetting commission_settings = 1;
}

message CreateOrUpdateCommissionSettingRequest {
    optional int64 product_id = 1 [(gogoproto.nullable) = false];
    optional int32 amount = 2 [(gogoproto.nullable) = false];
    optional string unit = 3 [(gogoproto.nullable) = true];
    optional string type = 4 [(gogoproto.nullable) = true];
}

message ProductPromotion {

}

message CreateOrUpdateProductPromotionRequest {

}

message GetProductPromotionByProductIDRequest {

}

message GetProductPromotionByProductIDResponse {

}


message ShopProductResponse {
    optional shop.ShopProduct product = 1;
    optional CommissionSetting shop_commission_setting = 2;
}

message AffiliateProductResponse {
    optional shop.ShopProduct product = 1;
    optional CommissionSetting shop_commission_setting = 2;
    optional CommissionSetting affiliate_commission_setting = 3;
}

message ShopGetProductsResponse {
    optional cm.PageInfo paging = 1;
    repeated ShopProductResponse products = 2;
}

message AffiliateGetProductsResponse {
    optional cm.PageInfo paging = 1;
    repeated AffiliateProductResponse products = 2;
}