// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/pgevent/pgevent.proto

package pgevent

import (
	_ "etop.vn/backend/pb/common"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GenerateEventsRequest struct {
	// Be careful, as invalid message can cause errors in other services!
	//
	// Format: `table:rid:op:id`
	// Example: `fulfillment:81460:INSERT:1052886332676874435`
	RawEvents []string `protobuf:"bytes,1,rep,name=raw_events,json=rawEvents" json:"raw_events,omitempty"`
	// Example: `{fulfillment:81460:INSERT:1052886332676874435,fulfillment:81461:UPDATE:1052886332676874435}`
	RawEventsPg string `protobuf:"bytes,2,opt,name=raw_events_pg,json=rawEventsPg" json:"raw_events_pg"`
	// Control how many events are dispatched asynchronously as a group.
	// We don't want to dispatch too many events together.
	// Example: 100. Default: 0 - events are dispatched synchronously.
	ItemsPerBatch        int32    `protobuf:"varint,3,opt,name=items_per_batch,json=itemsPerBatch" json:"items_per_batch"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateEventsRequest) Reset()         { *m = GenerateEventsRequest{} }
func (m *GenerateEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateEventsRequest) ProtoMessage()    {}
func (*GenerateEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b68be7a11d2d0011, []int{0}
}
func (m *GenerateEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateEventsRequest.Unmarshal(m, b)
}
func (m *GenerateEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateEventsRequest.Marshal(b, m, deterministic)
}
func (m *GenerateEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateEventsRequest.Merge(m, src)
}
func (m *GenerateEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateEventsRequest.Size(m)
}
func (m *GenerateEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateEventsRequest proto.InternalMessageInfo

func (m *GenerateEventsRequest) GetRawEvents() []string {
	if m != nil {
		return m.RawEvents
	}
	return nil
}

func (m *GenerateEventsRequest) GetRawEventsPg() string {
	if m != nil {
		return m.RawEventsPg
	}
	return ""
}

func (m *GenerateEventsRequest) GetItemsPerBatch() int32 {
	if m != nil {
		return m.ItemsPerBatch
	}
	return 0
}

func init() {
	proto.RegisterType((*GenerateEventsRequest)(nil), "pgevent.GenerateEventsRequest")
}

func init() { proto.RegisterFile("services/pgevent/pgevent.proto", fileDescriptor_b68be7a11d2d0011) }

var fileDescriptor_b68be7a11d2d0011 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x41, 0x6a, 0xdb, 0x40,
	0x14, 0x1d, 0xd5, 0x2d, 0x45, 0xe3, 0xba, 0x05, 0xb5, 0xa5, 0x46, 0xd0, 0xa9, 0x69, 0x37, 0x5a,
	0xd8, 0x1a, 0xea, 0x6d, 0x37, 0xc5, 0x60, 0x42, 0x08, 0x01, 0xa3, 0x90, 0x2c, 0xb2, 0x11, 0x63,
	0xe5, 0x67, 0x22, 0x82, 0x66, 0x26, 0x33, 0x13, 0x9b, 0xdc, 0x20, 0xab, 0x90, 0x65, 0x8e, 0x90,
	0x23, 0xe4, 0x08, 0x5e, 0xfa, 0x04, 0xc1, 0x92, 0x2f, 0x90, 0x23, 0x04, 0x49, 0x76, 0x9c, 0x84,
	0xac, 0xfe, 0xfb, 0xff, 0xbd, 0x99, 0xc7, 0x7f, 0x1f, 0x13, 0x03, 0x7a, 0x92, 0x26, 0x60, 0xa8,
	0xe2, 0x30, 0x01, 0x61, 0xd7, 0x35, 0x54, 0x5a, 0x5a, 0xe9, 0x7d, 0x5c, 0xb5, 0x7e, 0xb7, 0xea,
	0x93, 0x1e, 0x07, 0xd1, 0x33, 0x53, 0xc6, 0x39, 0x68, 0x2a, 0x95, 0x4d, 0xa5, 0x30, 0x94, 0x09,
	0x21, 0x2d, 0xab, 0x70, 0xfd, 0xcc, 0xff, 0xc6, 0x25, 0x97, 0x15, 0xa4, 0x25, 0x5a, 0x4d, 0xbf,
	0x26, 0x32, 0xcb, 0xa4, 0xa0, 0x75, 0xa9, 0x87, 0xbf, 0xaf, 0x1c, 0xfc, 0x7d, 0x0b, 0x04, 0x68,
	0x66, 0x61, 0x58, 0x5a, 0x99, 0x08, 0xce, 0xce, 0xc1, 0x58, 0xef, 0x27, 0xc6, 0x9a, 0x4d, 0xe3,
	0xca, 0xdf, 0xb4, 0x9d, 0x4e, 0x23, 0x70, 0x23, 0x57, 0xb3, 0x69, 0xad, 0xf2, 0x02, 0xdc, 0xda,
	0xd0, 0xb1, 0xe2, 0xed, 0x77, 0x1d, 0x27, 0x70, 0x07, 0xef, 0x67, 0xf7, 0xbf, 0x50, 0xd4, 0x7c,
	0xd2, 0x8d, 0xb8, 0xd7, 0xc5, 0x5f, 0x52, 0x0b, 0x99, 0x89, 0x15, 0xe8, 0x78, 0xcc, 0x6c, 0x72,
	0xd2, 0x6e, 0x74, 0x9c, 0xe0, 0xc3, 0x4a, 0xdb, 0xaa, 0xc8, 0x11, 0xe8, 0x41, 0x49, 0xf5, 0xff,
	0xe3, 0xe6, 0x6e, 0x6a, 0x92, 0xbd, 0x3a, 0x18, 0xef, 0x2f, 0x6e, 0x1e, 0x80, 0x36, 0xa9, 0x14,
	0xdb, 0xe2, 0x58, 0x7a, 0x6e, 0x98, 0x64, 0xe1, 0x30, 0x53, 0xf6, 0xc2, 0xff, 0x51, 0xc2, 0x67,
	0x5c, 0x04, 0x46, 0x49, 0x61, 0xa0, 0xbf, 0x83, 0x3f, 0x55, 0xde, 0xeb, 0x2f, 0xfe, 0xe1, 0xcf,
	0x2f, 0x37, 0xf4, 0x48, 0xb8, 0x8e, 0xf9, 0xcd, 0xd5, 0xfd, 0x8d, 0xcb, 0x60, 0x7f, 0x96, 0x13,
	0x67, 0x9e, 0x13, 0x67, 0x91, 0x13, 0xf4, 0x90, 0x13, 0x74, 0x59, 0x10, 0x74, 0x5b, 0x10, 0x74,
	0x57, 0x10, 0x34, 0x2b, 0x08, 0x9a, 0x17, 0x04, 0x2d, 0x0a, 0x82, 0xae, 0x97, 0x04, 0xdd, 0x2c,
	0x09, 0x3a, 0xfc, 0x03, 0x56, 0xaa, 0x70, 0x22, 0xe8, 0x98, 0x25, 0xa7, 0x20, 0x8e, 0xa8, 0x1a,
	0xd3, 0xd7, 0x67, 0x7e, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x2a, 0x35, 0xd0, 0xf9, 0x01, 0x00,
	0x00,
}
