// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common/spreadsheet/spreadsheet.proto

package spreadsheet

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SpreadsheetData struct {
	Columns              []string `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
	RawColumns           []string `protobuf:"bytes,2,rep,name=raw_columns,json=rawColumns" json:"raw_columns,omitempty"`
	Rows                 []*Row   `protobuf:"bytes,3,rep,name=rows" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpreadsheetData) Reset()         { *m = SpreadsheetData{} }
func (m *SpreadsheetData) String() string { return proto.CompactTextString(m) }
func (*SpreadsheetData) ProtoMessage()    {}
func (*SpreadsheetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd31ad9e73e401e, []int{0}
}
func (m *SpreadsheetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpreadsheetData.Unmarshal(m, b)
}
func (m *SpreadsheetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpreadsheetData.Marshal(b, m, deterministic)
}
func (m *SpreadsheetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpreadsheetData.Merge(m, src)
}
func (m *SpreadsheetData) XXX_Size() int {
	return xxx_messageInfo_SpreadsheetData.Size(m)
}
func (m *SpreadsheetData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpreadsheetData.DiscardUnknown(m)
}

var xxx_messageInfo_SpreadsheetData proto.InternalMessageInfo

func (m *SpreadsheetData) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *SpreadsheetData) GetRawColumns() []string {
	if m != nil {
		return m.RawColumns
	}
	return nil
}

func (m *SpreadsheetData) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

type Row struct {
	Cell                 []string `protobuf:"bytes,1,rep,name=cell" json:"cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd31ad9e73e401e, []int{1}
}
func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetCell() []string {
	if m != nil {
		return m.Cell
	}
	return nil
}

func init() {
	proto.RegisterType((*SpreadsheetData)(nil), "spreadsheet.SpreadsheetData")
	proto.RegisterType((*Row)(nil), "spreadsheet.Row")
}

func init() {
	proto.RegisterFile("common/spreadsheet/spreadsheet.proto", fileDescriptor_1bd31ad9e73e401e)
}

var fileDescriptor_1bd31ad9e73e401e = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0x2e, 0x28, 0x4a, 0x4d, 0x4c, 0x29, 0xce, 0x48, 0x4d, 0x2d, 0x41, 0x66,
	0xeb, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x71, 0x23, 0x09, 0x49, 0x89, 0xa4, 0xe7, 0xa7, 0xe7,
	0x83, 0xc5, 0xf5, 0x41, 0x2c, 0x88, 0x12, 0xa5, 0x22, 0x2e, 0xfe, 0x60, 0x84, 0x22, 0x97, 0xc4,
	0x92, 0x44, 0x21, 0x09, 0x2e, 0xf6, 0xe4, 0xfc, 0x9c, 0xd2, 0xdc, 0xbc, 0x62, 0x09, 0x46, 0x05,
	0x66, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x48, 0x9e, 0x8b, 0xbb, 0x28, 0xb1, 0x3c, 0x1e, 0x26, 0xcb,
	0x04, 0x96, 0xe5, 0x2a, 0x4a, 0x2c, 0x77, 0x86, 0x2a, 0x50, 0xe1, 0x62, 0x29, 0xca, 0x2f, 0x2f,
	0x96, 0x60, 0x56, 0x60, 0xd6, 0xe0, 0x36, 0x12, 0xd0, 0x43, 0x76, 0x52, 0x50, 0x7e, 0x79, 0x10,
	0x58, 0x56, 0x49, 0x92, 0x8b, 0x39, 0x28, 0xbf, 0x5c, 0x48, 0x88, 0x8b, 0x25, 0x39, 0x35, 0x27,
	0x07, 0x6a, 0x09, 0x98, 0xed, 0x14, 0x7e, 0xe2, 0xa1, 0x1c, 0xe3, 0x85, 0x87, 0x72, 0x0c, 0x0f,
	0x1e, 0xca, 0x31, 0x7c, 0x78, 0x28, 0xc7, 0xd0, 0xf1, 0x48, 0x8e, 0x61, 0xc5, 0x23, 0x39, 0x86,
	0x1d, 0x8f, 0xe4, 0x18, 0x4e, 0x3c, 0x92, 0x63, 0xb8, 0xf0, 0x48, 0x8e, 0xe1, 0xc1, 0x23, 0x39,
	0x86, 0x09, 0x8f, 0xe5, 0x18, 0x66, 0x3c, 0x96, 0x63, 0x88, 0x52, 0x4d, 0x2d, 0xc9, 0x2f, 0xd0,
	0x2b, 0xcb, 0xd3, 0x4f, 0x4a, 0x4c, 0xce, 0x4e, 0xcd, 0x4b, 0xd1, 0x2f, 0x48, 0xd2, 0xc7, 0x0c,
	0x1c, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x56, 0x31, 0xe9, 0x31, 0x01, 0x00, 0x00,
}
