// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	ledgeringmodel "etop.vn/backend/com/main/ledgering/model"
	conversion "etop.vn/backend/pkg/common/conversion"
	shopledgermodel "etop.vn/backend/zexp/etl/main/shopledger/model"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shopledgermodel.ShopLedger)(nil), (*ledgeringmodel.ShopLedger)(nil), func(arg, out interface{}) error {
		Convert_shopledgermodel_ShopLedger_ledgeringmodel_ShopLedger(arg.(*shopledgermodel.ShopLedger), out.(*ledgeringmodel.ShopLedger))
		return nil
	})
	s.Register(([]*shopledgermodel.ShopLedger)(nil), (*[]*ledgeringmodel.ShopLedger)(nil), func(arg, out interface{}) error {
		out0 := Convert_shopledgermodel_ShopLedgers_ledgeringmodel_ShopLedgers(arg.([]*shopledgermodel.ShopLedger))
		*out.(*[]*ledgeringmodel.ShopLedger) = out0
		return nil
	})
	s.Register((*ledgeringmodel.ShopLedger)(nil), (*shopledgermodel.ShopLedger)(nil), func(arg, out interface{}) error {
		Convert_ledgeringmodel_ShopLedger_shopledgermodel_ShopLedger(arg.(*ledgeringmodel.ShopLedger), out.(*shopledgermodel.ShopLedger))
		return nil
	})
	s.Register(([]*ledgeringmodel.ShopLedger)(nil), (*[]*shopledgermodel.ShopLedger)(nil), func(arg, out interface{}) error {
		out0 := Convert_ledgeringmodel_ShopLedgers_shopledgermodel_ShopLedgers(arg.([]*ledgeringmodel.ShopLedger))
		*out.(*[]*shopledgermodel.ShopLedger) = out0
		return nil
	})
}

//-- convert etop.vn/backend/com/main/ledgering/model.ShopLedger --//

func Convert_shopledgermodel_ShopLedger_ledgeringmodel_ShopLedger(arg *shopledgermodel.ShopLedger, out *ledgeringmodel.ShopLedger) *ledgeringmodel.ShopLedger {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &ledgeringmodel.ShopLedger{}
	}
	convert_shopledgermodel_ShopLedger_ledgeringmodel_ShopLedger(arg, out)
	return out
}

func convert_shopledgermodel_ShopLedger_ledgeringmodel_ShopLedger(arg *shopledgermodel.ShopLedger, out *ledgeringmodel.ShopLedger) {
	out.ID = arg.ID                   // simple assign
	out.ShopID = arg.ShopID           // simple assign
	out.Name = arg.Name               // simple assign
	out.BankAccount = arg.BankAccount // simple assign
	out.Note = arg.Note               // simple assign
	out.Type = arg.Type               // simple assign
	out.Status = arg.Status           // simple assign
	out.CreatedBy = arg.CreatedBy     // simple assign
	out.CreatedAt = arg.CreatedAt     // simple assign
	out.UpdatedAt = arg.UpdatedAt     // simple assign
	out.DeletedAt = time.Time{}       // zero value
	out.Rid = arg.Rid                 // simple assign
}

func Convert_shopledgermodel_ShopLedgers_ledgeringmodel_ShopLedgers(args []*shopledgermodel.ShopLedger) (outs []*ledgeringmodel.ShopLedger) {
	if args == nil {
		return nil
	}
	tmps := make([]ledgeringmodel.ShopLedger, len(args))
	outs = make([]*ledgeringmodel.ShopLedger, len(args))
	for i := range tmps {
		outs[i] = Convert_shopledgermodel_ShopLedger_ledgeringmodel_ShopLedger(args[i], &tmps[i])
	}
	return outs
}

func Convert_ledgeringmodel_ShopLedger_shopledgermodel_ShopLedger(arg *ledgeringmodel.ShopLedger, out *shopledgermodel.ShopLedger) *shopledgermodel.ShopLedger {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shopledgermodel.ShopLedger{}
	}
	convert_ledgeringmodel_ShopLedger_shopledgermodel_ShopLedger(arg, out)
	return out
}

func convert_ledgeringmodel_ShopLedger_shopledgermodel_ShopLedger(arg *ledgeringmodel.ShopLedger, out *shopledgermodel.ShopLedger) {
	out.ID = arg.ID                   // simple assign
	out.ShopID = arg.ShopID           // simple assign
	out.Name = arg.Name               // simple assign
	out.BankAccount = arg.BankAccount // simple assign
	out.Note = arg.Note               // simple assign
	out.Type = arg.Type               // simple assign
	out.Status = arg.Status           // simple assign
	out.CreatedBy = arg.CreatedBy     // simple assign
	out.CreatedAt = arg.CreatedAt     // simple assign
	out.UpdatedAt = arg.UpdatedAt     // simple assign
	out.Rid = arg.Rid                 // simple assign
}

func Convert_ledgeringmodel_ShopLedgers_shopledgermodel_ShopLedgers(args []*ledgeringmodel.ShopLedger) (outs []*shopledgermodel.ShopLedger) {
	if args == nil {
		return nil
	}
	tmps := make([]shopledgermodel.ShopLedger, len(args))
	outs = make([]*shopledgermodel.ShopLedger, len(args))
	for i := range tmps {
		outs[i] = Convert_ledgeringmodel_ShopLedger_shopledgermodel_ShopLedger(args[i], &tmps[i])
	}
	return outs
}
