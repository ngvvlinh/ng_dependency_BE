// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	customeringmodel "etop.vn/backend/com/shopping/customering/model"
	conversion "etop.vn/backend/pkg/common/conversion"
	shopcustomergroupmodel "etop.vn/backend/zexp/etl/main/shopcustomergroup/model"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shopcustomergroupmodel.ShopCustomerGroup)(nil), (*customeringmodel.ShopCustomerGroup)(nil), func(arg, out interface{}) error {
		Convert_shopcustomergroupmodel_ShopCustomerGroup_customeringmodel_ShopCustomerGroup(arg.(*shopcustomergroupmodel.ShopCustomerGroup), out.(*customeringmodel.ShopCustomerGroup))
		return nil
	})
	s.Register(([]*shopcustomergroupmodel.ShopCustomerGroup)(nil), (*[]*customeringmodel.ShopCustomerGroup)(nil), func(arg, out interface{}) error {
		out0 := Convert_shopcustomergroupmodel_ShopCustomerGroups_customeringmodel_ShopCustomerGroups(arg.([]*shopcustomergroupmodel.ShopCustomerGroup))
		*out.(*[]*customeringmodel.ShopCustomerGroup) = out0
		return nil
	})
	s.Register((*customeringmodel.ShopCustomerGroup)(nil), (*shopcustomergroupmodel.ShopCustomerGroup)(nil), func(arg, out interface{}) error {
		Convert_customeringmodel_ShopCustomerGroup_shopcustomergroupmodel_ShopCustomerGroup(arg.(*customeringmodel.ShopCustomerGroup), out.(*shopcustomergroupmodel.ShopCustomerGroup))
		return nil
	})
	s.Register(([]*customeringmodel.ShopCustomerGroup)(nil), (*[]*shopcustomergroupmodel.ShopCustomerGroup)(nil), func(arg, out interface{}) error {
		out0 := Convert_customeringmodel_ShopCustomerGroups_shopcustomergroupmodel_ShopCustomerGroups(arg.([]*customeringmodel.ShopCustomerGroup))
		*out.(*[]*shopcustomergroupmodel.ShopCustomerGroup) = out0
		return nil
	})
}

//-- convert etop.vn/backend/com/shopping/customering/model.ShopCustomerGroup --//

func Convert_shopcustomergroupmodel_ShopCustomerGroup_customeringmodel_ShopCustomerGroup(arg *shopcustomergroupmodel.ShopCustomerGroup, out *customeringmodel.ShopCustomerGroup) *customeringmodel.ShopCustomerGroup {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &customeringmodel.ShopCustomerGroup{}
	}
	convert_shopcustomergroupmodel_ShopCustomerGroup_customeringmodel_ShopCustomerGroup(arg, out)
	return out
}

func convert_shopcustomergroupmodel_ShopCustomerGroup_customeringmodel_ShopCustomerGroup(arg *shopcustomergroupmodel.ShopCustomerGroup, out *customeringmodel.ShopCustomerGroup) {
	out.ID = arg.ID               // simple assign
	out.PartnerID = arg.PartnerID // simple assign
	out.Name = arg.Name           // simple assign
	out.ShopID = arg.ShopID       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
	out.DeletedAt = time.Time{}   // zero value
	out.Rid = arg.Rid             // simple assign
}

func Convert_shopcustomergroupmodel_ShopCustomerGroups_customeringmodel_ShopCustomerGroups(args []*shopcustomergroupmodel.ShopCustomerGroup) (outs []*customeringmodel.ShopCustomerGroup) {
	tmps := make([]customeringmodel.ShopCustomerGroup, len(args))
	outs = make([]*customeringmodel.ShopCustomerGroup, len(args))
	for i := range tmps {
		outs[i] = Convert_shopcustomergroupmodel_ShopCustomerGroup_customeringmodel_ShopCustomerGroup(args[i], &tmps[i])
	}
	return outs
}

func Convert_customeringmodel_ShopCustomerGroup_shopcustomergroupmodel_ShopCustomerGroup(arg *customeringmodel.ShopCustomerGroup, out *shopcustomergroupmodel.ShopCustomerGroup) *shopcustomergroupmodel.ShopCustomerGroup {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shopcustomergroupmodel.ShopCustomerGroup{}
	}
	convert_customeringmodel_ShopCustomerGroup_shopcustomergroupmodel_ShopCustomerGroup(arg, out)
	return out
}

func convert_customeringmodel_ShopCustomerGroup_shopcustomergroupmodel_ShopCustomerGroup(arg *customeringmodel.ShopCustomerGroup, out *shopcustomergroupmodel.ShopCustomerGroup) {
	out.ID = arg.ID               // simple assign
	out.PartnerID = arg.PartnerID // simple assign
	out.Name = arg.Name           // simple assign
	out.ShopID = arg.ShopID       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
	out.Rid = arg.Rid             // simple assign
}

func Convert_customeringmodel_ShopCustomerGroups_shopcustomergroupmodel_ShopCustomerGroups(args []*customeringmodel.ShopCustomerGroup) (outs []*shopcustomergroupmodel.ShopCustomerGroup) {
	tmps := make([]shopcustomergroupmodel.ShopCustomerGroup, len(args))
	outs = make([]*shopcustomergroupmodel.ShopCustomerGroup, len(args))
	for i := range tmps {
		outs[i] = Convert_customeringmodel_ShopCustomerGroup_shopcustomergroupmodel_ShopCustomerGroup(args[i], &tmps[i])
	}
	return outs
}
