// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	catalogmodel "etop.vn/backend/com/main/catalog/model"
	conversion "etop.vn/backend/pkg/common/conversion"
	shopcategorymodel "etop.vn/backend/zexp/etl/main/shopcategory/model"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shopcategorymodel.ShopCategory)(nil), (*catalogmodel.ShopCategory)(nil), func(arg, out interface{}) error {
		Convert_shopcategorymodel_ShopCategory_catalogmodel_ShopCategory(arg.(*shopcategorymodel.ShopCategory), out.(*catalogmodel.ShopCategory))
		return nil
	})
	s.Register(([]*shopcategorymodel.ShopCategory)(nil), (*[]*catalogmodel.ShopCategory)(nil), func(arg, out interface{}) error {
		out0 := Convert_shopcategorymodel_ShopCategories_catalogmodel_ShopCategories(arg.([]*shopcategorymodel.ShopCategory))
		*out.(*[]*catalogmodel.ShopCategory) = out0
		return nil
	})
	s.Register((*catalogmodel.ShopCategory)(nil), (*shopcategorymodel.ShopCategory)(nil), func(arg, out interface{}) error {
		Convert_catalogmodel_ShopCategory_shopcategorymodel_ShopCategory(arg.(*catalogmodel.ShopCategory), out.(*shopcategorymodel.ShopCategory))
		return nil
	})
	s.Register(([]*catalogmodel.ShopCategory)(nil), (*[]*shopcategorymodel.ShopCategory)(nil), func(arg, out interface{}) error {
		out0 := Convert_catalogmodel_ShopCategories_shopcategorymodel_ShopCategories(arg.([]*catalogmodel.ShopCategory))
		*out.(*[]*shopcategorymodel.ShopCategory) = out0
		return nil
	})
}

//-- convert etop.vn/backend/com/main/catalog/model.ShopCategory --//

func Convert_shopcategorymodel_ShopCategory_catalogmodel_ShopCategory(arg *shopcategorymodel.ShopCategory, out *catalogmodel.ShopCategory) *catalogmodel.ShopCategory {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &catalogmodel.ShopCategory{}
	}
	convert_shopcategorymodel_ShopCategory_catalogmodel_ShopCategory(arg, out)
	return out
}

func convert_shopcategorymodel_ShopCategory_catalogmodel_ShopCategory(arg *shopcategorymodel.ShopCategory, out *catalogmodel.ShopCategory) {
	out.ID = arg.ID               // simple assign
	out.PartnerID = 0             // zero value
	out.ShopID = arg.ShopID       // simple assign
	out.ExternalID = ""           // zero value
	out.ExternalParentID = ""     // zero value
	out.ParentID = arg.ParentID   // simple assign
	out.Name = arg.Name           // simple assign
	out.Status = arg.Status       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
	out.DeletedAt = time.Time{}   // zero value
	out.Rid = arg.Rid             // simple assign
}

func Convert_shopcategorymodel_ShopCategories_catalogmodel_ShopCategories(args []*shopcategorymodel.ShopCategory) (outs []*catalogmodel.ShopCategory) {
	if args == nil {
		return nil
	}
	tmps := make([]catalogmodel.ShopCategory, len(args))
	outs = make([]*catalogmodel.ShopCategory, len(args))
	for i := range tmps {
		outs[i] = Convert_shopcategorymodel_ShopCategory_catalogmodel_ShopCategory(args[i], &tmps[i])
	}
	return outs
}

func Convert_catalogmodel_ShopCategory_shopcategorymodel_ShopCategory(arg *catalogmodel.ShopCategory, out *shopcategorymodel.ShopCategory) *shopcategorymodel.ShopCategory {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shopcategorymodel.ShopCategory{}
	}
	convert_catalogmodel_ShopCategory_shopcategorymodel_ShopCategory(arg, out)
	return out
}

func convert_catalogmodel_ShopCategory_shopcategorymodel_ShopCategory(arg *catalogmodel.ShopCategory, out *shopcategorymodel.ShopCategory) {
	out.ID = arg.ID               // simple assign
	out.ShopID = arg.ShopID       // simple assign
	out.ParentID = arg.ParentID   // simple assign
	out.Name = arg.Name           // simple assign
	out.Status = arg.Status       // simple assign
	out.CreatedAt = arg.CreatedAt // simple assign
	out.UpdatedAt = arg.UpdatedAt // simple assign
	out.Rid = arg.Rid             // simple assign
}

func Convert_catalogmodel_ShopCategories_shopcategorymodel_ShopCategories(args []*catalogmodel.ShopCategory) (outs []*shopcategorymodel.ShopCategory) {
	if args == nil {
		return nil
	}
	tmps := make([]shopcategorymodel.ShopCategory, len(args))
	outs = make([]*shopcategorymodel.ShopCategory, len(args))
	for i := range tmps {
		outs[i] = Convert_catalogmodel_ShopCategory_shopcategorymodel_ShopCategory(args[i], &tmps[i])
	}
	return outs
}
