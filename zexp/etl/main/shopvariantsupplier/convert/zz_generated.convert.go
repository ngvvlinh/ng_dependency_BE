// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	catalogmodel "o.o/backend/com/main/catalog/model"
	conversion "o.o/backend/pkg/common/conversion"
	shopvariantsuppliermodel "o.o/backend/zexp/etl/main/shopvariantsupplier/model"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shopvariantsuppliermodel.ShopVariantSupplier)(nil), (*catalogmodel.ShopVariantSupplier)(nil), func(arg, out interface{}) error {
		Convert_shopvariantsuppliermodel_ShopVariantSupplier_catalogmodel_ShopVariantSupplier(arg.(*shopvariantsuppliermodel.ShopVariantSupplier), out.(*catalogmodel.ShopVariantSupplier))
		return nil
	})
	s.Register(([]*shopvariantsuppliermodel.ShopVariantSupplier)(nil), (*[]*catalogmodel.ShopVariantSupplier)(nil), func(arg, out interface{}) error {
		out0 := Convert_shopvariantsuppliermodel_ShopVariantSuppliers_catalogmodel_ShopVariantSuppliers(arg.([]*shopvariantsuppliermodel.ShopVariantSupplier))
		*out.(*[]*catalogmodel.ShopVariantSupplier) = out0
		return nil
	})
	s.Register((*catalogmodel.ShopVariantSupplier)(nil), (*shopvariantsuppliermodel.ShopVariantSupplier)(nil), func(arg, out interface{}) error {
		Convert_catalogmodel_ShopVariantSupplier_shopvariantsuppliermodel_ShopVariantSupplier(arg.(*catalogmodel.ShopVariantSupplier), out.(*shopvariantsuppliermodel.ShopVariantSupplier))
		return nil
	})
	s.Register(([]*catalogmodel.ShopVariantSupplier)(nil), (*[]*shopvariantsuppliermodel.ShopVariantSupplier)(nil), func(arg, out interface{}) error {
		out0 := Convert_catalogmodel_ShopVariantSuppliers_shopvariantsuppliermodel_ShopVariantSuppliers(arg.([]*catalogmodel.ShopVariantSupplier))
		*out.(*[]*shopvariantsuppliermodel.ShopVariantSupplier) = out0
		return nil
	})
}

//-- convert o.o/backend/com/main/catalog/model.ShopVariantSupplier --//

func Convert_shopvariantsuppliermodel_ShopVariantSupplier_catalogmodel_ShopVariantSupplier(arg *shopvariantsuppliermodel.ShopVariantSupplier, out *catalogmodel.ShopVariantSupplier) *catalogmodel.ShopVariantSupplier {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &catalogmodel.ShopVariantSupplier{}
	}
	convert_shopvariantsuppliermodel_ShopVariantSupplier_catalogmodel_ShopVariantSupplier(arg, out)
	return out
}

func convert_shopvariantsuppliermodel_ShopVariantSupplier_catalogmodel_ShopVariantSupplier(arg *shopvariantsuppliermodel.ShopVariantSupplier, out *catalogmodel.ShopVariantSupplier) {
	out.ShopID = arg.ShopID         // simple assign
	out.SupplierID = arg.SupplierID // simple assign
	out.VariantID = arg.VariantID   // simple assign
	out.CreatedAt = arg.CreatedAt   // simple assign
	out.UpdatedAt = arg.UpdatedAt   // simple assign
	out.Rid = arg.Rid               // simple assign
}

func Convert_shopvariantsuppliermodel_ShopVariantSuppliers_catalogmodel_ShopVariantSuppliers(args []*shopvariantsuppliermodel.ShopVariantSupplier) (outs []*catalogmodel.ShopVariantSupplier) {
	if args == nil {
		return nil
	}
	tmps := make([]catalogmodel.ShopVariantSupplier, len(args))
	outs = make([]*catalogmodel.ShopVariantSupplier, len(args))
	for i := range tmps {
		outs[i] = Convert_shopvariantsuppliermodel_ShopVariantSupplier_catalogmodel_ShopVariantSupplier(args[i], &tmps[i])
	}
	return outs
}

func Convert_catalogmodel_ShopVariantSupplier_shopvariantsuppliermodel_ShopVariantSupplier(arg *catalogmodel.ShopVariantSupplier, out *shopvariantsuppliermodel.ShopVariantSupplier) *shopvariantsuppliermodel.ShopVariantSupplier {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shopvariantsuppliermodel.ShopVariantSupplier{}
	}
	convert_catalogmodel_ShopVariantSupplier_shopvariantsuppliermodel_ShopVariantSupplier(arg, out)
	return out
}

func convert_catalogmodel_ShopVariantSupplier_shopvariantsuppliermodel_ShopVariantSupplier(arg *catalogmodel.ShopVariantSupplier, out *shopvariantsuppliermodel.ShopVariantSupplier) {
	out.ShopID = arg.ShopID         // simple assign
	out.SupplierID = arg.SupplierID // simple assign
	out.VariantID = arg.VariantID   // simple assign
	out.CreatedAt = arg.CreatedAt   // simple assign
	out.UpdatedAt = arg.UpdatedAt   // simple assign
	out.Rid = arg.Rid               // simple assign
}

func Convert_catalogmodel_ShopVariantSuppliers_shopvariantsuppliermodel_ShopVariantSuppliers(args []*catalogmodel.ShopVariantSupplier) (outs []*shopvariantsuppliermodel.ShopVariantSupplier) {
	if args == nil {
		return nil
	}
	tmps := make([]shopvariantsuppliermodel.ShopVariantSupplier, len(args))
	outs = make([]*shopvariantsuppliermodel.ShopVariantSupplier, len(args))
	for i := range tmps {
		outs[i] = Convert_catalogmodel_ShopVariantSupplier_shopvariantsuppliermodel_ShopVariantSupplier(args[i], &tmps[i])
	}
	return outs
}
