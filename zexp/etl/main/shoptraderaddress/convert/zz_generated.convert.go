// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package convert

import (
	time "time"

	customeringmodel "o.o/backend/com/shopping/customering/model"
	conversion "o.o/backend/pkg/common/conversion"
	shoptraderaddressmodel "o.o/backend/zexp/etl/main/shoptraderaddress/model"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*shoptraderaddressmodel.ShopTraderAddress)(nil), (*customeringmodel.ShopTraderAddress)(nil), func(arg, out interface{}) error {
		Convert_shoptraderaddressmodel_ShopTraderAddress_customeringmodel_ShopTraderAddress(arg.(*shoptraderaddressmodel.ShopTraderAddress), out.(*customeringmodel.ShopTraderAddress))
		return nil
	})
	s.Register(([]*shoptraderaddressmodel.ShopTraderAddress)(nil), (*[]*customeringmodel.ShopTraderAddress)(nil), func(arg, out interface{}) error {
		out0 := Convert_shoptraderaddressmodel_ShopTraderAddresses_customeringmodel_ShopTraderAddresses(arg.([]*shoptraderaddressmodel.ShopTraderAddress))
		*out.(*[]*customeringmodel.ShopTraderAddress) = out0
		return nil
	})
	s.Register((*customeringmodel.ShopTraderAddress)(nil), (*shoptraderaddressmodel.ShopTraderAddress)(nil), func(arg, out interface{}) error {
		Convert_customeringmodel_ShopTraderAddress_shoptraderaddressmodel_ShopTraderAddress(arg.(*customeringmodel.ShopTraderAddress), out.(*shoptraderaddressmodel.ShopTraderAddress))
		return nil
	})
	s.Register(([]*customeringmodel.ShopTraderAddress)(nil), (*[]*shoptraderaddressmodel.ShopTraderAddress)(nil), func(arg, out interface{}) error {
		out0 := Convert_customeringmodel_ShopTraderAddresses_shoptraderaddressmodel_ShopTraderAddresses(arg.([]*customeringmodel.ShopTraderAddress))
		*out.(*[]*shoptraderaddressmodel.ShopTraderAddress) = out0
		return nil
	})
}

//-- convert o.o/backend/com/shopping/customering/model.ShopTraderAddress --//

func Convert_shoptraderaddressmodel_ShopTraderAddress_customeringmodel_ShopTraderAddress(arg *shoptraderaddressmodel.ShopTraderAddress, out *customeringmodel.ShopTraderAddress) *customeringmodel.ShopTraderAddress {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &customeringmodel.ShopTraderAddress{}
	}
	convert_shoptraderaddressmodel_ShopTraderAddress_customeringmodel_ShopTraderAddress(arg, out)
	return out
}

func convert_shoptraderaddressmodel_ShopTraderAddress_customeringmodel_ShopTraderAddress(arg *shoptraderaddressmodel.ShopTraderAddress, out *customeringmodel.ShopTraderAddress) {
	out.ID = arg.ID                     // simple assign
	out.PartnerID = 0                   // zero value
	out.ShopID = arg.ShopID             // simple assign
	out.TraderID = arg.TraderID         // simple assign
	out.FullName = arg.FullName         // simple assign
	out.Phone = arg.Phone               // simple assign
	out.Email = arg.Email               // simple assign
	out.Company = arg.Company           // simple assign
	out.Address1 = arg.Address1         // simple assign
	out.Address2 = arg.Address2         // simple assign
	out.DistrictCode = arg.DistrictCode // simple assign
	out.WardCode = arg.WardCode         // simple assign
	out.Position = arg.Position         // simple assign
	out.IsDefault = arg.IsDefault       // simple assign
	out.Coordinates = arg.Coordinates   // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.DeletedAt = time.Time{}         // zero value
	out.Status = arg.Status             // simple assign
	out.Rid = arg.Rid                   // simple assign
}

func Convert_shoptraderaddressmodel_ShopTraderAddresses_customeringmodel_ShopTraderAddresses(args []*shoptraderaddressmodel.ShopTraderAddress) (outs []*customeringmodel.ShopTraderAddress) {
	if args == nil {
		return nil
	}
	tmps := make([]customeringmodel.ShopTraderAddress, len(args))
	outs = make([]*customeringmodel.ShopTraderAddress, len(args))
	for i := range tmps {
		outs[i] = Convert_shoptraderaddressmodel_ShopTraderAddress_customeringmodel_ShopTraderAddress(args[i], &tmps[i])
	}
	return outs
}

func Convert_customeringmodel_ShopTraderAddress_shoptraderaddressmodel_ShopTraderAddress(arg *customeringmodel.ShopTraderAddress, out *shoptraderaddressmodel.ShopTraderAddress) *shoptraderaddressmodel.ShopTraderAddress {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptraderaddressmodel.ShopTraderAddress{}
	}
	convert_customeringmodel_ShopTraderAddress_shoptraderaddressmodel_ShopTraderAddress(arg, out)
	return out
}

func convert_customeringmodel_ShopTraderAddress_shoptraderaddressmodel_ShopTraderAddress(arg *customeringmodel.ShopTraderAddress, out *shoptraderaddressmodel.ShopTraderAddress) {
	out.ID = arg.ID                     // simple assign
	out.ShopID = arg.ShopID             // simple assign
	out.TraderID = arg.TraderID         // simple assign
	out.FullName = arg.FullName         // simple assign
	out.Phone = arg.Phone               // simple assign
	out.Email = arg.Email               // simple assign
	out.Company = arg.Company           // simple assign
	out.Address1 = arg.Address1         // simple assign
	out.Address2 = arg.Address2         // simple assign
	out.DistrictCode = arg.DistrictCode // simple assign
	out.WardCode = arg.WardCode         // simple assign
	out.Position = arg.Position         // simple assign
	out.IsDefault = arg.IsDefault       // simple assign
	out.Coordinates = arg.Coordinates   // simple assign
	out.CreatedAt = arg.CreatedAt       // simple assign
	out.UpdatedAt = arg.UpdatedAt       // simple assign
	out.Status = arg.Status             // simple assign
	out.Rid = arg.Rid                   // simple assign
}

func Convert_customeringmodel_ShopTraderAddresses_shoptraderaddressmodel_ShopTraderAddresses(args []*customeringmodel.ShopTraderAddress) (outs []*shoptraderaddressmodel.ShopTraderAddress) {
	if args == nil {
		return nil
	}
	tmps := make([]shoptraderaddressmodel.ShopTraderAddress, len(args))
	outs = make([]*shoptraderaddressmodel.ShopTraderAddress, len(args))
	for i := range tmps {
		outs[i] = Convert_customeringmodel_ShopTraderAddress_shoptraderaddressmodel_ShopTraderAddress(args[i], &tmps[i])
	}
	return outs
}
