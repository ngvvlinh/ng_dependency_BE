// +build !generator

// Code generated by generator sqlgen. DO NOT EDIT.

package model

import (
	"database/sql"
	"sync"
	time "time"

	cmsql "etop.vn/backend/pkg/common/sql/cmsql"
	core "etop.vn/backend/pkg/common/sql/sq/core"
)

var __sqlModels []interface{ SQLVerifySchema(db *cmsql.Database) }
var __sqlonce sync.Once

func SQLVerifySchema(db *cmsql.Database) {
	__sqlonce.Do(func() {
		for _, m := range __sqlModels {
			m.SQLVerifySchema(db)
		}
	})
}

type SQLWriter = core.SQLWriter

type Fulfillments []*Fulfillment

const __sqlFulfillment_Table = "fulfillment"
const __sqlFulfillment_ListCols = "\"id\",\"order_id\",\"shop_id\",\"partner_id\",\"shop_confirm\",\"confirm_status\",\"total_items\",\"total_weight\",\"basket_value\",\"total_discount\",\"total_amount\",\"total_cod_amount\",\"original_cod_amount\",\"actual_compensation_amount\",\"shipping_fee_customer\",\"shipping_fee_shop\",\"shipping_fee_shop_lines\",\"shipping_service_fee\",\"external_shipping_fee\",\"provider_shipping_fee_lines\",\"etop_discount\",\"etop_fee_adjustment\",\"shipping_fee_main\",\"shipping_fee_return\",\"shipping_fee_insurance\",\"shipping_fee_adjustment\",\"shipping_fee_cods\",\"shipping_fee_info_change\",\"shipping_fee_other\",\"etop_adjusted_shipping_fee_main\",\"etop_price_rule\",\"variant_ids\",\"lines\",\"type_from\",\"type_to\",\"address_from\",\"address_to\",\"address_return\",\"address_to_province_code\",\"address_to_district_code\",\"address_to_ward_code\",\"created_at\",\"updated_at\",\"closed_at\",\"expected_delivery_at\",\"expected_pick_at\",\"cod_etop_transfered_at\",\"shipping_fee_shop_transfered_at\",\"shipping_cancelled_at\",\"shipping_delivered_at\",\"shipping_returned_at\",\"shipping_created_at\",\"shipping_picking_at\",\"shipping_holding_at\",\"shipping_delivering_at\",\"shipping_returning_at\",\"money_transaction_id\",\"money_transaction_shipping_external_id\",\"cancel_reason\",\"shipping_provider\",\"provider_service_id\",\"shipping_code\",\"shipping_note\",\"try_on\",\"include_insurance\",\"shipping_type\",\"connection_id\",\"connection_method\",\"shop_carrier_id\",\"shipping_service_name\",\"external_shipping_name\",\"external_shipping_id\",\"external_shipping_code\",\"external_shipping_created_at\",\"external_shipping_updated_at\",\"external_shipping_cancelled_at\",\"external_shipping_delivered_at\",\"external_shipping_returned_at\",\"external_shipping_closed_at\",\"external_shipping_state\",\"external_shipping_state_code\",\"external_shipping_status\",\"external_shipping_note\",\"external_shipping_sub_state\",\"external_shipping_data\",\"shipping_state\",\"shipping_status\",\"etop_payment_status\",\"status\",\"sync_status\",\"sync_states\",\"last_sync_at\",\"external_shipping_logs\",\"admin_note\",\"is_partial_delivery\",\"created_by\",\"gross_weight\",\"chargeable_weight\",\"length\",\"width\",\"height\",\"delivery_route\",\"external_affiliate_id\",\"rid\""
const __sqlFulfillment_ListColsOnConflict = "\"id\" = EXCLUDED.\"id\",\"order_id\" = EXCLUDED.\"order_id\",\"shop_id\" = EXCLUDED.\"shop_id\",\"partner_id\" = EXCLUDED.\"partner_id\",\"shop_confirm\" = EXCLUDED.\"shop_confirm\",\"confirm_status\" = EXCLUDED.\"confirm_status\",\"total_items\" = EXCLUDED.\"total_items\",\"total_weight\" = EXCLUDED.\"total_weight\",\"basket_value\" = EXCLUDED.\"basket_value\",\"total_discount\" = EXCLUDED.\"total_discount\",\"total_amount\" = EXCLUDED.\"total_amount\",\"total_cod_amount\" = EXCLUDED.\"total_cod_amount\",\"original_cod_amount\" = EXCLUDED.\"original_cod_amount\",\"actual_compensation_amount\" = EXCLUDED.\"actual_compensation_amount\",\"shipping_fee_customer\" = EXCLUDED.\"shipping_fee_customer\",\"shipping_fee_shop\" = EXCLUDED.\"shipping_fee_shop\",\"shipping_fee_shop_lines\" = EXCLUDED.\"shipping_fee_shop_lines\",\"shipping_service_fee\" = EXCLUDED.\"shipping_service_fee\",\"external_shipping_fee\" = EXCLUDED.\"external_shipping_fee\",\"provider_shipping_fee_lines\" = EXCLUDED.\"provider_shipping_fee_lines\",\"etop_discount\" = EXCLUDED.\"etop_discount\",\"etop_fee_adjustment\" = EXCLUDED.\"etop_fee_adjustment\",\"shipping_fee_main\" = EXCLUDED.\"shipping_fee_main\",\"shipping_fee_return\" = EXCLUDED.\"shipping_fee_return\",\"shipping_fee_insurance\" = EXCLUDED.\"shipping_fee_insurance\",\"shipping_fee_adjustment\" = EXCLUDED.\"shipping_fee_adjustment\",\"shipping_fee_cods\" = EXCLUDED.\"shipping_fee_cods\",\"shipping_fee_info_change\" = EXCLUDED.\"shipping_fee_info_change\",\"shipping_fee_other\" = EXCLUDED.\"shipping_fee_other\",\"etop_adjusted_shipping_fee_main\" = EXCLUDED.\"etop_adjusted_shipping_fee_main\",\"etop_price_rule\" = EXCLUDED.\"etop_price_rule\",\"variant_ids\" = EXCLUDED.\"variant_ids\",\"lines\" = EXCLUDED.\"lines\",\"type_from\" = EXCLUDED.\"type_from\",\"type_to\" = EXCLUDED.\"type_to\",\"address_from\" = EXCLUDED.\"address_from\",\"address_to\" = EXCLUDED.\"address_to\",\"address_return\" = EXCLUDED.\"address_return\",\"address_to_province_code\" = EXCLUDED.\"address_to_province_code\",\"address_to_district_code\" = EXCLUDED.\"address_to_district_code\",\"address_to_ward_code\" = EXCLUDED.\"address_to_ward_code\",\"created_at\" = EXCLUDED.\"created_at\",\"updated_at\" = EXCLUDED.\"updated_at\",\"closed_at\" = EXCLUDED.\"closed_at\",\"expected_delivery_at\" = EXCLUDED.\"expected_delivery_at\",\"expected_pick_at\" = EXCLUDED.\"expected_pick_at\",\"cod_etop_transfered_at\" = EXCLUDED.\"cod_etop_transfered_at\",\"shipping_fee_shop_transfered_at\" = EXCLUDED.\"shipping_fee_shop_transfered_at\",\"shipping_cancelled_at\" = EXCLUDED.\"shipping_cancelled_at\",\"shipping_delivered_at\" = EXCLUDED.\"shipping_delivered_at\",\"shipping_returned_at\" = EXCLUDED.\"shipping_returned_at\",\"shipping_created_at\" = EXCLUDED.\"shipping_created_at\",\"shipping_picking_at\" = EXCLUDED.\"shipping_picking_at\",\"shipping_holding_at\" = EXCLUDED.\"shipping_holding_at\",\"shipping_delivering_at\" = EXCLUDED.\"shipping_delivering_at\",\"shipping_returning_at\" = EXCLUDED.\"shipping_returning_at\",\"money_transaction_id\" = EXCLUDED.\"money_transaction_id\",\"money_transaction_shipping_external_id\" = EXCLUDED.\"money_transaction_shipping_external_id\",\"cancel_reason\" = EXCLUDED.\"cancel_reason\",\"shipping_provider\" = EXCLUDED.\"shipping_provider\",\"provider_service_id\" = EXCLUDED.\"provider_service_id\",\"shipping_code\" = EXCLUDED.\"shipping_code\",\"shipping_note\" = EXCLUDED.\"shipping_note\",\"try_on\" = EXCLUDED.\"try_on\",\"include_insurance\" = EXCLUDED.\"include_insurance\",\"shipping_type\" = EXCLUDED.\"shipping_type\",\"connection_id\" = EXCLUDED.\"connection_id\",\"connection_method\" = EXCLUDED.\"connection_method\",\"shop_carrier_id\" = EXCLUDED.\"shop_carrier_id\",\"shipping_service_name\" = EXCLUDED.\"shipping_service_name\",\"external_shipping_name\" = EXCLUDED.\"external_shipping_name\",\"external_shipping_id\" = EXCLUDED.\"external_shipping_id\",\"external_shipping_code\" = EXCLUDED.\"external_shipping_code\",\"external_shipping_created_at\" = EXCLUDED.\"external_shipping_created_at\",\"external_shipping_updated_at\" = EXCLUDED.\"external_shipping_updated_at\",\"external_shipping_cancelled_at\" = EXCLUDED.\"external_shipping_cancelled_at\",\"external_shipping_delivered_at\" = EXCLUDED.\"external_shipping_delivered_at\",\"external_shipping_returned_at\" = EXCLUDED.\"external_shipping_returned_at\",\"external_shipping_closed_at\" = EXCLUDED.\"external_shipping_closed_at\",\"external_shipping_state\" = EXCLUDED.\"external_shipping_state\",\"external_shipping_state_code\" = EXCLUDED.\"external_shipping_state_code\",\"external_shipping_status\" = EXCLUDED.\"external_shipping_status\",\"external_shipping_note\" = EXCLUDED.\"external_shipping_note\",\"external_shipping_sub_state\" = EXCLUDED.\"external_shipping_sub_state\",\"external_shipping_data\" = EXCLUDED.\"external_shipping_data\",\"shipping_state\" = EXCLUDED.\"shipping_state\",\"shipping_status\" = EXCLUDED.\"shipping_status\",\"etop_payment_status\" = EXCLUDED.\"etop_payment_status\",\"status\" = EXCLUDED.\"status\",\"sync_status\" = EXCLUDED.\"sync_status\",\"sync_states\" = EXCLUDED.\"sync_states\",\"last_sync_at\" = EXCLUDED.\"last_sync_at\",\"external_shipping_logs\" = EXCLUDED.\"external_shipping_logs\",\"admin_note\" = EXCLUDED.\"admin_note\",\"is_partial_delivery\" = EXCLUDED.\"is_partial_delivery\",\"created_by\" = EXCLUDED.\"created_by\",\"gross_weight\" = EXCLUDED.\"gross_weight\",\"chargeable_weight\" = EXCLUDED.\"chargeable_weight\",\"length\" = EXCLUDED.\"length\",\"width\" = EXCLUDED.\"width\",\"height\" = EXCLUDED.\"height\",\"delivery_route\" = EXCLUDED.\"delivery_route\",\"external_affiliate_id\" = EXCLUDED.\"external_affiliate_id\",\"rid\" = EXCLUDED.\"rid\""
const __sqlFulfillment_Insert = "INSERT INTO \"fulfillment\" (" + __sqlFulfillment_ListCols + ") VALUES"
const __sqlFulfillment_Select = "SELECT " + __sqlFulfillment_ListCols + " FROM \"fulfillment\""
const __sqlFulfillment_Select_history = "SELECT " + __sqlFulfillment_ListCols + " FROM history.\"fulfillment\""
const __sqlFulfillment_UpdateAll = "UPDATE \"fulfillment\" SET (" + __sqlFulfillment_ListCols + ")"
const __sqlFulfillment_UpdateOnConflict = " ON CONFLICT ON CONSTRAINT fulfillment_pkey DO UPDATE SET"

func (m *Fulfillment) SQLTableName() string  { return "fulfillment" }
func (m *Fulfillments) SQLTableName() string { return "fulfillment" }
func (m *Fulfillment) SQLListCols() string   { return __sqlFulfillment_ListCols }

func (m *Fulfillment) SQLVerifySchema(db *cmsql.Database) {
	query := "SELECT " + __sqlFulfillment_ListCols + " FROM \"fulfillment\" WHERE false"
	if _, err := db.SQL(query).Exec(); err != nil {
		db.RecordError(err)
	}
}

func init() {
	__sqlModels = append(__sqlModels, (*Fulfillment)(nil))
}

func (m *Fulfillment) SQLArgs(opts core.Opts, create bool) []interface{} {
	return []interface{}{
		m.ID,
		m.OrderID,
		m.ShopID,
		m.PartnerID,
		m.ShopConfirm,
		m.ConfirmStatus,
		core.Int(m.TotalItems),
		core.Int(m.TotalWeight),
		core.Int(m.BasketValue),
		core.Int(m.TotalDiscount),
		core.Int(m.TotalAmount),
		core.Int(m.TotalCODAmount),
		core.Int(m.OriginalCODAmount),
		core.Int(m.ActualCompensationAmount),
		core.Int(m.ShippingFeeCustomer),
		core.Int(m.ShippingFeeShop),
		core.JSON{m.ShippingFeeShopLines},
		core.Int(m.ShippingServiceFee),
		core.Int(m.ExternalShippingFee),
		core.JSON{m.ProviderShippingFeeLines},
		core.Int(m.EtopDiscount),
		core.Int(m.EtopFeeAdjustment),
		core.Int(m.ShippingFeeMain),
		core.Int(m.ShippingFeeReturn),
		core.Int(m.ShippingFeeInsurance),
		core.Int(m.ShippingFeeAdjustment),
		core.Int(m.ShippingFeeCODS),
		core.Int(m.ShippingFeeInfoChange),
		core.Int(m.ShippingFeeOther),
		core.Int(m.EtopAdjustedShippingFeeMain),
		core.Bool(m.EtopPriceRule),
		core.Array{m.VariantIDs, opts},
		core.JSON{m.Lines},
		core.String(m.TypeFrom),
		core.String(m.TypeTo),
		core.JSON{m.AddressFrom},
		core.JSON{m.AddressTo},
		core.JSON{m.AddressReturn},
		core.String(m.AddressToProvinceCode),
		core.String(m.AddressToDistrictCode),
		core.String(m.AddressToWardCode),
		core.Time(m.CreatedAt),
		core.Time(m.UpdatedAt),
		core.Time(m.ClosedAt),
		core.Time(m.ExpectedDeliveryAt),
		core.Time(m.ExpectedPickAt),
		core.Time(m.CODEtopTransferedAt),
		core.Time(m.ShippingFeeShopTransferedAt),
		core.Time(m.ShippingCancelledAt),
		core.Time(m.ShippingDeliveredAt),
		core.Time(m.ShippingReturnedAt),
		core.Time(m.ShippingCreatedAt),
		core.Time(m.ShippingPickingAt),
		core.Time(m.ShippingHoldingAt),
		core.Time(m.ShippingDeliveringAt),
		core.Time(m.ShippingReturningAt),
		m.MoneyTransactionID,
		m.MoneyTransactionShippingExternalID,
		core.String(m.CancelReason),
		m.ShippingProvider,
		core.String(m.ProviderServiceID),
		core.String(m.ShippingCode),
		core.String(m.ShippingNote),
		m.TryOn,
		core.Bool(m.IncludeInsurance),
		m.ShippingType,
		m.ConnectionID,
		m.ConnectionMethod,
		m.ShopCarrierID,
		core.String(m.ShippingServiceName),
		core.String(m.ExternalShippingName),
		core.String(m.ExternalShippingID),
		core.String(m.ExternalShippingCode),
		core.Time(m.ExternalShippingCreatedAt),
		core.Time(m.ExternalShippingUpdatedAt),
		core.Time(m.ExternalShippingCancelledAt),
		core.Time(m.ExternalShippingDeliveredAt),
		core.Time(m.ExternalShippingReturnedAt),
		core.Time(m.ExternalShippingClosedAt),
		core.String(m.ExternalShippingState),
		core.String(m.ExternalShippingStateCode),
		m.ExternalShippingStatus,
		core.String(m.ExternalShippingNote),
		core.String(m.ExternalShippingSubState),
		core.JSON{m.ExternalShippingData},
		m.ShippingState,
		m.ShippingStatus,
		m.EtopPaymentStatus,
		m.Status,
		m.SyncStatus,
		core.JSON{m.SyncStates},
		core.Time(m.LastSyncAt),
		core.JSON{m.ExternalShippingLogs},
		core.String(m.AdminNote),
		core.Bool(m.IsPartialDelivery),
		m.CreatedBy,
		core.Int(m.GrossWeight),
		core.Int(m.ChargeableWeight),
		core.Int(m.Length),
		core.Int(m.Width),
		core.Int(m.Height),
		core.String(m.DeliveryRoute),
		core.String(m.ExternalAffiliateID),
		m.Rid,
	}
}

func (m *Fulfillment) SQLScanArgs(opts core.Opts) []interface{} {
	return []interface{}{
		&m.ID,
		&m.OrderID,
		&m.ShopID,
		&m.PartnerID,
		&m.ShopConfirm,
		&m.ConfirmStatus,
		(*core.Int)(&m.TotalItems),
		(*core.Int)(&m.TotalWeight),
		(*core.Int)(&m.BasketValue),
		(*core.Int)(&m.TotalDiscount),
		(*core.Int)(&m.TotalAmount),
		(*core.Int)(&m.TotalCODAmount),
		(*core.Int)(&m.OriginalCODAmount),
		(*core.Int)(&m.ActualCompensationAmount),
		(*core.Int)(&m.ShippingFeeCustomer),
		(*core.Int)(&m.ShippingFeeShop),
		core.JSON{&m.ShippingFeeShopLines},
		(*core.Int)(&m.ShippingServiceFee),
		(*core.Int)(&m.ExternalShippingFee),
		core.JSON{&m.ProviderShippingFeeLines},
		(*core.Int)(&m.EtopDiscount),
		(*core.Int)(&m.EtopFeeAdjustment),
		(*core.Int)(&m.ShippingFeeMain),
		(*core.Int)(&m.ShippingFeeReturn),
		(*core.Int)(&m.ShippingFeeInsurance),
		(*core.Int)(&m.ShippingFeeAdjustment),
		(*core.Int)(&m.ShippingFeeCODS),
		(*core.Int)(&m.ShippingFeeInfoChange),
		(*core.Int)(&m.ShippingFeeOther),
		(*core.Int)(&m.EtopAdjustedShippingFeeMain),
		(*core.Bool)(&m.EtopPriceRule),
		core.Array{&m.VariantIDs, opts},
		core.JSON{&m.Lines},
		(*core.String)(&m.TypeFrom),
		(*core.String)(&m.TypeTo),
		core.JSON{&m.AddressFrom},
		core.JSON{&m.AddressTo},
		core.JSON{&m.AddressReturn},
		(*core.String)(&m.AddressToProvinceCode),
		(*core.String)(&m.AddressToDistrictCode),
		(*core.String)(&m.AddressToWardCode),
		(*core.Time)(&m.CreatedAt),
		(*core.Time)(&m.UpdatedAt),
		(*core.Time)(&m.ClosedAt),
		(*core.Time)(&m.ExpectedDeliveryAt),
		(*core.Time)(&m.ExpectedPickAt),
		(*core.Time)(&m.CODEtopTransferedAt),
		(*core.Time)(&m.ShippingFeeShopTransferedAt),
		(*core.Time)(&m.ShippingCancelledAt),
		(*core.Time)(&m.ShippingDeliveredAt),
		(*core.Time)(&m.ShippingReturnedAt),
		(*core.Time)(&m.ShippingCreatedAt),
		(*core.Time)(&m.ShippingPickingAt),
		(*core.Time)(&m.ShippingHoldingAt),
		(*core.Time)(&m.ShippingDeliveringAt),
		(*core.Time)(&m.ShippingReturningAt),
		&m.MoneyTransactionID,
		&m.MoneyTransactionShippingExternalID,
		(*core.String)(&m.CancelReason),
		&m.ShippingProvider,
		(*core.String)(&m.ProviderServiceID),
		(*core.String)(&m.ShippingCode),
		(*core.String)(&m.ShippingNote),
		&m.TryOn,
		(*core.Bool)(&m.IncludeInsurance),
		&m.ShippingType,
		&m.ConnectionID,
		&m.ConnectionMethod,
		&m.ShopCarrierID,
		(*core.String)(&m.ShippingServiceName),
		(*core.String)(&m.ExternalShippingName),
		(*core.String)(&m.ExternalShippingID),
		(*core.String)(&m.ExternalShippingCode),
		(*core.Time)(&m.ExternalShippingCreatedAt),
		(*core.Time)(&m.ExternalShippingUpdatedAt),
		(*core.Time)(&m.ExternalShippingCancelledAt),
		(*core.Time)(&m.ExternalShippingDeliveredAt),
		(*core.Time)(&m.ExternalShippingReturnedAt),
		(*core.Time)(&m.ExternalShippingClosedAt),
		(*core.String)(&m.ExternalShippingState),
		(*core.String)(&m.ExternalShippingStateCode),
		&m.ExternalShippingStatus,
		(*core.String)(&m.ExternalShippingNote),
		(*core.String)(&m.ExternalShippingSubState),
		core.JSON{&m.ExternalShippingData},
		&m.ShippingState,
		&m.ShippingStatus,
		&m.EtopPaymentStatus,
		&m.Status,
		&m.SyncStatus,
		core.JSON{&m.SyncStates},
		(*core.Time)(&m.LastSyncAt),
		core.JSON{&m.ExternalShippingLogs},
		(*core.String)(&m.AdminNote),
		(*core.Bool)(&m.IsPartialDelivery),
		&m.CreatedBy,
		(*core.Int)(&m.GrossWeight),
		(*core.Int)(&m.ChargeableWeight),
		(*core.Int)(&m.Length),
		(*core.Int)(&m.Width),
		(*core.Int)(&m.Height),
		(*core.String)(&m.DeliveryRoute),
		(*core.String)(&m.ExternalAffiliateID),
		&m.Rid,
	}
}

func (m *Fulfillment) SQLScan(opts core.Opts, row *sql.Row) error {
	return row.Scan(m.SQLScanArgs(opts)...)
}

func (ms *Fulfillments) SQLScan(opts core.Opts, rows *sql.Rows) error {
	res := make(Fulfillments, 0, 128)
	for rows.Next() {
		m := new(Fulfillment)
		args := m.SQLScanArgs(opts)
		if err := rows.Scan(args...); err != nil {
			return err
		}
		res = append(res, m)
	}
	if err := rows.Err(); err != nil {
		return err
	}
	*ms = res
	return nil
}

func (_ *Fulfillment) SQLSelect(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Select)
	return nil
}

func (_ *Fulfillments) SQLSelect(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Select)
	return nil
}

func (m *Fulfillment) SQLInsert(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Insert)
	w.WriteRawString(" (")
	w.WriteMarkers(104)
	w.WriteByte(')')
	w.WriteArgs(m.SQLArgs(w.Opts(), true))
	return nil
}

func (ms Fulfillments) SQLInsert(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Insert)
	w.WriteRawString(" (")
	for i := 0; i < len(ms); i++ {
		w.WriteMarkers(104)
		w.WriteArgs(ms[i].SQLArgs(w.Opts(), true))
		w.WriteRawString("),(")
	}
	w.TrimLast(2)
	return nil
}

func (m *Fulfillment) SQLUpsert(w SQLWriter) error {
	m.SQLInsert(w)
	w.WriteQueryString(__sqlFulfillment_UpdateOnConflict)
	w.WriteQueryString(" ")
	w.WriteQueryString(__sqlFulfillment_ListColsOnConflict)
	return nil
}

func (ms Fulfillments) SQLUpsert(w SQLWriter) error {
	ms.SQLInsert(w)
	w.WriteQueryString(__sqlFulfillment_UpdateOnConflict)
	w.WriteQueryString(" ")
	w.WriteQueryString(__sqlFulfillment_ListColsOnConflict)
	return nil
}

func (m *Fulfillment) SQLUpdate(w SQLWriter) error {
	now, opts := time.Now(), w.Opts()
	_, _ = now, opts // suppress unuse error
	var flag bool
	w.WriteRawString("UPDATE ")
	w.WriteName("fulfillment")
	w.WriteRawString(" SET ")
	if m.ID != 0 {
		flag = true
		w.WriteName("id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ID)
	}
	if m.OrderID != 0 {
		flag = true
		w.WriteName("order_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.OrderID)
	}
	if m.ShopID != 0 {
		flag = true
		w.WriteName("shop_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShopID)
	}
	if m.PartnerID != 0 {
		flag = true
		w.WriteName("partner_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.PartnerID)
	}
	if m.ShopConfirm != 0 {
		flag = true
		w.WriteName("shop_confirm")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShopConfirm)
	}
	if m.ConfirmStatus != 0 {
		flag = true
		w.WriteName("confirm_status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ConfirmStatus)
	}
	if m.TotalItems != 0 {
		flag = true
		w.WriteName("total_items")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TotalItems)
	}
	if m.TotalWeight != 0 {
		flag = true
		w.WriteName("total_weight")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TotalWeight)
	}
	if m.BasketValue != 0 {
		flag = true
		w.WriteName("basket_value")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.BasketValue)
	}
	if m.TotalDiscount != 0 {
		flag = true
		w.WriteName("total_discount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TotalDiscount)
	}
	if m.TotalAmount != 0 {
		flag = true
		w.WriteName("total_amount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TotalAmount)
	}
	if m.TotalCODAmount != 0 {
		flag = true
		w.WriteName("total_cod_amount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TotalCODAmount)
	}
	if m.OriginalCODAmount != 0 {
		flag = true
		w.WriteName("original_cod_amount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.OriginalCODAmount)
	}
	if m.ActualCompensationAmount != 0 {
		flag = true
		w.WriteName("actual_compensation_amount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ActualCompensationAmount)
	}
	if m.ShippingFeeCustomer != 0 {
		flag = true
		w.WriteName("shipping_fee_customer")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeCustomer)
	}
	if m.ShippingFeeShop != 0 {
		flag = true
		w.WriteName("shipping_fee_shop")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeShop)
	}
	if m.ShippingFeeShopLines != nil {
		flag = true
		w.WriteName("shipping_fee_shop_lines")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.ShippingFeeShopLines})
	}
	if m.ShippingServiceFee != 0 {
		flag = true
		w.WriteName("shipping_service_fee")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingServiceFee)
	}
	if m.ExternalShippingFee != 0 {
		flag = true
		w.WriteName("external_shipping_fee")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingFee)
	}
	if m.ProviderShippingFeeLines != nil {
		flag = true
		w.WriteName("provider_shipping_fee_lines")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.ProviderShippingFeeLines})
	}
	if m.EtopDiscount != 0 {
		flag = true
		w.WriteName("etop_discount")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.EtopDiscount)
	}
	if m.EtopFeeAdjustment != 0 {
		flag = true
		w.WriteName("etop_fee_adjustment")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.EtopFeeAdjustment)
	}
	if m.ShippingFeeMain != 0 {
		flag = true
		w.WriteName("shipping_fee_main")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeMain)
	}
	if m.ShippingFeeReturn != 0 {
		flag = true
		w.WriteName("shipping_fee_return")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeReturn)
	}
	if m.ShippingFeeInsurance != 0 {
		flag = true
		w.WriteName("shipping_fee_insurance")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeInsurance)
	}
	if m.ShippingFeeAdjustment != 0 {
		flag = true
		w.WriteName("shipping_fee_adjustment")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeAdjustment)
	}
	if m.ShippingFeeCODS != 0 {
		flag = true
		w.WriteName("shipping_fee_cods")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeCODS)
	}
	if m.ShippingFeeInfoChange != 0 {
		flag = true
		w.WriteName("shipping_fee_info_change")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeInfoChange)
	}
	if m.ShippingFeeOther != 0 {
		flag = true
		w.WriteName("shipping_fee_other")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeOther)
	}
	if m.EtopAdjustedShippingFeeMain != 0 {
		flag = true
		w.WriteName("etop_adjusted_shipping_fee_main")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.EtopAdjustedShippingFeeMain)
	}
	if m.EtopPriceRule {
		flag = true
		w.WriteName("etop_price_rule")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.EtopPriceRule)
	}
	if m.VariantIDs != nil {
		flag = true
		w.WriteName("variant_ids")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.Array{m.VariantIDs, opts})
	}
	if m.Lines != nil {
		flag = true
		w.WriteName("lines")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.Lines})
	}
	if m.TypeFrom != "" {
		flag = true
		w.WriteName("type_from")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(string(m.TypeFrom))
	}
	if m.TypeTo != "" {
		flag = true
		w.WriteName("type_to")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(string(m.TypeTo))
	}
	if m.AddressFrom != nil {
		flag = true
		w.WriteName("address_from")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.AddressFrom})
	}
	if m.AddressTo != nil {
		flag = true
		w.WriteName("address_to")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.AddressTo})
	}
	if m.AddressReturn != nil {
		flag = true
		w.WriteName("address_return")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.AddressReturn})
	}
	if m.AddressToProvinceCode != "" {
		flag = true
		w.WriteName("address_to_province_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.AddressToProvinceCode)
	}
	if m.AddressToDistrictCode != "" {
		flag = true
		w.WriteName("address_to_district_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.AddressToDistrictCode)
	}
	if m.AddressToWardCode != "" {
		flag = true
		w.WriteName("address_to_ward_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.AddressToWardCode)
	}
	if !m.CreatedAt.IsZero() {
		flag = true
		w.WriteName("created_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.CreatedAt)
	}
	if !m.UpdatedAt.IsZero() {
		flag = true
		w.WriteName("updated_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.UpdatedAt)
	}
	if !m.ClosedAt.IsZero() {
		flag = true
		w.WriteName("closed_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ClosedAt)
	}
	if !m.ExpectedDeliveryAt.IsZero() {
		flag = true
		w.WriteName("expected_delivery_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExpectedDeliveryAt)
	}
	if !m.ExpectedPickAt.IsZero() {
		flag = true
		w.WriteName("expected_pick_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExpectedPickAt)
	}
	if !m.CODEtopTransferedAt.IsZero() {
		flag = true
		w.WriteName("cod_etop_transfered_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.CODEtopTransferedAt)
	}
	if !m.ShippingFeeShopTransferedAt.IsZero() {
		flag = true
		w.WriteName("shipping_fee_shop_transfered_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingFeeShopTransferedAt)
	}
	if !m.ShippingCancelledAt.IsZero() {
		flag = true
		w.WriteName("shipping_cancelled_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingCancelledAt)
	}
	if !m.ShippingDeliveredAt.IsZero() {
		flag = true
		w.WriteName("shipping_delivered_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingDeliveredAt)
	}
	if !m.ShippingReturnedAt.IsZero() {
		flag = true
		w.WriteName("shipping_returned_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingReturnedAt)
	}
	if !m.ShippingCreatedAt.IsZero() {
		flag = true
		w.WriteName("shipping_created_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingCreatedAt)
	}
	if !m.ShippingPickingAt.IsZero() {
		flag = true
		w.WriteName("shipping_picking_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingPickingAt)
	}
	if !m.ShippingHoldingAt.IsZero() {
		flag = true
		w.WriteName("shipping_holding_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingHoldingAt)
	}
	if !m.ShippingDeliveringAt.IsZero() {
		flag = true
		w.WriteName("shipping_delivering_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingDeliveringAt)
	}
	if !m.ShippingReturningAt.IsZero() {
		flag = true
		w.WriteName("shipping_returning_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingReturningAt)
	}
	if m.MoneyTransactionID != 0 {
		flag = true
		w.WriteName("money_transaction_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.MoneyTransactionID)
	}
	if m.MoneyTransactionShippingExternalID != 0 {
		flag = true
		w.WriteName("money_transaction_shipping_external_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.MoneyTransactionShippingExternalID)
	}
	if m.CancelReason != "" {
		flag = true
		w.WriteName("cancel_reason")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.CancelReason)
	}
	if m.ShippingProvider != 0 {
		flag = true
		w.WriteName("shipping_provider")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingProvider)
	}
	if m.ProviderServiceID != "" {
		flag = true
		w.WriteName("provider_service_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ProviderServiceID)
	}
	if m.ShippingCode != "" {
		flag = true
		w.WriteName("shipping_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingCode)
	}
	if m.ShippingNote != "" {
		flag = true
		w.WriteName("shipping_note")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingNote)
	}
	if m.TryOn != 0 {
		flag = true
		w.WriteName("try_on")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.TryOn)
	}
	if m.IncludeInsurance {
		flag = true
		w.WriteName("include_insurance")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.IncludeInsurance)
	}
	if m.ShippingType != 0 {
		flag = true
		w.WriteName("shipping_type")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingType)
	}
	if m.ConnectionID != 0 {
		flag = true
		w.WriteName("connection_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ConnectionID)
	}
	if m.ConnectionMethod != 0 {
		flag = true
		w.WriteName("connection_method")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ConnectionMethod)
	}
	if m.ShopCarrierID != 0 {
		flag = true
		w.WriteName("shop_carrier_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShopCarrierID)
	}
	if m.ShippingServiceName != "" {
		flag = true
		w.WriteName("shipping_service_name")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingServiceName)
	}
	if m.ExternalShippingName != "" {
		flag = true
		w.WriteName("external_shipping_name")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingName)
	}
	if m.ExternalShippingID != "" {
		flag = true
		w.WriteName("external_shipping_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingID)
	}
	if m.ExternalShippingCode != "" {
		flag = true
		w.WriteName("external_shipping_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingCode)
	}
	if !m.ExternalShippingCreatedAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_created_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingCreatedAt)
	}
	if !m.ExternalShippingUpdatedAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_updated_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingUpdatedAt)
	}
	if !m.ExternalShippingCancelledAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_cancelled_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingCancelledAt)
	}
	if !m.ExternalShippingDeliveredAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_delivered_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingDeliveredAt)
	}
	if !m.ExternalShippingReturnedAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_returned_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingReturnedAt)
	}
	if !m.ExternalShippingClosedAt.IsZero() {
		flag = true
		w.WriteName("external_shipping_closed_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingClosedAt)
	}
	if m.ExternalShippingState != "" {
		flag = true
		w.WriteName("external_shipping_state")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingState)
	}
	if m.ExternalShippingStateCode != "" {
		flag = true
		w.WriteName("external_shipping_state_code")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingStateCode)
	}
	if m.ExternalShippingStatus != 0 {
		flag = true
		w.WriteName("external_shipping_status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingStatus)
	}
	if m.ExternalShippingNote != "" {
		flag = true
		w.WriteName("external_shipping_note")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingNote)
	}
	if m.ExternalShippingSubState != "" {
		flag = true
		w.WriteName("external_shipping_sub_state")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalShippingSubState)
	}
	if m.ExternalShippingData != nil {
		flag = true
		w.WriteName("external_shipping_data")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.ExternalShippingData})
	}
	if m.ShippingState != 0 {
		flag = true
		w.WriteName("shipping_state")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingState)
	}
	if m.ShippingStatus != 0 {
		flag = true
		w.WriteName("shipping_status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ShippingStatus)
	}
	if m.EtopPaymentStatus != 0 {
		flag = true
		w.WriteName("etop_payment_status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.EtopPaymentStatus)
	}
	if m.Status != 0 {
		flag = true
		w.WriteName("status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.Status)
	}
	if m.SyncStatus != 0 {
		flag = true
		w.WriteName("sync_status")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.SyncStatus)
	}
	if m.SyncStates != nil {
		flag = true
		w.WriteName("sync_states")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.SyncStates})
	}
	if !m.LastSyncAt.IsZero() {
		flag = true
		w.WriteName("last_sync_at")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.LastSyncAt)
	}
	if m.ExternalShippingLogs != nil {
		flag = true
		w.WriteName("external_shipping_logs")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(core.JSON{m.ExternalShippingLogs})
	}
	if m.AdminNote != "" {
		flag = true
		w.WriteName("admin_note")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.AdminNote)
	}
	if m.IsPartialDelivery {
		flag = true
		w.WriteName("is_partial_delivery")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.IsPartialDelivery)
	}
	if m.CreatedBy != 0 {
		flag = true
		w.WriteName("created_by")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.CreatedBy)
	}
	if m.GrossWeight != 0 {
		flag = true
		w.WriteName("gross_weight")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.GrossWeight)
	}
	if m.ChargeableWeight != 0 {
		flag = true
		w.WriteName("chargeable_weight")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ChargeableWeight)
	}
	if m.Length != 0 {
		flag = true
		w.WriteName("length")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.Length)
	}
	if m.Width != 0 {
		flag = true
		w.WriteName("width")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.Width)
	}
	if m.Height != 0 {
		flag = true
		w.WriteName("height")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.Height)
	}
	if m.DeliveryRoute != "" {
		flag = true
		w.WriteName("delivery_route")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.DeliveryRoute)
	}
	if m.ExternalAffiliateID != "" {
		flag = true
		w.WriteName("external_affiliate_id")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.ExternalAffiliateID)
	}
	if m.Rid != 0 {
		flag = true
		w.WriteName("rid")
		w.WriteByte('=')
		w.WriteMarker()
		w.WriteByte(',')
		w.WriteArg(m.Rid)
	}
	if !flag {
		return core.ErrNoColumn
	}
	w.TrimLast(1)
	return nil
}

func (m *Fulfillment) SQLUpdateAll(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_UpdateAll)
	w.WriteRawString(" = (")
	w.WriteMarkers(104)
	w.WriteByte(')')
	w.WriteArgs(m.SQLArgs(w.Opts(), false))
	return nil
}

type FulfillmentHistory map[string]interface{}
type FulfillmentHistories []map[string]interface{}

func (m *FulfillmentHistory) SQLTableName() string  { return "history.\"fulfillment\"" }
func (m FulfillmentHistories) SQLTableName() string { return "history.\"fulfillment\"" }

func (m *FulfillmentHistory) SQLSelect(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Select_history)
	return nil
}

func (m FulfillmentHistories) SQLSelect(w SQLWriter) error {
	w.WriteQueryString(__sqlFulfillment_Select_history)
	return nil
}

func (m FulfillmentHistory) ID() core.Interface            { return core.Interface{m["id"]} }
func (m FulfillmentHistory) OrderID() core.Interface       { return core.Interface{m["order_id"]} }
func (m FulfillmentHistory) ShopID() core.Interface        { return core.Interface{m["shop_id"]} }
func (m FulfillmentHistory) PartnerID() core.Interface     { return core.Interface{m["partner_id"]} }
func (m FulfillmentHistory) ShopConfirm() core.Interface   { return core.Interface{m["shop_confirm"]} }
func (m FulfillmentHistory) ConfirmStatus() core.Interface { return core.Interface{m["confirm_status"]} }
func (m FulfillmentHistory) TotalItems() core.Interface    { return core.Interface{m["total_items"]} }
func (m FulfillmentHistory) TotalWeight() core.Interface   { return core.Interface{m["total_weight"]} }
func (m FulfillmentHistory) BasketValue() core.Interface   { return core.Interface{m["basket_value"]} }
func (m FulfillmentHistory) TotalDiscount() core.Interface { return core.Interface{m["total_discount"]} }
func (m FulfillmentHistory) TotalAmount() core.Interface   { return core.Interface{m["total_amount"]} }
func (m FulfillmentHistory) TotalCODAmount() core.Interface {
	return core.Interface{m["total_cod_amount"]}
}
func (m FulfillmentHistory) OriginalCODAmount() core.Interface {
	return core.Interface{m["original_cod_amount"]}
}
func (m FulfillmentHistory) ActualCompensationAmount() core.Interface {
	return core.Interface{m["actual_compensation_amount"]}
}
func (m FulfillmentHistory) ShippingFeeCustomer() core.Interface {
	return core.Interface{m["shipping_fee_customer"]}
}
func (m FulfillmentHistory) ShippingFeeShop() core.Interface {
	return core.Interface{m["shipping_fee_shop"]}
}
func (m FulfillmentHistory) ShippingFeeShopLines() core.Interface {
	return core.Interface{m["shipping_fee_shop_lines"]}
}
func (m FulfillmentHistory) ShippingServiceFee() core.Interface {
	return core.Interface{m["shipping_service_fee"]}
}
func (m FulfillmentHistory) ExternalShippingFee() core.Interface {
	return core.Interface{m["external_shipping_fee"]}
}
func (m FulfillmentHistory) ProviderShippingFeeLines() core.Interface {
	return core.Interface{m["provider_shipping_fee_lines"]}
}
func (m FulfillmentHistory) EtopDiscount() core.Interface { return core.Interface{m["etop_discount"]} }
func (m FulfillmentHistory) EtopFeeAdjustment() core.Interface {
	return core.Interface{m["etop_fee_adjustment"]}
}
func (m FulfillmentHistory) ShippingFeeMain() core.Interface {
	return core.Interface{m["shipping_fee_main"]}
}
func (m FulfillmentHistory) ShippingFeeReturn() core.Interface {
	return core.Interface{m["shipping_fee_return"]}
}
func (m FulfillmentHistory) ShippingFeeInsurance() core.Interface {
	return core.Interface{m["shipping_fee_insurance"]}
}
func (m FulfillmentHistory) ShippingFeeAdjustment() core.Interface {
	return core.Interface{m["shipping_fee_adjustment"]}
}
func (m FulfillmentHistory) ShippingFeeCODS() core.Interface {
	return core.Interface{m["shipping_fee_cods"]}
}
func (m FulfillmentHistory) ShippingFeeInfoChange() core.Interface {
	return core.Interface{m["shipping_fee_info_change"]}
}
func (m FulfillmentHistory) ShippingFeeOther() core.Interface {
	return core.Interface{m["shipping_fee_other"]}
}
func (m FulfillmentHistory) EtopAdjustedShippingFeeMain() core.Interface {
	return core.Interface{m["etop_adjusted_shipping_fee_main"]}
}
func (m FulfillmentHistory) EtopPriceRule() core.Interface {
	return core.Interface{m["etop_price_rule"]}
}
func (m FulfillmentHistory) VariantIDs() core.Interface    { return core.Interface{m["variant_ids"]} }
func (m FulfillmentHistory) Lines() core.Interface         { return core.Interface{m["lines"]} }
func (m FulfillmentHistory) TypeFrom() core.Interface      { return core.Interface{m["type_from"]} }
func (m FulfillmentHistory) TypeTo() core.Interface        { return core.Interface{m["type_to"]} }
func (m FulfillmentHistory) AddressFrom() core.Interface   { return core.Interface{m["address_from"]} }
func (m FulfillmentHistory) AddressTo() core.Interface     { return core.Interface{m["address_to"]} }
func (m FulfillmentHistory) AddressReturn() core.Interface { return core.Interface{m["address_return"]} }
func (m FulfillmentHistory) AddressToProvinceCode() core.Interface {
	return core.Interface{m["address_to_province_code"]}
}
func (m FulfillmentHistory) AddressToDistrictCode() core.Interface {
	return core.Interface{m["address_to_district_code"]}
}
func (m FulfillmentHistory) AddressToWardCode() core.Interface {
	return core.Interface{m["address_to_ward_code"]}
}
func (m FulfillmentHistory) CreatedAt() core.Interface { return core.Interface{m["created_at"]} }
func (m FulfillmentHistory) UpdatedAt() core.Interface { return core.Interface{m["updated_at"]} }
func (m FulfillmentHistory) ClosedAt() core.Interface  { return core.Interface{m["closed_at"]} }
func (m FulfillmentHistory) ExpectedDeliveryAt() core.Interface {
	return core.Interface{m["expected_delivery_at"]}
}
func (m FulfillmentHistory) ExpectedPickAt() core.Interface {
	return core.Interface{m["expected_pick_at"]}
}
func (m FulfillmentHistory) CODEtopTransferedAt() core.Interface {
	return core.Interface{m["cod_etop_transfered_at"]}
}
func (m FulfillmentHistory) ShippingFeeShopTransferedAt() core.Interface {
	return core.Interface{m["shipping_fee_shop_transfered_at"]}
}
func (m FulfillmentHistory) ShippingCancelledAt() core.Interface {
	return core.Interface{m["shipping_cancelled_at"]}
}
func (m FulfillmentHistory) ShippingDeliveredAt() core.Interface {
	return core.Interface{m["shipping_delivered_at"]}
}
func (m FulfillmentHistory) ShippingReturnedAt() core.Interface {
	return core.Interface{m["shipping_returned_at"]}
}
func (m FulfillmentHistory) ShippingCreatedAt() core.Interface {
	return core.Interface{m["shipping_created_at"]}
}
func (m FulfillmentHistory) ShippingPickingAt() core.Interface {
	return core.Interface{m["shipping_picking_at"]}
}
func (m FulfillmentHistory) ShippingHoldingAt() core.Interface {
	return core.Interface{m["shipping_holding_at"]}
}
func (m FulfillmentHistory) ShippingDeliveringAt() core.Interface {
	return core.Interface{m["shipping_delivering_at"]}
}
func (m FulfillmentHistory) ShippingReturningAt() core.Interface {
	return core.Interface{m["shipping_returning_at"]}
}
func (m FulfillmentHistory) MoneyTransactionID() core.Interface {
	return core.Interface{m["money_transaction_id"]}
}
func (m FulfillmentHistory) MoneyTransactionShippingExternalID() core.Interface {
	return core.Interface{m["money_transaction_shipping_external_id"]}
}
func (m FulfillmentHistory) CancelReason() core.Interface { return core.Interface{m["cancel_reason"]} }
func (m FulfillmentHistory) ShippingProvider() core.Interface {
	return core.Interface{m["shipping_provider"]}
}
func (m FulfillmentHistory) ProviderServiceID() core.Interface {
	return core.Interface{m["provider_service_id"]}
}
func (m FulfillmentHistory) ShippingCode() core.Interface { return core.Interface{m["shipping_code"]} }
func (m FulfillmentHistory) ShippingNote() core.Interface { return core.Interface{m["shipping_note"]} }
func (m FulfillmentHistory) TryOn() core.Interface        { return core.Interface{m["try_on"]} }
func (m FulfillmentHistory) IncludeInsurance() core.Interface {
	return core.Interface{m["include_insurance"]}
}
func (m FulfillmentHistory) ShippingType() core.Interface { return core.Interface{m["shipping_type"]} }
func (m FulfillmentHistory) ConnectionID() core.Interface { return core.Interface{m["connection_id"]} }
func (m FulfillmentHistory) ConnectionMethod() core.Interface {
	return core.Interface{m["connection_method"]}
}
func (m FulfillmentHistory) ShopCarrierID() core.Interface {
	return core.Interface{m["shop_carrier_id"]}
}
func (m FulfillmentHistory) ShippingServiceName() core.Interface {
	return core.Interface{m["shipping_service_name"]}
}
func (m FulfillmentHistory) ExternalShippingName() core.Interface {
	return core.Interface{m["external_shipping_name"]}
}
func (m FulfillmentHistory) ExternalShippingID() core.Interface {
	return core.Interface{m["external_shipping_id"]}
}
func (m FulfillmentHistory) ExternalShippingCode() core.Interface {
	return core.Interface{m["external_shipping_code"]}
}
func (m FulfillmentHistory) ExternalShippingCreatedAt() core.Interface {
	return core.Interface{m["external_shipping_created_at"]}
}
func (m FulfillmentHistory) ExternalShippingUpdatedAt() core.Interface {
	return core.Interface{m["external_shipping_updated_at"]}
}
func (m FulfillmentHistory) ExternalShippingCancelledAt() core.Interface {
	return core.Interface{m["external_shipping_cancelled_at"]}
}
func (m FulfillmentHistory) ExternalShippingDeliveredAt() core.Interface {
	return core.Interface{m["external_shipping_delivered_at"]}
}
func (m FulfillmentHistory) ExternalShippingReturnedAt() core.Interface {
	return core.Interface{m["external_shipping_returned_at"]}
}
func (m FulfillmentHistory) ExternalShippingClosedAt() core.Interface {
	return core.Interface{m["external_shipping_closed_at"]}
}
func (m FulfillmentHistory) ExternalShippingState() core.Interface {
	return core.Interface{m["external_shipping_state"]}
}
func (m FulfillmentHistory) ExternalShippingStateCode() core.Interface {
	return core.Interface{m["external_shipping_state_code"]}
}
func (m FulfillmentHistory) ExternalShippingStatus() core.Interface {
	return core.Interface{m["external_shipping_status"]}
}
func (m FulfillmentHistory) ExternalShippingNote() core.Interface {
	return core.Interface{m["external_shipping_note"]}
}
func (m FulfillmentHistory) ExternalShippingSubState() core.Interface {
	return core.Interface{m["external_shipping_sub_state"]}
}
func (m FulfillmentHistory) ExternalShippingData() core.Interface {
	return core.Interface{m["external_shipping_data"]}
}
func (m FulfillmentHistory) ShippingState() core.Interface { return core.Interface{m["shipping_state"]} }
func (m FulfillmentHistory) ShippingStatus() core.Interface {
	return core.Interface{m["shipping_status"]}
}
func (m FulfillmentHistory) EtopPaymentStatus() core.Interface {
	return core.Interface{m["etop_payment_status"]}
}
func (m FulfillmentHistory) Status() core.Interface     { return core.Interface{m["status"]} }
func (m FulfillmentHistory) SyncStatus() core.Interface { return core.Interface{m["sync_status"]} }
func (m FulfillmentHistory) SyncStates() core.Interface { return core.Interface{m["sync_states"]} }
func (m FulfillmentHistory) LastSyncAt() core.Interface { return core.Interface{m["last_sync_at"]} }
func (m FulfillmentHistory) ExternalShippingLogs() core.Interface {
	return core.Interface{m["external_shipping_logs"]}
}
func (m FulfillmentHistory) AdminNote() core.Interface { return core.Interface{m["admin_note"]} }
func (m FulfillmentHistory) IsPartialDelivery() core.Interface {
	return core.Interface{m["is_partial_delivery"]}
}
func (m FulfillmentHistory) CreatedBy() core.Interface   { return core.Interface{m["created_by"]} }
func (m FulfillmentHistory) GrossWeight() core.Interface { return core.Interface{m["gross_weight"]} }
func (m FulfillmentHistory) ChargeableWeight() core.Interface {
	return core.Interface{m["chargeable_weight"]}
}
func (m FulfillmentHistory) Length() core.Interface        { return core.Interface{m["length"]} }
func (m FulfillmentHistory) Width() core.Interface         { return core.Interface{m["width"]} }
func (m FulfillmentHistory) Height() core.Interface        { return core.Interface{m["height"]} }
func (m FulfillmentHistory) DeliveryRoute() core.Interface { return core.Interface{m["delivery_route"]} }
func (m FulfillmentHistory) ExternalAffiliateID() core.Interface {
	return core.Interface{m["external_affiliate_id"]}
}
func (m FulfillmentHistory) Rid() core.Interface { return core.Interface{m["rid"]} }

func (m *FulfillmentHistory) SQLScan(opts core.Opts, row *sql.Row) error {
	data := make([]interface{}, 104)
	args := make([]interface{}, 104)
	for i := 0; i < 104; i++ {
		args[i] = &data[i]
	}
	if err := row.Scan(args...); err != nil {
		return err
	}
	res := make(FulfillmentHistory, 104)
	res["id"] = data[0]
	res["order_id"] = data[1]
	res["shop_id"] = data[2]
	res["partner_id"] = data[3]
	res["shop_confirm"] = data[4]
	res["confirm_status"] = data[5]
	res["total_items"] = data[6]
	res["total_weight"] = data[7]
	res["basket_value"] = data[8]
	res["total_discount"] = data[9]
	res["total_amount"] = data[10]
	res["total_cod_amount"] = data[11]
	res["original_cod_amount"] = data[12]
	res["actual_compensation_amount"] = data[13]
	res["shipping_fee_customer"] = data[14]
	res["shipping_fee_shop"] = data[15]
	res["shipping_fee_shop_lines"] = data[16]
	res["shipping_service_fee"] = data[17]
	res["external_shipping_fee"] = data[18]
	res["provider_shipping_fee_lines"] = data[19]
	res["etop_discount"] = data[20]
	res["etop_fee_adjustment"] = data[21]
	res["shipping_fee_main"] = data[22]
	res["shipping_fee_return"] = data[23]
	res["shipping_fee_insurance"] = data[24]
	res["shipping_fee_adjustment"] = data[25]
	res["shipping_fee_cods"] = data[26]
	res["shipping_fee_info_change"] = data[27]
	res["shipping_fee_other"] = data[28]
	res["etop_adjusted_shipping_fee_main"] = data[29]
	res["etop_price_rule"] = data[30]
	res["variant_ids"] = data[31]
	res["lines"] = data[32]
	res["type_from"] = data[33]
	res["type_to"] = data[34]
	res["address_from"] = data[35]
	res["address_to"] = data[36]
	res["address_return"] = data[37]
	res["address_to_province_code"] = data[38]
	res["address_to_district_code"] = data[39]
	res["address_to_ward_code"] = data[40]
	res["created_at"] = data[41]
	res["updated_at"] = data[42]
	res["closed_at"] = data[43]
	res["expected_delivery_at"] = data[44]
	res["expected_pick_at"] = data[45]
	res["cod_etop_transfered_at"] = data[46]
	res["shipping_fee_shop_transfered_at"] = data[47]
	res["shipping_cancelled_at"] = data[48]
	res["shipping_delivered_at"] = data[49]
	res["shipping_returned_at"] = data[50]
	res["shipping_created_at"] = data[51]
	res["shipping_picking_at"] = data[52]
	res["shipping_holding_at"] = data[53]
	res["shipping_delivering_at"] = data[54]
	res["shipping_returning_at"] = data[55]
	res["money_transaction_id"] = data[56]
	res["money_transaction_shipping_external_id"] = data[57]
	res["cancel_reason"] = data[58]
	res["shipping_provider"] = data[59]
	res["provider_service_id"] = data[60]
	res["shipping_code"] = data[61]
	res["shipping_note"] = data[62]
	res["try_on"] = data[63]
	res["include_insurance"] = data[64]
	res["shipping_type"] = data[65]
	res["connection_id"] = data[66]
	res["connection_method"] = data[67]
	res["shop_carrier_id"] = data[68]
	res["shipping_service_name"] = data[69]
	res["external_shipping_name"] = data[70]
	res["external_shipping_id"] = data[71]
	res["external_shipping_code"] = data[72]
	res["external_shipping_created_at"] = data[73]
	res["external_shipping_updated_at"] = data[74]
	res["external_shipping_cancelled_at"] = data[75]
	res["external_shipping_delivered_at"] = data[76]
	res["external_shipping_returned_at"] = data[77]
	res["external_shipping_closed_at"] = data[78]
	res["external_shipping_state"] = data[79]
	res["external_shipping_state_code"] = data[80]
	res["external_shipping_status"] = data[81]
	res["external_shipping_note"] = data[82]
	res["external_shipping_sub_state"] = data[83]
	res["external_shipping_data"] = data[84]
	res["shipping_state"] = data[85]
	res["shipping_status"] = data[86]
	res["etop_payment_status"] = data[87]
	res["status"] = data[88]
	res["sync_status"] = data[89]
	res["sync_states"] = data[90]
	res["last_sync_at"] = data[91]
	res["external_shipping_logs"] = data[92]
	res["admin_note"] = data[93]
	res["is_partial_delivery"] = data[94]
	res["created_by"] = data[95]
	res["gross_weight"] = data[96]
	res["chargeable_weight"] = data[97]
	res["length"] = data[98]
	res["width"] = data[99]
	res["height"] = data[100]
	res["delivery_route"] = data[101]
	res["external_affiliate_id"] = data[102]
	res["rid"] = data[103]
	*m = res
	return nil
}

func (ms *FulfillmentHistories) SQLScan(opts core.Opts, rows *sql.Rows) error {
	data := make([]interface{}, 104)
	args := make([]interface{}, 104)
	for i := 0; i < 104; i++ {
		args[i] = &data[i]
	}
	res := make(FulfillmentHistories, 0, 128)
	for rows.Next() {
		if err := rows.Scan(args...); err != nil {
			return err
		}
		m := make(FulfillmentHistory)
		m["id"] = data[0]
		m["order_id"] = data[1]
		m["shop_id"] = data[2]
		m["partner_id"] = data[3]
		m["shop_confirm"] = data[4]
		m["confirm_status"] = data[5]
		m["total_items"] = data[6]
		m["total_weight"] = data[7]
		m["basket_value"] = data[8]
		m["total_discount"] = data[9]
		m["total_amount"] = data[10]
		m["total_cod_amount"] = data[11]
		m["original_cod_amount"] = data[12]
		m["actual_compensation_amount"] = data[13]
		m["shipping_fee_customer"] = data[14]
		m["shipping_fee_shop"] = data[15]
		m["shipping_fee_shop_lines"] = data[16]
		m["shipping_service_fee"] = data[17]
		m["external_shipping_fee"] = data[18]
		m["provider_shipping_fee_lines"] = data[19]
		m["etop_discount"] = data[20]
		m["etop_fee_adjustment"] = data[21]
		m["shipping_fee_main"] = data[22]
		m["shipping_fee_return"] = data[23]
		m["shipping_fee_insurance"] = data[24]
		m["shipping_fee_adjustment"] = data[25]
		m["shipping_fee_cods"] = data[26]
		m["shipping_fee_info_change"] = data[27]
		m["shipping_fee_other"] = data[28]
		m["etop_adjusted_shipping_fee_main"] = data[29]
		m["etop_price_rule"] = data[30]
		m["variant_ids"] = data[31]
		m["lines"] = data[32]
		m["type_from"] = data[33]
		m["type_to"] = data[34]
		m["address_from"] = data[35]
		m["address_to"] = data[36]
		m["address_return"] = data[37]
		m["address_to_province_code"] = data[38]
		m["address_to_district_code"] = data[39]
		m["address_to_ward_code"] = data[40]
		m["created_at"] = data[41]
		m["updated_at"] = data[42]
		m["closed_at"] = data[43]
		m["expected_delivery_at"] = data[44]
		m["expected_pick_at"] = data[45]
		m["cod_etop_transfered_at"] = data[46]
		m["shipping_fee_shop_transfered_at"] = data[47]
		m["shipping_cancelled_at"] = data[48]
		m["shipping_delivered_at"] = data[49]
		m["shipping_returned_at"] = data[50]
		m["shipping_created_at"] = data[51]
		m["shipping_picking_at"] = data[52]
		m["shipping_holding_at"] = data[53]
		m["shipping_delivering_at"] = data[54]
		m["shipping_returning_at"] = data[55]
		m["money_transaction_id"] = data[56]
		m["money_transaction_shipping_external_id"] = data[57]
		m["cancel_reason"] = data[58]
		m["shipping_provider"] = data[59]
		m["provider_service_id"] = data[60]
		m["shipping_code"] = data[61]
		m["shipping_note"] = data[62]
		m["try_on"] = data[63]
		m["include_insurance"] = data[64]
		m["shipping_type"] = data[65]
		m["connection_id"] = data[66]
		m["connection_method"] = data[67]
		m["shop_carrier_id"] = data[68]
		m["shipping_service_name"] = data[69]
		m["external_shipping_name"] = data[70]
		m["external_shipping_id"] = data[71]
		m["external_shipping_code"] = data[72]
		m["external_shipping_created_at"] = data[73]
		m["external_shipping_updated_at"] = data[74]
		m["external_shipping_cancelled_at"] = data[75]
		m["external_shipping_delivered_at"] = data[76]
		m["external_shipping_returned_at"] = data[77]
		m["external_shipping_closed_at"] = data[78]
		m["external_shipping_state"] = data[79]
		m["external_shipping_state_code"] = data[80]
		m["external_shipping_status"] = data[81]
		m["external_shipping_note"] = data[82]
		m["external_shipping_sub_state"] = data[83]
		m["external_shipping_data"] = data[84]
		m["shipping_state"] = data[85]
		m["shipping_status"] = data[86]
		m["etop_payment_status"] = data[87]
		m["status"] = data[88]
		m["sync_status"] = data[89]
		m["sync_states"] = data[90]
		m["last_sync_at"] = data[91]
		m["external_shipping_logs"] = data[92]
		m["admin_note"] = data[93]
		m["is_partial_delivery"] = data[94]
		m["created_by"] = data[95]
		m["gross_weight"] = data[96]
		m["chargeable_weight"] = data[97]
		m["length"] = data[98]
		m["width"] = data[99]
		m["height"] = data[100]
		m["delivery_route"] = data[101]
		m["external_affiliate_id"] = data[102]
		m["rid"] = data[103]
		res = append(res, m)
	}
	if err := rows.Err(); err != nil {
		return err
	}
	*ms = res
	return nil
}
