// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package etelecom

import (
	time "time"

	etelecom "o.o/api/etelecom"
	shoptypes "o.o/api/top/int/shop/types"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*etelecom.CallLog)(nil), (*shoptypes.CallLog)(nil), func(arg, out interface{}) error {
		Convert_etelecom_CallLog_shoptypes_CallLog(arg.(*etelecom.CallLog), out.(*shoptypes.CallLog))
		return nil
	})
	s.Register(([]*etelecom.CallLog)(nil), (*[]*shoptypes.CallLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_CallLogs_shoptypes_CallLogs(arg.([]*etelecom.CallLog))
		*out.(*[]*shoptypes.CallLog) = out0
		return nil
	})
	s.Register((*shoptypes.CallLog)(nil), (*etelecom.CallLog)(nil), func(arg, out interface{}) error {
		Convert_shoptypes_CallLog_etelecom_CallLog(arg.(*shoptypes.CallLog), out.(*etelecom.CallLog))
		return nil
	})
	s.Register(([]*shoptypes.CallLog)(nil), (*[]*etelecom.CallLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_shoptypes_CallLogs_etelecom_CallLogs(arg.([]*shoptypes.CallLog))
		*out.(*[]*etelecom.CallLog) = out0
		return nil
	})
	s.Register((*etelecom.CreateCallLogFromCDRArgs)(nil), (*shoptypes.CallLog)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateCallLogFromCDRArgs_shoptypes_CallLog(arg.(*etelecom.CreateCallLogFromCDRArgs), out.(*shoptypes.CallLog))
		return nil
	})
	s.Register((*etelecom.CreateExtensionArgs)(nil), (*shoptypes.Extension)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateExtensionArgs_shoptypes_Extension(arg.(*etelecom.CreateExtensionArgs), out.(*shoptypes.Extension))
		return nil
	})
	s.Register((*etelecom.Extension)(nil), (*shoptypes.Extension)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Extension_shoptypes_Extension(arg.(*etelecom.Extension), out.(*shoptypes.Extension))
		return nil
	})
	s.Register(([]*etelecom.Extension)(nil), (*[]*shoptypes.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Extensions_shoptypes_Extensions(arg.([]*etelecom.Extension))
		*out.(*[]*shoptypes.Extension) = out0
		return nil
	})
	s.Register((*shoptypes.Extension)(nil), (*etelecom.Extension)(nil), func(arg, out interface{}) error {
		Convert_shoptypes_Extension_etelecom_Extension(arg.(*shoptypes.Extension), out.(*etelecom.Extension))
		return nil
	})
	s.Register(([]*shoptypes.Extension)(nil), (*[]*etelecom.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_shoptypes_Extensions_etelecom_Extensions(arg.([]*shoptypes.Extension))
		*out.(*[]*etelecom.Extension) = out0
		return nil
	})
	s.Register((*etelecom.ExtensionExternalData)(nil), (*shoptypes.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_etelecom_ExtensionExternalData_shoptypes_ExtensionExternalData(arg.(*etelecom.ExtensionExternalData), out.(*shoptypes.ExtensionExternalData))
		return nil
	})
	s.Register(([]*etelecom.ExtensionExternalData)(nil), (*[]*shoptypes.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_ExtensionExternalDatas_shoptypes_ExtensionExternalDatas(arg.([]*etelecom.ExtensionExternalData))
		*out.(*[]*shoptypes.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*shoptypes.ExtensionExternalData)(nil), (*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_shoptypes_ExtensionExternalData_etelecom_ExtensionExternalData(arg.(*shoptypes.ExtensionExternalData), out.(*etelecom.ExtensionExternalData))
		return nil
	})
	s.Register(([]*shoptypes.ExtensionExternalData)(nil), (*[]*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_shoptypes_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(arg.([]*shoptypes.ExtensionExternalData))
		*out.(*[]*etelecom.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*etelecom.CreateHotlineArgs)(nil), (*shoptypes.Hotline)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateHotlineArgs_shoptypes_Hotline(arg.(*etelecom.CreateHotlineArgs), out.(*shoptypes.Hotline))
		return nil
	})
	s.Register((*etelecom.Hotline)(nil), (*shoptypes.Hotline)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Hotline_shoptypes_Hotline(arg.(*etelecom.Hotline), out.(*shoptypes.Hotline))
		return nil
	})
	s.Register(([]*etelecom.Hotline)(nil), (*[]*shoptypes.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Hotlines_shoptypes_Hotlines(arg.([]*etelecom.Hotline))
		*out.(*[]*shoptypes.Hotline) = out0
		return nil
	})
	s.Register((*shoptypes.Hotline)(nil), (*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		Convert_shoptypes_Hotline_etelecom_Hotline(arg.(*shoptypes.Hotline), out.(*etelecom.Hotline))
		return nil
	})
	s.Register(([]*shoptypes.Hotline)(nil), (*[]*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_shoptypes_Hotlines_etelecom_Hotlines(arg.([]*shoptypes.Hotline))
		*out.(*[]*etelecom.Hotline) = out0
		return nil
	})
}

//-- convert o.o/api/top/int/shop/types.CallLog --//

func Convert_etelecom_CallLog_shoptypes_CallLog(arg *etelecom.CallLog, out *shoptypes.CallLog) *shoptypes.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.CallLog{}
	}
	convert_etelecom_CallLog_shoptypes_CallLog(arg, out)
	return out
}

func convert_etelecom_CallLog_shoptypes_CallLog(arg *etelecom.CallLog, out *shoptypes.CallLog) {
	out.ID = arg.ID                                 // simple assign
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = arg.AccountID                   // simple assign
	out.HotlineID = arg.HotlineID                   // simple assign
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = arg.ExtensionID               // simple assign
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.ContactID = arg.ContactID                   // simple assign
	out.CreatedAt = arg.CreatedAt                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                   // simple assign
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
	out.DurationPostage = arg.DurationPostage       // simple assign
	out.Postage = arg.Postage                       // simple assign
}

func Convert_etelecom_CallLogs_shoptypes_CallLogs(args []*etelecom.CallLog) (outs []*shoptypes.CallLog) {
	if args == nil {
		return nil
	}
	tmps := make([]shoptypes.CallLog, len(args))
	outs = make([]*shoptypes.CallLog, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_CallLog_shoptypes_CallLog(args[i], &tmps[i])
	}
	return outs
}

func Convert_shoptypes_CallLog_etelecom_CallLog(arg *shoptypes.CallLog, out *etelecom.CallLog) *etelecom.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.CallLog{}
	}
	convert_shoptypes_CallLog_etelecom_CallLog(arg, out)
	return out
}

func convert_shoptypes_CallLog_etelecom_CallLog(arg *shoptypes.CallLog, out *etelecom.CallLog) {
	out.ID = arg.ID                                 // simple assign
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = arg.AccountID                   // simple assign
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = arg.ExtensionID               // simple assign
	out.HotlineID = arg.HotlineID                   // simple assign
	out.ContactID = arg.ContactID                   // simple assign
	out.CreatedAt = arg.CreatedAt                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                   // simple assign
	out.DurationPostage = arg.DurationPostage       // simple assign
	out.Postage = arg.Postage                       // simple assign
}

func Convert_shoptypes_CallLogs_etelecom_CallLogs(args []*shoptypes.CallLog) (outs []*etelecom.CallLog) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.CallLog, len(args))
	outs = make([]*etelecom.CallLog, len(args))
	for i := range tmps {
		outs[i] = Convert_shoptypes_CallLog_etelecom_CallLog(args[i], &tmps[i])
	}
	return outs
}

func Apply_etelecom_CreateCallLogFromCDRArgs_shoptypes_CallLog(arg *etelecom.CreateCallLogFromCDRArgs, out *shoptypes.CallLog) *shoptypes.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.CallLog{}
	}
	apply_etelecom_CreateCallLogFromCDRArgs_shoptypes_CallLog(arg, out)
	return out
}

func apply_etelecom_CreateCallLogFromCDRArgs_shoptypes_CallLog(arg *etelecom.CreateCallLogFromCDRArgs, out *shoptypes.CallLog) {
	out.ID = 0                                      // zero value
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = 0                               // zero value
	out.HotlineID = 0                               // zero value
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = 0                             // zero value
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.ContactID = 0                               // zero value
	out.CreatedAt = time.Time{}                     // zero value
	out.UpdatedAt = time.Time{}                     // zero value
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
	out.DurationPostage = 0                         // zero value
	out.Postage = 0                                 // zero value
}

//-- convert o.o/api/top/int/shop/types.Extension --//

func Apply_etelecom_CreateExtensionArgs_shoptypes_Extension(arg *etelecom.CreateExtensionArgs, out *shoptypes.Extension) *shoptypes.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.Extension{}
	}
	apply_etelecom_CreateExtensionArgs_shoptypes_Extension(arg, out)
	return out
}

func apply_etelecom_CreateExtensionArgs_shoptypes_Extension(arg *etelecom.CreateExtensionArgs, out *shoptypes.Extension) {
	out.ID = 0                                    // zero value
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.TenantDomain = ""                         // zero value
	out.HotlineID = arg.HotlineID                 // simple assign
	out.CreatedAt = time.Time{}                   // zero value
	out.UpdatedAt = time.Time{}                   // zero value
}

func Convert_etelecom_Extension_shoptypes_Extension(arg *etelecom.Extension, out *shoptypes.Extension) *shoptypes.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.Extension{}
	}
	convert_etelecom_Extension_shoptypes_Extension(arg, out)
	return out
}

func convert_etelecom_Extension_shoptypes_Extension(arg *etelecom.Extension, out *shoptypes.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.TenantDomain = arg.TenantDomain           // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.CreatedAt = arg.CreatedAt                 // simple assign
	out.UpdatedAt = arg.UpdatedAt                 // simple assign
}

func Convert_etelecom_Extensions_shoptypes_Extensions(args []*etelecom.Extension) (outs []*shoptypes.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]shoptypes.Extension, len(args))
	outs = make([]*shoptypes.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Extension_shoptypes_Extension(args[i], &tmps[i])
	}
	return outs
}

func Convert_shoptypes_Extension_etelecom_Extension(arg *shoptypes.Extension, out *etelecom.Extension) *etelecom.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Extension{}
	}
	convert_shoptypes_Extension_etelecom_Extension(arg, out)
	return out
}

func convert_shoptypes_Extension_etelecom_Extension(arg *shoptypes.Extension, out *etelecom.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.TenantDomain = arg.TenantDomain           // simple assign
	out.ExternalData = nil                        // zero value
	out.CreatedAt = arg.CreatedAt                 // simple assign
	out.UpdatedAt = arg.UpdatedAt                 // simple assign
	out.DeletedAt = time.Time{}                   // zero value
}

func Convert_shoptypes_Extensions_etelecom_Extensions(args []*shoptypes.Extension) (outs []*etelecom.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Extension, len(args))
	outs = make([]*etelecom.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_shoptypes_Extension_etelecom_Extension(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/top/int/shop/types.ExtensionExternalData --//

func Convert_etelecom_ExtensionExternalData_shoptypes_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *shoptypes.ExtensionExternalData) *shoptypes.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.ExtensionExternalData{}
	}
	convert_etelecom_ExtensionExternalData_shoptypes_ExtensionExternalData(arg, out)
	return out
}

func convert_etelecom_ExtensionExternalData_shoptypes_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *shoptypes.ExtensionExternalData) {
	out.ID = 0 // types do not match
}

func Convert_etelecom_ExtensionExternalDatas_shoptypes_ExtensionExternalDatas(args []*etelecom.ExtensionExternalData) (outs []*shoptypes.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]shoptypes.ExtensionExternalData, len(args))
	outs = make([]*shoptypes.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_ExtensionExternalData_shoptypes_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

func Convert_shoptypes_ExtensionExternalData_etelecom_ExtensionExternalData(arg *shoptypes.ExtensionExternalData, out *etelecom.ExtensionExternalData) *etelecom.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.ExtensionExternalData{}
	}
	convert_shoptypes_ExtensionExternalData_etelecom_ExtensionExternalData(arg, out)
	return out
}

func convert_shoptypes_ExtensionExternalData_etelecom_ExtensionExternalData(arg *shoptypes.ExtensionExternalData, out *etelecom.ExtensionExternalData) {
	out.ID = "" // types do not match
}

func Convert_shoptypes_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(args []*shoptypes.ExtensionExternalData) (outs []*etelecom.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.ExtensionExternalData, len(args))
	outs = make([]*etelecom.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_shoptypes_ExtensionExternalData_etelecom_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/top/int/shop/types.Hotline --//

func Apply_etelecom_CreateHotlineArgs_shoptypes_Hotline(arg *etelecom.CreateHotlineArgs, out *shoptypes.Hotline) *shoptypes.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.Hotline{}
	}
	apply_etelecom_CreateHotlineArgs_shoptypes_Hotline(arg, out)
	return out
}

func apply_etelecom_CreateHotlineArgs_shoptypes_Hotline(arg *etelecom.CreateHotlineArgs, out *shoptypes.Hotline) {
	out.ID = 0                          // zero value
	out.OwnerID = arg.OwnerID           // simple assign
	out.Name = arg.Name                 // simple assign
	out.Hotline = arg.Hotline           // simple assign
	out.Network = arg.Network           // simple assign
	out.ConnectionID = arg.ConnectionID // simple assign
	out.ConnectionMethod = 0            // zero value
	out.CreatedAt = time.Time{}         // zero value
	out.UpdatedAt = time.Time{}         // zero value
	out.Status = arg.Status             // simple assign
	out.Description = arg.Description   // simple assign
	out.IsFreeCharge = arg.IsFreeCharge // simple assign
}

func Convert_etelecom_Hotline_shoptypes_Hotline(arg *etelecom.Hotline, out *shoptypes.Hotline) *shoptypes.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shoptypes.Hotline{}
	}
	convert_etelecom_Hotline_shoptypes_Hotline(arg, out)
	return out
}

func convert_etelecom_Hotline_shoptypes_Hotline(arg *etelecom.Hotline, out *shoptypes.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Name = arg.Name                         // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.Status = arg.Status                     // simple assign
	out.Description = arg.Description           // simple assign
	out.IsFreeCharge = arg.IsFreeCharge         // simple assign
}

func Convert_etelecom_Hotlines_shoptypes_Hotlines(args []*etelecom.Hotline) (outs []*shoptypes.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]shoptypes.Hotline, len(args))
	outs = make([]*shoptypes.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Hotline_shoptypes_Hotline(args[i], &tmps[i])
	}
	return outs
}

func Convert_shoptypes_Hotline_etelecom_Hotline(arg *shoptypes.Hotline, out *etelecom.Hotline) *etelecom.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Hotline{}
	}
	convert_shoptypes_Hotline_etelecom_Hotline(arg, out)
	return out
}

func convert_shoptypes_Hotline_etelecom_Hotline(arg *shoptypes.Hotline, out *etelecom.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Name = arg.Name                         // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = time.Time{}                 // zero value
	out.Status = arg.Status                     // simple assign
	out.Description = arg.Description           // simple assign
	out.IsFreeCharge = arg.IsFreeCharge         // simple assign
}

func Convert_shoptypes_Hotlines_etelecom_Hotlines(args []*shoptypes.Hotline) (outs []*etelecom.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Hotline, len(args))
	outs = make([]*etelecom.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_shoptypes_Hotline_etelecom_Hotline(args[i], &tmps[i])
	}
	return outs
}
