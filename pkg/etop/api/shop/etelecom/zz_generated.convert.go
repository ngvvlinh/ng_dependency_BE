// +build !generator

// Code generated by generator convert. DO NOT EDIT.

package etelecom

import (
	time "time"

	etelecom "o.o/api/etelecom"
	shop "o.o/api/top/int/shop"
	conversion "o.o/backend/pkg/common/conversion"
)

/*
Custom conversions: (none)

Ignored functions: (none)
*/

func RegisterConversions(s *conversion.Scheme) {
	registerConversions(s)
}

func registerConversions(s *conversion.Scheme) {
	s.Register((*etelecom.CallLog)(nil), (*shop.CallLog)(nil), func(arg, out interface{}) error {
		Convert_etelecom_CallLog_shop_CallLog(arg.(*etelecom.CallLog), out.(*shop.CallLog))
		return nil
	})
	s.Register(([]*etelecom.CallLog)(nil), (*[]*shop.CallLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_CallLogs_shop_CallLogs(arg.([]*etelecom.CallLog))
		*out.(*[]*shop.CallLog) = out0
		return nil
	})
	s.Register((*shop.CallLog)(nil), (*etelecom.CallLog)(nil), func(arg, out interface{}) error {
		Convert_shop_CallLog_etelecom_CallLog(arg.(*shop.CallLog), out.(*etelecom.CallLog))
		return nil
	})
	s.Register(([]*shop.CallLog)(nil), (*[]*etelecom.CallLog)(nil), func(arg, out interface{}) error {
		out0 := Convert_shop_CallLogs_etelecom_CallLogs(arg.([]*shop.CallLog))
		*out.(*[]*etelecom.CallLog) = out0
		return nil
	})
	s.Register((*etelecom.CreateCallLogFromCDRArgs)(nil), (*shop.CallLog)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateCallLogFromCDRArgs_shop_CallLog(arg.(*etelecom.CreateCallLogFromCDRArgs), out.(*shop.CallLog))
		return nil
	})
	s.Register((*etelecom.CreateExtensionArgs)(nil), (*shop.Extension)(nil), func(arg, out interface{}) error {
		Apply_etelecom_CreateExtensionArgs_shop_Extension(arg.(*etelecom.CreateExtensionArgs), out.(*shop.Extension))
		return nil
	})
	s.Register((*etelecom.Extension)(nil), (*shop.Extension)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Extension_shop_Extension(arg.(*etelecom.Extension), out.(*shop.Extension))
		return nil
	})
	s.Register(([]*etelecom.Extension)(nil), (*[]*shop.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Extensions_shop_Extensions(arg.([]*etelecom.Extension))
		*out.(*[]*shop.Extension) = out0
		return nil
	})
	s.Register((*shop.Extension)(nil), (*etelecom.Extension)(nil), func(arg, out interface{}) error {
		Convert_shop_Extension_etelecom_Extension(arg.(*shop.Extension), out.(*etelecom.Extension))
		return nil
	})
	s.Register(([]*shop.Extension)(nil), (*[]*etelecom.Extension)(nil), func(arg, out interface{}) error {
		out0 := Convert_shop_Extensions_etelecom_Extensions(arg.([]*shop.Extension))
		*out.(*[]*etelecom.Extension) = out0
		return nil
	})
	s.Register((*etelecom.ExtensionExternalData)(nil), (*shop.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_etelecom_ExtensionExternalData_shop_ExtensionExternalData(arg.(*etelecom.ExtensionExternalData), out.(*shop.ExtensionExternalData))
		return nil
	})
	s.Register(([]*etelecom.ExtensionExternalData)(nil), (*[]*shop.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_ExtensionExternalDatas_shop_ExtensionExternalDatas(arg.([]*etelecom.ExtensionExternalData))
		*out.(*[]*shop.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*shop.ExtensionExternalData)(nil), (*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		Convert_shop_ExtensionExternalData_etelecom_ExtensionExternalData(arg.(*shop.ExtensionExternalData), out.(*etelecom.ExtensionExternalData))
		return nil
	})
	s.Register(([]*shop.ExtensionExternalData)(nil), (*[]*etelecom.ExtensionExternalData)(nil), func(arg, out interface{}) error {
		out0 := Convert_shop_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(arg.([]*shop.ExtensionExternalData))
		*out.(*[]*etelecom.ExtensionExternalData) = out0
		return nil
	})
	s.Register((*etelecom.Hotline)(nil), (*shop.Hotline)(nil), func(arg, out interface{}) error {
		Convert_etelecom_Hotline_shop_Hotline(arg.(*etelecom.Hotline), out.(*shop.Hotline))
		return nil
	})
	s.Register(([]*etelecom.Hotline)(nil), (*[]*shop.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_etelecom_Hotlines_shop_Hotlines(arg.([]*etelecom.Hotline))
		*out.(*[]*shop.Hotline) = out0
		return nil
	})
	s.Register((*shop.Hotline)(nil), (*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		Convert_shop_Hotline_etelecom_Hotline(arg.(*shop.Hotline), out.(*etelecom.Hotline))
		return nil
	})
	s.Register(([]*shop.Hotline)(nil), (*[]*etelecom.Hotline)(nil), func(arg, out interface{}) error {
		out0 := Convert_shop_Hotlines_etelecom_Hotlines(arg.([]*shop.Hotline))
		*out.(*[]*etelecom.Hotline) = out0
		return nil
	})
}

//-- convert o.o/api/top/int/shop.CallLog --//

func Convert_etelecom_CallLog_shop_CallLog(arg *etelecom.CallLog, out *shop.CallLog) *shop.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.CallLog{}
	}
	convert_etelecom_CallLog_shop_CallLog(arg, out)
	return out
}

func convert_etelecom_CallLog_shop_CallLog(arg *etelecom.CallLog, out *shop.CallLog) {
	out.ID = arg.ID                                 // simple assign
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = arg.AccountID                   // simple assign
	out.HotlineID = arg.HotlineID                   // simple assign
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = arg.ExtensionID               // simple assign
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.ContactID = arg.ContactID                   // simple assign
	out.CreatedAt = arg.CreatedAt                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                   // simple assign
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
}

func Convert_etelecom_CallLogs_shop_CallLogs(args []*etelecom.CallLog) (outs []*shop.CallLog) {
	if args == nil {
		return nil
	}
	tmps := make([]shop.CallLog, len(args))
	outs = make([]*shop.CallLog, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_CallLog_shop_CallLog(args[i], &tmps[i])
	}
	return outs
}

func Convert_shop_CallLog_etelecom_CallLog(arg *shop.CallLog, out *etelecom.CallLog) *etelecom.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.CallLog{}
	}
	convert_shop_CallLog_etelecom_CallLog(arg, out)
	return out
}

func convert_shop_CallLog_etelecom_CallLog(arg *shop.CallLog, out *etelecom.CallLog) {
	out.ID = arg.ID                                 // simple assign
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = arg.AccountID                   // simple assign
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = arg.ExtensionID               // simple assign
	out.HotlineID = arg.HotlineID                   // simple assign
	out.ContactID = arg.ContactID                   // simple assign
	out.CreatedAt = arg.CreatedAt                   // simple assign
	out.UpdatedAt = arg.UpdatedAt                   // simple assign
}

func Convert_shop_CallLogs_etelecom_CallLogs(args []*shop.CallLog) (outs []*etelecom.CallLog) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.CallLog, len(args))
	outs = make([]*etelecom.CallLog, len(args))
	for i := range tmps {
		outs[i] = Convert_shop_CallLog_etelecom_CallLog(args[i], &tmps[i])
	}
	return outs
}

func Apply_etelecom_CreateCallLogFromCDRArgs_shop_CallLog(arg *etelecom.CreateCallLogFromCDRArgs, out *shop.CallLog) *shop.CallLog {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.CallLog{}
	}
	apply_etelecom_CreateCallLogFromCDRArgs_shop_CallLog(arg, out)
	return out
}

func apply_etelecom_CreateCallLogFromCDRArgs_shop_CallLog(arg *etelecom.CreateCallLogFromCDRArgs, out *shop.CallLog) {
	out.ID = 0                                      // zero value
	out.ExternalID = arg.ExternalID                 // simple assign
	out.AccountID = 0                               // zero value
	out.HotlineID = 0                               // zero value
	out.StartedAt = arg.StartedAt                   // simple assign
	out.EndedAt = arg.EndedAt                       // simple assign
	out.Duration = arg.Duration                     // simple assign
	out.Caller = arg.Caller                         // simple assign
	out.Callee = arg.Callee                         // simple assign
	out.AudioURLs = arg.AudioURLs                   // simple assign
	out.ExternalDirection = arg.ExternalDirection   // simple assign
	out.Direction = arg.Direction                   // simple assign
	out.ExtensionID = 0                             // zero value
	out.ExternalCallStatus = arg.ExternalCallStatus // simple assign
	out.ContactID = 0                               // zero value
	out.CreatedAt = time.Time{}                     // zero value
	out.UpdatedAt = time.Time{}                     // zero value
	out.CallState = arg.CallState                   // simple assign
	out.CallStatus = arg.CallStatus                 // simple assign
}

//-- convert o.o/api/top/int/shop.Extension --//

func Apply_etelecom_CreateExtensionArgs_shop_Extension(arg *etelecom.CreateExtensionArgs, out *shop.Extension) *shop.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.Extension{}
	}
	apply_etelecom_CreateExtensionArgs_shop_Extension(arg, out)
	return out
}

func apply_etelecom_CreateExtensionArgs_shop_Extension(arg *etelecom.CreateExtensionArgs, out *shop.Extension) {
	out.ID = 0                                    // zero value
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.CreatedAt = time.Time{}                   // zero value
	out.UpdatedAt = time.Time{}                   // zero value
}

func Convert_etelecom_Extension_shop_Extension(arg *etelecom.Extension, out *shop.Extension) *shop.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.Extension{}
	}
	convert_etelecom_Extension_shop_Extension(arg, out)
	return out
}

func convert_etelecom_Extension_shop_Extension(arg *etelecom.Extension, out *shop.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.CreatedAt = arg.CreatedAt                 // simple assign
	out.UpdatedAt = arg.UpdatedAt                 // simple assign
}

func Convert_etelecom_Extensions_shop_Extensions(args []*etelecom.Extension) (outs []*shop.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]shop.Extension, len(args))
	outs = make([]*shop.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Extension_shop_Extension(args[i], &tmps[i])
	}
	return outs
}

func Convert_shop_Extension_etelecom_Extension(arg *shop.Extension, out *etelecom.Extension) *etelecom.Extension {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Extension{}
	}
	convert_shop_Extension_etelecom_Extension(arg, out)
	return out
}

func convert_shop_Extension_etelecom_Extension(arg *shop.Extension, out *etelecom.Extension) {
	out.ID = arg.ID                               // simple assign
	out.UserID = arg.UserID                       // simple assign
	out.AccountID = arg.AccountID                 // simple assign
	out.HotlineID = arg.HotlineID                 // simple assign
	out.ExtensionNumber = arg.ExtensionNumber     // simple assign
	out.ExtensionPassword = arg.ExtensionPassword // simple assign
	out.ExternalData = nil                        // zero value
	out.CreatedAt = arg.CreatedAt                 // simple assign
	out.UpdatedAt = arg.UpdatedAt                 // simple assign
	out.DeletedAt = time.Time{}                   // zero value
}

func Convert_shop_Extensions_etelecom_Extensions(args []*shop.Extension) (outs []*etelecom.Extension) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Extension, len(args))
	outs = make([]*etelecom.Extension, len(args))
	for i := range tmps {
		outs[i] = Convert_shop_Extension_etelecom_Extension(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/top/int/shop.ExtensionExternalData --//

func Convert_etelecom_ExtensionExternalData_shop_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *shop.ExtensionExternalData) *shop.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.ExtensionExternalData{}
	}
	convert_etelecom_ExtensionExternalData_shop_ExtensionExternalData(arg, out)
	return out
}

func convert_etelecom_ExtensionExternalData_shop_ExtensionExternalData(arg *etelecom.ExtensionExternalData, out *shop.ExtensionExternalData) {
	out.ID = 0 // types do not match
}

func Convert_etelecom_ExtensionExternalDatas_shop_ExtensionExternalDatas(args []*etelecom.ExtensionExternalData) (outs []*shop.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]shop.ExtensionExternalData, len(args))
	outs = make([]*shop.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_ExtensionExternalData_shop_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

func Convert_shop_ExtensionExternalData_etelecom_ExtensionExternalData(arg *shop.ExtensionExternalData, out *etelecom.ExtensionExternalData) *etelecom.ExtensionExternalData {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.ExtensionExternalData{}
	}
	convert_shop_ExtensionExternalData_etelecom_ExtensionExternalData(arg, out)
	return out
}

func convert_shop_ExtensionExternalData_etelecom_ExtensionExternalData(arg *shop.ExtensionExternalData, out *etelecom.ExtensionExternalData) {
	out.ID = "" // types do not match
}

func Convert_shop_ExtensionExternalDatas_etelecom_ExtensionExternalDatas(args []*shop.ExtensionExternalData) (outs []*etelecom.ExtensionExternalData) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.ExtensionExternalData, len(args))
	outs = make([]*etelecom.ExtensionExternalData, len(args))
	for i := range tmps {
		outs[i] = Convert_shop_ExtensionExternalData_etelecom_ExtensionExternalData(args[i], &tmps[i])
	}
	return outs
}

//-- convert o.o/api/top/int/shop.Hotline --//

func Convert_etelecom_Hotline_shop_Hotline(arg *etelecom.Hotline, out *shop.Hotline) *shop.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &shop.Hotline{}
	}
	convert_etelecom_Hotline_shop_Hotline(arg, out)
	return out
}

func convert_etelecom_Hotline_shop_Hotline(arg *etelecom.Hotline, out *shop.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Name = arg.Name                         // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.Status = arg.Status                     // simple assign
	out.Description = arg.Description           // simple assign
}

func Convert_etelecom_Hotlines_shop_Hotlines(args []*etelecom.Hotline) (outs []*shop.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]shop.Hotline, len(args))
	outs = make([]*shop.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_etelecom_Hotline_shop_Hotline(args[i], &tmps[i])
	}
	return outs
}

func Convert_shop_Hotline_etelecom_Hotline(arg *shop.Hotline, out *etelecom.Hotline) *etelecom.Hotline {
	if arg == nil {
		return nil
	}
	if out == nil {
		out = &etelecom.Hotline{}
	}
	convert_shop_Hotline_etelecom_Hotline(arg, out)
	return out
}

func convert_shop_Hotline_etelecom_Hotline(arg *shop.Hotline, out *etelecom.Hotline) {
	out.ID = arg.ID                             // simple assign
	out.OwnerID = arg.OwnerID                   // simple assign
	out.Name = arg.Name                         // simple assign
	out.Hotline = arg.Hotline                   // simple assign
	out.Network = arg.Network                   // simple assign
	out.ConnectionID = arg.ConnectionID         // simple assign
	out.ConnectionMethod = arg.ConnectionMethod // simple assign
	out.CreatedAt = arg.CreatedAt               // simple assign
	out.UpdatedAt = arg.UpdatedAt               // simple assign
	out.DeletedAt = time.Time{}                 // zero value
	out.Status = arg.Status                     // simple assign
	out.Description = arg.Description           // simple assign
}

func Convert_shop_Hotlines_etelecom_Hotlines(args []*shop.Hotline) (outs []*etelecom.Hotline) {
	if args == nil {
		return nil
	}
	tmps := make([]etelecom.Hotline, len(args))
	outs = make([]*etelecom.Hotline, len(args))
	for i := range tmps {
		outs[i] = Convert_shop_Hotline_etelecom_Hotline(args[i], &tmps[i])
	}
	return outs
}
